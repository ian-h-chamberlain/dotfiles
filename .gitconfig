[alias]
    co = checkout
    br = branch
    ci = commit
    st = status
    unstage = reset HEAD --
    last = log -1 HEAD
    delete = branch -d
    ppull = pull -p --no-recurse-submodules
    pfetch = fetch -p
    hardreset = reset --hard @{u}
    fpush = push --force-with-lease
    ld = log --pretty=format:\"%C(yellow)%h\\ %ad%C(red)%d\\ %C(reset)%s%C(blue)\\ [%cn]\" --decorate --date=relative
    ls = !sh -c 'git log --reverse --no-merges --pretty=format:\"%C(yellow)%h %C(reset)%s\" --decorate \"$1\"..HEAD' -
    sw = switch
    softreset = reset --soft HEAD~
    default-branch = !git symbolic-ref refs/remotes/origin/HEAD | sed 's@^refs/remotes/origin/@@'
    branch-clean = !git branch --merged origin/\"$(git default-branch)\" | egrep -v \"[*+]|$(git default-branch)\\$\" | xargs -n 1 git branch --delete
    alias = "!sh -c '[ $# = 2 ] && git config --global alias.\"$1\" \"$2\" && exit 0 || echo \"usage: git alias <new alias> <original command>\" >&2 && exit 1' -"
    aliases = "!echo [alias]; git config --get-regexp 'alias[.].*' | sed -E 's/alias[.]([^[:space:]]+)/\t\\1 =/'"
    bc = branch-clean
    bpull = !sh -c 'git fetch origin $1:$1' -
    vdiff = difftool -d HEAD
    conflicts = !sh -c 'git diff --name-only --diff-filter=U --line-prefix="$(git rev-parse --show-toplevel)/"'
    local-branch = "!git branch --format '%(refname:short) %(upstream:trackshort)' | awk '{if (!$2 || $2 == \"[gone]\") print $1;}'"
    local-branch-clean = "!for b in $(git local-branch); do echo \"$b\"; git ld --color=always \"$b\" \"^$(git default-branch)\" | sed \"s/^/    /\"; printf \"\\x1b[B\\x1b[m\\n\"; read -r -p \"Delete branch? [y/N]: \"; if [[ \"$REPLY\" =~ ^[Yy]$ ]]; then git branch -D \"$b\"; fi; done #"
    # Helpers for quoting/unquoting git aliases, from https://stackoverflow.com/questions/38057261/git-config-alias-escaping
    quote-string = "!read -r l; printf \\\"!; printf %s \"$l\" | sed 's/\\([\\\"]\\)/\\\\\\1/g'; printf \" #\\\"\\n\" #"
    quote-string-undo = "!read -r l; printf %s \"$l\" | sed 's/\\\\\\([\\\"]\\)/\\1/g'; printf \"\\n\" #"
	assign-pr = "!f() { PR=\"$1\"; shift; BR=\"${1:-$(git symbolic-ref HEAD | sed 's#refs/heads/##')}\"; git config \"branch.${BR}.github-pr-owner-number\" \"$(gh repo view --json nameWithOwner -q '.nameWithOwner' | tr '/' '#')#$PR\"; }; f"
	git = !git
	merge-latest = !sh -c \"git bpull $1 && git merge $1\"
	recommit = !git commit -eF \"$(git rev-parse --git-dir)/COMMIT_EDITMSG\"
	dir-diff = ! COMPARE_FOLDERS=DIFF git difftool --dir-diff
	sswitch = !sh -c 'git stash && git switch \"$@\" && git stash pop' -
	ssw = sswitch
	su = submodule update
[core]
    editor = vim
	quotePath = true
[diff]
	tool = code
	context = 5
[difftool]
    trustExitCode = true
    prompt = false
[difftool "vimdiff"]
    cmd = vim -c "\"DirDiff $LOCAL $REMOTE\""
[difftool "code"]
    cmd = code --wait --diff --new-window $LOCAL $REMOTE
[merge]
    renameLimit = 2000
	autoStash = true
[submodule]
    recurse = true
[push]
    # Override 'submodule.recurse' to make rpush work without warnings
    recurseSubmodules = no
	autoSetupRemote = true
	default = current
[pull]
    rebase = false
[commit]
    gpgsign = true
[gpg]
    program = gpg
[checkout]
    defaultRemote = origin
[init]
	defaultBranch = main
[fetch]
	recurseSubmodules = no
[protocol "file"]
	allow = always
[gui]
	editor = code
[filter "lfs"]
	required = true
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
[advice]
    detachedHead = false
# NOTE: This has to come last to override other settings, e.g. user.email
[include]
    path = ~/.gitconfig.local
