#!/usr/bin/env bash

set -o errexit
set -o nounset

# Start from the base yadm directory
cd "$(dirname "${BASH_SOURCE[0]}")"
cd ..

if [[ "$YADM_HOOK_FULL_COMMAND" =~ (^| )(--no-verify|-n)($| ) ]]; then
    # Same as `git commit --no-verify`
    exit 0
fi

# shellcheck source=../utils.sh
source utils.sh

# skip checks for merge commits:
if is_merging; then
    exit 0
fi

if command -v shellcheck >/dev/null; then
    SHELLCHECK_SOURCES=(
        bootstrap
        utils.sh
        hooks/*
    )

    if ! shellcheck --source-path=SCRIPTDIR "${SHELLCHECK_SOURCES[@]}"; then
        exit_with_error "Some files failed the shellcheck linter!"
    fi
fi

if ! git rev-parse -q --verify MERGE_HEAD && command -v code >/dev/null; then
    if ! check_vscode_exts &>/dev/null; then
        # Update vscode extension list to be current with installed extensions
        list_vscode_exts >"$VSCODE_EXTENSIONS"
        warn "$VSCODE_EXTENSIONS was out-of-date. It has been updated automatically."
    fi
fi

# Check for unstaged changes (typically new functions/completions or config files)
CHECK_UNTRACKED_DIRS=(
    ~/.config/fish/
    ~/.config/thefuck/
)
untracked_files=$(
    yadm ls-files --full-name --exclude-standard --others -- "${CHECK_UNTRACKED_DIRS[@]}"
)
if [[ $untracked_files ]]; then
    exit_with_error "Untracked files found in repository:" "$untracked_files"
fi

fish -c fish_check_saved_functions
failed_files=$?
if [[ $failed_files -ne 0 ]] ; then
    exit_with_error "$failed_files files failed fish lint/format checks!"
fi

# TODO: convert other scripts to fish instead of bash (except bootstrap)
