#!/usr/bin/env bash

set -o errexit
set -o nounset
set -o pipefail

# Global vars used in multiple functions
OS_NAME=$(uname -s)
VSCODE_EXTENSIONS=~/.config/vscode/extensions.txt

function confirm() {
    read -r -n 1 -p "$1 [Y/n]: "

    # Default to yes for empty input
    if [[ "$REPLY" == "" ]]; then
        return 0
    else
        echo
    fi

    # Only 'y' input is valid if something was typed
    if [[ "$REPLY" =~ ^[Yy]$ ]]; then
        return 0
    fi

    # Abort, it's safe to assume we can't continue
    echo "Operation cancelled."
    exit 1
}

function check_vscode_exts() {
    # TODO: this should use `--show-versions`
    diff "$VSCODE_EXTENSIONS" \
        <(code --list-extensions) \
        --unchanged-line-format=""  \
        "$@"
}

function install_vscode_exts() {
    xargs printf -- "--install-extension %s " <"$VSCODE_EXTENSIONS" | xargs code
    echo

    # TODO: some kind of vscode extension "prune" command. Or just uninstall all every time?
    if ! check_vscode_exts &>/dev/null; then
        # This check may not be needed since `code` errors if it can't install
        local UNINSTALLED
        UNINSTALLED=$(check_vscode_exts \
            --old-line-format="    %L" \
            --new-line-format="" \
            || :
        )

        if [[ -n $UNINSTALLED ]]; then
            echo "ERROR: some VSCode extensions were not installed:"
            echo "$UNINSTALLED"
            echo
            return 1
        fi

        local INSTALLED
        INSTALLED=$(check_vscode_exts \
            --old-line-format="" \
            --new-line-format="    %L" \
            || :
        )
        if [[ -n $INSTALLED ]]; then
            echo "WARNING: some installed VSCode extensions were not found in $VSCODE_EXTENSIONS:"
            echo "$INSTALLED"
            echo
        fi
    fi
}

function setup_macos() {
    # Install homebrew and use it to install basic packages/apps
    if ! command -v brew &>/dev/null && \
        confirm "'brew' command not found. Install it? "
    then
        bash -c '$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)'
        echo
    fi

    # TODO: should there be a step to `brew bundle cleanup` here?
    if ! brew bundle --global check && \
        confirm "Install packages from Brewfile? "
    then
        brew bundle --global install
        echo
    fi

    # TODO: pre-commit which dumps extensions
    if ! check_vscode_exts &>/dev/null && \
        confirm "Install VSCode extensions?"
    then
        install_vscode_exts
    fi

    echo "macOS setup is complete!"
}

function setup_linux() {
    # TBD. Might need separate function each for NixOS / Termux
    # To consider: brew on linux? Gets a bunch of stuff for free I guess...
    :
}

function main() {
    yadm submodule update --init

    GPG_TTY=$(tty)
    export GPG_TTY
    yadm decrypt

    if [[ "$OS_NAME" == "Darwin" ]]; then
        setup_macos
    elif [[ "$OS_NAME" == "Linux" ]]; then
        setup_linux
    fi
}

main
