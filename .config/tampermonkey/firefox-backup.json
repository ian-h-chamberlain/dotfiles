{
    "created_by": "Tampermonkey",
    "scripts": [
        {
            "enabled": true,
            "file_url": "https://greasyfork.org/scripts/38582-wanikani-open-framework/code/Wanikani%20Open%20Framework.user.js",
            "name": "Wanikani Open Framework",
            "options": {
                "check_for_updates": true,
                "comment": null,
                "compat_foreach": false,
                "compat_metadata": false,
                "compat_powerful_this": null,
                "compat_prototypes": false,
                "compat_wrappedjsobject": false,
                "compatopts_for_requires": true,
                "noframes": null,
                "override": {
                    "merge_connects": true,
                    "merge_excludes": true,
                    "merge_includes": true,
                    "merge_matches": true,
                    "orig_connects": [],
                    "orig_excludes": [],
                    "orig_includes": [
                        "/^https://(www|preview).wanikani.com//"
                    ],
                    "orig_matches": [],
                    "orig_noframes": null,
                    "orig_run_at": "document-start",
                    "use_blockers": [],
                    "use_connects": [],
                    "use_excludes": [],
                    "use_includes": [],
                    "use_matches": []
                },
                "run_at": null,
                "tab_types": null,
                "unwrap": null
            },
            "position": 1,
            "source": "",
            "storage": {
                "data": {},
                "ts": 1607436649580
            },
            "uuid": "e6f9fcca-44eb-425c-b066-541eb962863d"
        },
        {
            "enabled": false,
            "file_url": "https://userscripts-mirror.org/scripts/source/174135.user.js",
            "name": "WaniKani Improve",
            "options": {
                "awareOfChrome": false,
                "check_for_updates": true,
                "comment": null,
                "compat_arrayleft": false,
                "compat_foreach": false,
                "compat_forvarin": false,
                "compat_metadata": false,
                "compat_powerful_this": null,
                "compat_uW_gmonkey": false,
                "compat_wrappedjsobject": false,
                "compatopts_for_requires": true,
                "noframes": null,
                "override": {
                    "merge_connects": true,
                    "merge_excludes": true,
                    "merge_includes": true,
                    "merge_matches": true,
                    "orig_excludes": [],
                    "orig_includes": [
                        "https://www.wanikani.com/review/session",
                        "http://www.wanikani.com/review/session"
                    ],
                    "orig_matches": [],
                    "orig_noframes": null,
                    "orig_run_at": "document-end",
                    "use_blockers": [],
                    "use_connects": [],
                    "use_excludes": [],
                    "use_includes": [],
                    "use_matches": []
                },
                "run_at": null,
                "tab_types": null
            },
            "position": 2,
            "requires": [
                {
                    "meta": {
                        "mimetype": "text/javascript",
                        "name": "jquery.min.js",
                        "ts": 1630083357100,
                        "url": "https://cdnjs.cloudflare.com/ajax/libs/jquery/2.0.3/jquery.min.js"
                    },
                    "source": ""
                },
                {
                    "meta": {
                        "mimetype": "text/javascript",
                        "name": "jquery.qtip.min.js",
                        "ts": 1630083356994,
                        "url": "https://cdnjs.cloudflare.com/ajax/libs/qtip2/2.2.0/jquery.qtip.min.js"
                    },
                    "source": ""
                }
            ],
            "resources": [
                {
                    "meta": {
                        "mimetype": "text/css",
                        "name": "jquery.qtip.min.css",
                        "ts": 1630083356995,
                        "url": "https://cdnjs.cloudflare.com/ajax/libs/qtip2/2.2.0/jquery.qtip.min.css"
                    },
                    "source": ""
                }
            ],
            "source": "",
            "storage": {
                "data": {},
                "ts": 1607436649591
            },
            "uuid": "38820d1c-0915-49b6-a73f-2b2d2f9cfbd9"
        },
        {
            "enabled": true,
            "file_url": "https://greasyfork.org/scripts/23696-wanikani-override/code/Wanikani%20Override.user.js",
            "name": "Wanikani Override",
            "options": {
                "awareOfChrome": false,
                "check_for_updates": true,
                "comment": null,
                "compat_arrayleft": false,
                "compat_foreach": false,
                "compat_forvarin": false,
                "compat_metadata": false,
                "compat_powerful_this": null,
                "compat_uW_gmonkey": false,
                "compat_wrappedjsobject": false,
                "compatopts_for_requires": true,
                "noframes": null,
                "override": {
                    "merge_connects": true,
                    "merge_excludes": true,
                    "merge_includes": true,
                    "merge_matches": true,
                    "orig_excludes": [],
                    "orig_includes": [
                        "http://www.wanikani.com/review/session*",
                        "https://www.wanikani.com/review/session*"
                    ],
                    "orig_matches": [],
                    "orig_noframes": null,
                    "orig_run_at": "document-idle",
                    "use_blockers": [],
                    "use_connects": [],
                    "use_excludes": [],
                    "use_includes": [],
                    "use_matches": []
                },
                "run_at": null,
                "tab_types": null
            },
            "position": 3,
            "requires": [
                {
                    "meta": {
                        "mimetype": "text/javascript",
                        "name": "jquery-1.11.2.min.js",
                        "ts": 1649272273080,
                        "url": "http://code.jquery.com/jquery-1.11.2.min.js"
                    },
                    "source": ""
                }
            ],
            "source": "Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgIFdhbmlrYW5pIE92ZXJyaWRlCi8vIEBuYW1lc3BhY2UgICB3a292ZXJyaWRlCi8vIEBkZXNjcmlwdGlvbiBBZGRzIGFuICJJZ25vcmUgQW5zd2VyIiBidXR0b24gZHVyaW5nIHJldmlld3MgdGhhdCBtYWtlcyBXYW5pS2FuaSBpZ25vcmUgdGhlIGN1cnJlbnQgYW5zd2VyICh1c2VmdWwgaWYsIGZvciBleGFtcGxlLCB5b3UgbWFkZSBhIHN0dXBpZCB0eXBvKQovLyBAaW5jbHVkZSAgICAgaHR0cDovL3d3dy53YW5pa2FuaS5jb20vcmV2aWV3L3Nlc3Npb24qCi8vIEBpbmNsdWRlICAgICBodHRwczovL3d3dy53YW5pa2FuaS5jb20vcmV2aWV3L3Nlc3Npb24qCi8vIEB2ZXJzaW9uICAgICAxLjIKLy8gQGF1dGhvciAgICAgIE1lbXBvCi8vIEBncmFudCAgICAgICBHTV9hZGRTdHlsZQovLyBAZ3JhbnQgICAgICAgdW5zYWZlV2luZG93Ci8vIEByZXF1aXJlICAgICBodHRwOi8vY29kZS5qcXVlcnkuY29tL2pxdWVyeS0xLjExLjIubWluLmpzCi8vIEBsaWNlbnNlICAgICBHUEwgdmVyc2lvbiAzIG9yIGFueSBsYXRlciB2ZXJzaW9uOyBodHRwOi8vd3d3LmdudS5vcmcvY29weWxlZnQvZ3BsLmh0bWwKLy8gPT0vVXNlclNjcmlwdD09CgovL09yaWdpbmFsIGF1dGhvcjogUnVpIFBpbmhlaXJvCgovLyBFU0Mgc2hvcnRjdXQKCgovKgogKiBEZWJ1ZyBTZXR0aW5ncwogKi8KdmFyIGRlYnVnTG9nRW5hYmxlZCA9IHRydWU7CnZhciBzY3JpcHRTaG9ydE5hbWUgPSAnV0tPJzsKc2NyaXB0TG9nID0gZGVidWdMb2dFbmFibGVkID8gZnVuY3Rpb24gKG1zZykgewogIGlmICh0eXBlb2YgbXNnID09PSAnc3RyaW5nJykgewogICAgY29uc29sZS5sb2coc2NyaXB0U2hvcnROYW1lICsgJzogJyArIG1zZyk7CiAgfSBlbHNlIHsKICAgIGNvbnNvbGUubG9nKG1zZyk7CiAgfQp9CiA6IGZ1bmN0aW9uICgpIHsKfTsKLyoKICogT3RoZXIgc2V0dGluZ3MKICovCnZhciBwcmVmQWxsb3dVbmlnbm9yZSA9IHRydWU7Ci8qCiAqICJJZ25vcmUgQW5zd2VyIiBCdXR0b24gQ2xpY2sKICovCnZhciBBY3Rpb25FbnVtID0gT2JqZWN0LmZyZWV6ZSh7CiAgaWdub3JlOiAwLAogIHVuaWdub3JlOiAxCn0pOwpmdW5jdGlvbiBXS09faWdub3JlQW5zd2VyKCkKewogIHRyeQogIHsKICAgIC8qIENoZWNrIGlmIHRoZSBjdXJyZW50IGl0ZW0gd2FzIGFuc3dlcmVkIGluY29ycmVjdGx5ICovCiAgICB2YXIgZWxtbnRzID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgnaW5jb3JyZWN0Jyk7CiAgICB2YXIgZWxtbnRzMiA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoJ1dLT19pZ25vcmVkJyk7CiAgICAKICAgIHZhciBjdXJBY3Rpb247CiAgICBpZiAoIWlzRW1wdHkoZWxtbnRzWzBdKSkgLy8gQ3VycmVudCBhbnN3ZXIgaXMgd3JvbmcKICAgIGN1ckFjdGlvbiA9IEFjdGlvbkVudW0uaWdub3JlOwogICAgIGVsc2UgaWYgKHByZWZBbGxvd1VuaWdub3JlICYmICFpc0VtcHR5KGVsbW50czJbMF0pKSAvLyBDdXJyZW50IGFuc3dlciBpcyBpZ25vcmVkCiAgICBjdXJBY3Rpb24gPSBBY3Rpb25FbnVtLnVuaWdub3JlOwogICAgIGVsc2UKICAgIC8vIEVpdGhlciB0aGVyZSBpcyBubyBjdXJyZW50IGFuc3dlciwgb3IgaXQncyBjb3JyZWN0CiAgICB7CiAgICAgIGFsZXJ0KCdXS086IEN1cnJlbnQgaXRlbSB3YXNuXCd0IGFuc3dlcmVkIGluY29ycmVjdGx5LCBub3IgaWdub3JlZCBwcmV2aW91c2x5IScpOwogICAgICByZXR1cm4gZmFsc2U7CiAgICB9CiAKICAgIC8qIEdyYWIgaW5mb3JtYXRpb24gYWJvdXQgY3VycmVudCBxdWVzdGlvbiAqLwogCiAgICB2YXIgY3VySXRlbSA9ICQualN0b3JhZ2UuZ2V0KCdjdXJyZW50SXRlbScpOwogICAgdmFyIHF1ZXN0aW9uVHlwZSA9ICQualN0b3JhZ2UuZ2V0KCdxdWVzdGlvblR5cGUnKTsKIAogICAgLyogQnVpbGQgaXRlbSBuYW1lICovCiAgICB2YXIgaXRlbU5hbWU7CiAgICBpZiAoY3VySXRlbS5yYWQpCiAgICBpdGVtTmFtZSA9ICdyJzsKICAgICBlbHNlIGlmIChjdXJJdGVtLmthbikKICAgIGl0ZW1OYW1lID0gJ2snOwogICAgIGVsc2UKICAgIGl0ZW1OYW1lID0gJ3YnOwogICAgaXRlbU5hbWUgKz0gY3VySXRlbS5pZDsKICAgIHNjcmlwdExvZyhpdGVtTmFtZSk7CiAgICAvKiBHcmFiIGl0ZW0gZnJvbSBqU3RvcmFnZS4KICAgICAgICAgKiAKICAgICAgICAgKiBpdGVtLnJjIGFuZCBpdGVtLm1jID0+IFJlYWRpbmcvTWVhbmluZyBDb21wbGV0ZWQgKGlmIGFuc3dlcmVkIHRoZSBpdGVtIGNvcnJlY3RseSkKICAgICAgICAgKiBpdGVtLnJpIGFuZCBpdGVtLm1pID0+IFJlYWRpbmcvTWVhbmluZyBJbnZhbGlkIChudW1iZXIgb2YgbWlzdGFrZXMgYmVmb3JlIGFuc3dlcmluZyBjb3JyZWN0bHkpCiAgICAgICAgICovCiAgICB2YXIgaXRlbSA9ICQualN0b3JhZ2UuZ2V0KGl0ZW1OYW1lKSB8fCB7CiAgICB9OwogICAgLyogVXBkYXRlIHRoZSBpdGVtIGRhdGEgKi8KICAgIGlmIChxdWVzdGlvblR5cGUgPT09ICdtZWFuaW5nJykKICAgIHsKICAgICAgaWYgKCEoJ21pJyBpbiBpdGVtKSB8fCBpc0VtcHR5KGl0ZW0ubWkpKQogICAgICB7CiAgICAgICAgdGhyb3cgRXJyb3IoJ2l0ZW0ubWkgdW5kZWZpbmVkJyk7CiAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICB9IAogICAgICBlbHNlIGlmIChpdGVtLm1pIDwgMCB8fCAoaXRlbS5taSA9PSAwICYmIGN1ckFjdGlvbiA9PSBBY3Rpb25FbnVtLmlnbm9yZSkpCiAgICAgIHsKICAgICAgICB0aHJvdyBFcnJvcignaXRlbS5taSB0b28gc21hbGwnKTsKICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgIH0KICAgICAgaWYgKGN1ckFjdGlvbiA9PSBBY3Rpb25FbnVtLmlnbm9yZSkKICAgICAgaXRlbS5taSAtPSAxOwogICAgICAgZWxzZQogICAgICBpdGVtLm1pICs9IDE7CiAgICAgIGRlbGV0ZSBpdGVtLm1jOwogICAgfSAKICAgIGVsc2UKICAgIHsKICAgICAgaWYgKCEoJ3JpJyBpbiBpdGVtKSB8fCBpc0VtcHR5KGl0ZW0ucmkpKQogICAgICB7CiAgICAgICAgdGhyb3cgRXJyb3IoJ2l0ZW0ucmkgdW5kZWZpbmVkJyk7CiAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICB9IAogICAgICBlbHNlIGlmIChpdGVtLnJpIDwgMCB8fCAoaXRlbS5yaSA9PSAwICYmIGN1ckFjdGlvbiA9PSBBY3Rpb25FbnVtLmlnbm9yZSkpCiAgICAgIHsKICAgICAgICB0aHJvdyBFcnJvcignaS5yaSB0b28gc21hbGwnKTsKICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgIH0KICAgICAgaWYgKGN1ckFjdGlvbiA9PSBBY3Rpb25FbnVtLmlnbm9yZSkKICAgICAgaXRlbS5yaSAtPSAxOwogICAgICAgZWxzZQogICAgICBpdGVtLnJpICs9IDE7CiAgICAgIGRlbGV0ZSBpdGVtLnJjOwogICAgfQogICAgLyogU2F2ZSB0aGUgbmV3IHN0YXRlIGJhY2sgaW50byBqU3RvcmFnZSAqLwogCiAgICAkLmpTdG9yYWdlLnNldChpdGVtTmFtZSwgaXRlbSk7CiAgICAvKiBNb2RpZnkgdGhlIHF1ZXN0aW9ucyBjb3VudGVyIGFuZCB3cm9uZyBjb3VudGVyIGFuZCBjaGFuZ2UgdGhlIHN0eWxlIG9mIHRoZSBhbnN3ZXIgZmllbGQgKi8KICAgIHZhciB3cm9uZ0NvdW50ID0gJC5qU3RvcmFnZS5nZXQoJ3dyb25nQ291bnQnKTsKICAgIHZhciBxdWVzdGlvbkNvdW50ID0gJC5qU3RvcmFnZS5nZXQoJ3F1ZXN0aW9uQ291bnQnKTsKICAgIGlmIChjdXJBY3Rpb24gPT0gQWN0aW9uRW51bS5pZ25vcmUpCiAgICB7CiAgICAgICQualN0b3JhZ2Uuc2V0KCd3cm9uZ0NvdW50Jywgd3JvbmdDb3VudCAtIDEpOwogICAgICAkLmpTdG9yYWdlLnNldCgncXVlc3Rpb25Db3VudCcsIHF1ZXN0aW9uQ291bnQgLSAxKTsKICAgICAgJCgnI2Fuc3dlci1mb3JtIGZpZWxkc2V0JykucmVtb3ZlQ2xhc3MoJ2luY29ycmVjdCcpOwogICAgICAkKCcjYW5zd2VyLWZvcm0gZmllbGRzZXQnKS5hZGRDbGFzcygnV0tPX2lnbm9yZWQnKTsKICAgIH0gCiAgICBlbHNlCiAgICB7CiAgICAgICQualN0b3JhZ2Uuc2V0KCd3cm9uZ0NvdW50Jywgd3JvbmdDb3VudCArIDEpOwogICAgICAkLmpTdG9yYWdlLnNldCgncXVlc3Rpb25Db3VudCcsIHF1ZXN0aW9uQ291bnQgKyAxKTsKICAgICAgJCgnI2Fuc3dlci1mb3JtIGZpZWxkc2V0JykucmVtb3ZlQ2xhc3MoJ1dLT19pZ25vcmVkJyk7CiAgICAgICQoJyNhbnN3ZXItZm9ybSBmaWVsZHNldCcpLmFkZENsYXNzKCdpbmNvcnJlY3QnKTsKICAgIH0KICAgIHJldHVybiB0cnVlOwogIH0gCiAgY2F0Y2ggKGVycikgewogICAgbG9nRXJyb3IoZXJyKTsKICB9Cn0KLyoKICogQmluZCAnficgYXMgYSBob3RrZXkgCiAqLwogCmZ1bmN0aW9uIGJpbmRIb3RrZXkoKQp7CiAgalF1ZXJ5KGRvY3VtZW50KS5vbigna2V5ZG93bi5yZXZpZXdTY3JlZW4nLCBmdW5jdGlvbiAoZXZlbnQpCiAgewogICAgaWYgKCQoJyNyZXZpZXdzJykuaXMoJzp2aXNpYmxlJykgJiYgISQoJyo6Zm9jdXMnKS5pcygndGV4dGFyZWEsIGlucHV0JykpCiAgICB7CiAgICAgIC8vYWxlcnQoJ2tleWNvZGU6ICcgKyBldmVudC5rZXlDb2RlKTsKICAgICAgc3dpdGNoIChldmVudC5rZXlDb2RlKSB7CiAgICAgICAgLy9jYXNlIDE3NjogLy9GaXJlZm94ICd+JwogICAgICAgIC8vY2FzZSAxOTI6IC8vQ2hyb21lICd+JwogICAgICAgIGNhc2UgMjc6IC8vIEVTQyBCdXR0b24KICAgICAgICAgIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpOwogICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTsKICAgICAgICAgIGlmICgkKCcjdXNlci1yZXNwb25zZScpLmlzKCc6ZGlzYWJsZWQnKSkKICAgICAgICAgICBXS09faWdub3JlQW5zd2VyKCk7CiAgICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICAgICBicmVhazsKICAgICAgfQogICAgfQogIH0pOwp9Ci8qCiAqIEluamVjdCBJZ25vcmUgQnV0dG9uCiAqLwogCmZ1bmN0aW9uIGFkZElnbm9yZUFuc3dlckJ0bigpCnsKICB2YXIgZm9vdGVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ2Zvb3RlcicpLAogICAgICAkYnRuID0galF1ZXJ5KCc8ZGl2IGlkPSJXS09fYnV0dG9uIiB0aXRsZT0iSWdub3JlIEFuc3dlciI+SWdub3JlIEFuc3dlcjwvZGl2PicpLm9uKCdjbGljaycsIFdLT19pZ25vcmVBbnN3ZXIpOwogIGpRdWVyeShmb290ZXJbMF0pLnByZXBlbmQoJGJ0bik7Cn0KLyoKICogUHJlcGFyZXMgdGhlIHNjcmlwdAogKi8KIApmdW5jdGlvbiBzY3JpcHRJbml0KCkKewogIC8vIEFkZCBnbG9iYWwgQ1NTIHN0eWxlcwogIEdNX2FkZFN0eWxlKCcjV0tPX2J1dHRvbiB7YmFja2dyb3VuZC1jb2xvcjogI0NDMDAwMDsgY29sb3I6ICNGRkZGRkY7IGN1cnNvcjogcG9pbnRlcjsgZGlzcGxheTogaW5saW5lLWJsb2NrOyBmb250LXNpemU6IDAuODEyNWVtOyBwYWRkaW5nOiAxMHB4OyB2ZXJ0aWNhbC1hbGlnbjogYm90dG9tO30nKTsKICBHTV9hZGRTdHlsZSgnI2Fuc3dlci1mb3JtIGZpZWxkc2V0LldLT19pZ25vcmVkIGlucHV0W3R5cGU9InRleHQiXTotbW96LXBsYWNlaG9sZGVyLCAjYW5zd2VyLWZvcm0gZmllbGRzZXQuV0tPX2lnbm9yZWQgaW5wdXRbdHlwZT0idGV4dCJdOi1tb3otcGxhY2Vob2xkZXIge2NvbG9yOiAjRkZGRkZGOyBmb250LWZhbWlseTogIlNvdXJjZSBTYW5zIFBybyIsc2Fucy1zZXJpZjsgZm9udC13ZWlnaHQ6IDMwMDsgdGV4dC1zaGFkb3c6IG5vbmU7IHRyYW5zaXRpb246IGNvbG9yIDAuMTVzIGxpbmVhciAwczsgfSAjYW5zd2VyLWZvcm0gZmllbGRzZXQuV0tPX2lnbm9yZWQgYnV0dG9uLCAjYW5zd2VyLWZvcm0gZmllbGRzZXQuV0tPX2lnbm9yZWQgaW5wdXRbdHlwZT0idGV4dCJdLCAjYW5zd2VyLWZvcm0gZmllbGRzZXQuV0tPX2lnbm9yZWQgaW5wdXRbdHlwZT0idGV4dCJdOmRpc2FibGVkIHsgYmFja2dyb3VuZC1jb2xvcjogI0ZGQ0MwMCAhaW1wb3J0YW50OyB9Jyk7CiAgc2NyaXB0TG9nKCdsb2FkZWQnKTsKICAvLyBTZXQgdXAgaG9va3MKICB0cnkKICB7CiAgICBhZGRJZ25vcmVBbnN3ZXJCdG4oKTsKICAgIGJpbmRIb3RrZXkoKTsKICB9IAogIGNhdGNoIChlcnIpIHsKICAgIGxvZ0Vycm9yKGVycik7CiAgfQp9Ci8qCiAqIEhlbHBlciBGdW5jdGlvbnMvVmFyaWFibGVzCiAqLwogCi8vdXNlICdqUXVlcnknIGZvciBncmVhc2Vtb25rZXkncyB2ZXJzaW9uLCAkIGlzIFdLJ3MgalF1ZXJ5CiAKJCA9IHVuc2FmZVdpbmRvdy4kOwpmdW5jdGlvbiBpc0VtcHR5KHZhbHVlKSB7CiAgcmV0dXJuICh0eXBlb2YgdmFsdWUgPT09ICd1bmRlZmluZWQnIHx8IHZhbHVlID09PSBudWxsKTsKfQovKgogKiBFcnJvciBoYW5kbGluZwogKiBDYW4gdXNlICdlcnJvci5zdGFjaycsIG5vdCBjcm9zcy1icm93c2VyICh0aG91Z2ggaXQgc2hvdWxkIHdvcmsgb24gRmlyZWZveCBhbmQgQ2hyb21lKQogKi8KIApmdW5jdGlvbiBsb2dFcnJvcihlcnJvcikKewogIHZhciBzdGFja01lc3NhZ2UgPSAnJzsKICBpZiAoJ3N0YWNrJyBpbiBlcnJvcikKICBzdGFja01lc3NhZ2UgPSAnXG5cdFN0YWNrOiAnICsgZXJyb3Iuc3RhY2s7CiAgY29uc29sZS5lcnJvcihzY3JpcHRTaG9ydE5hbWUgKyAnIEVycm9yOiAnICsgZXJyb3IubmFtZSArICdcblx0TWVzc2FnZTogJyArIGVycm9yLm1lc3NhZ2UgKyBzdGFja01lc3NhZ2UpOwp9Ci8qCiAqIFN0YXJ0IHRoZSBzY3JpcHQKICovCiAKc2NyaXB0SW5pdCgpOwoKLy8gSG9vayBpbnRvIEFwcCBTdG9yZQp0cnkgeyAkKCcuYXBwLXN0b3JlLW1lbnUtaXRlbScpLnJlbW92ZSgpOyAkKCc8bGkgY2xhc3M9ImFwcC1zdG9yZS1tZW51LWl0ZW0iPjxhIGhyZWY9Imh0dHBzOi8vY29tbXVuaXR5LndhbmlrYW5pLmNvbS90L3RoZXJlLWFyZS1zby1tYW55LXVzZXItc2NyaXB0cy1ub3ctdGhhdC1kaXNjb3ZlcmluZy10aGVtLWlzLWhhcmQvMjA3MDkiPkFwcCBTdG9yZTwvYT48L2xpPicpLmluc2VydEJlZm9yZSgkKCcubmF2YmFyIC5kcm9wZG93bi1tZW51IC5uYXYtaGVhZGVyOmNvbnRhaW5zKCJBY2NvdW50IiknKSk7IHdpbmRvdy5hcHBTdG9yZVJlZ2lzdHJ5ID0gd2luZG93LmFwcFN0b3JlUmVnaXN0cnkgfHwge307IHdpbmRvdy5hcHBTdG9yZVJlZ2lzdHJ5W0dNX2luZm8uc2NyaXB0LnV1aWRdID0gR01faW5mbzsgbG9jYWxTdG9yYWdlLmFwcFN0b3JlUmVnaXN0cnkgPSBKU09OLnN0cmluZ2lmeShhcHBTdG9yZVJlZ2lzdHJ5KTsgfSBjYXRjaCAoZSkge30=",
            "storage": {
                "data": {},
                "ts": 1607436649612
            },
            "uuid": "7da2a58d-d2aa-4e58-81fd-d5c8b940fca5"
        },
        {
            "enabled": true,
            "file_url": "https://greasyfork.org/scripts/13475-wanikani-ultimate-timeline/code/Wanikani%20Ultimate%20Timeline.user.js",
            "name": "Wanikani Ultimate Timeline",
            "options": {
                "check_for_updates": true,
                "comment": null,
                "compat_foreach": false,
                "compat_metadata": false,
                "compat_powerful_this": null,
                "compat_prototypes": false,
                "compat_wrappedjsobject": false,
                "compatopts_for_requires": true,
                "noframes": null,
                "override": {
                    "merge_connects": true,
                    "merge_excludes": true,
                    "merge_includes": true,
                    "merge_matches": true,
                    "orig_connects": [],
                    "orig_excludes": [],
                    "orig_includes": [
                        "/^https://(www|preview).wanikani.com/(dashboard)?$/"
                    ],
                    "orig_matches": [],
                    "orig_noframes": null,
                    "orig_run_at": "document-end",
                    "use_blockers": [],
                    "use_connects": [],
                    "use_excludes": [],
                    "use_includes": [],
                    "use_matches": []
                },
                "run_at": null,
                "tab_types": null
            },
            "position": 4,
            "source": "",
            "storage": {
                "data": {},
                "ts": 1607436649623
            },
            "uuid": "898d914c-c6aa-4606-abf9-fcc0e7385841"
        },
        {
            "enabled": true,
            "file_url": "https://greasyfork.org/scripts/723-wanikani-stroke-order/code/WaniKani%20Stroke%20Order.user.js",
            "name": "WaniKani Stroke Order",
            "options": {
                "awareOfChrome": false,
                "check_for_updates": true,
                "comment": null,
                "compat_arrayleft": false,
                "compat_foreach": false,
                "compat_forvarin": false,
                "compat_metadata": false,
                "compat_powerful_this": null,
                "compat_uW_gmonkey": false,
                "compat_wrappedjsobject": false,
                "compatopts_for_requires": true,
                "noframes": null,
                "override": {
                    "merge_connects": true,
                    "merge_excludes": true,
                    "merge_includes": true,
                    "merge_matches": true,
                    "orig_excludes": [],
                    "orig_includes": [
                        "http*://*wanikani.com/kanji/*",
                        "http*://*wanikani.com/level/*/kanji/*",
                        "http*://*wanikani.com/review/session",
                        "http*://*wanikani.com/lesson/session"
                    ],
                    "orig_matches": [],
                    "orig_noframes": null,
                    "orig_run_at": "document-idle",
                    "use_blockers": [],
                    "use_connects": [
                        "jisho.org"
                    ],
                    "use_excludes": [],
                    "use_includes": [],
                    "use_matches": []
                },
                "run_at": null,
                "tab_types": null
            },
            "position": 5,
            "requires": [
                {
                    "meta": {
                        "mimetype": "text/javascript",
                        "name": "jquery.min.js",
                        "ts": 1649272272962,
                        "url": "http://ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js"
                    },
                    "source": ""
                }
            ],
            "source": "Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgIFdhbmlLYW5pIFN0cm9rZSBPcmRlcgovLyBAbmFtZXNwYWNlICAgamFwYW5lc2UKLy8gQGRlc2NyaXB0aW9uIFNob3dzIGEga2FuamkncyBzdHJva2Ugb3JkZXIgb24gaXRzIHBhZ2UgYW5kIGR1cmluZyBsZXNzb25zIGFuZCByZXZpZXdzLgovLyBAbGljZW5zZSAgICAgR1BMIHZlcnNpb24gMyBvciBhbnkgbGF0ZXIgdmVyc2lvbjsgaHR0cDovL3d3dy5nbnUub3JnL2NvcHlsZWZ0L2dwbC5odG1sCi8vIEBpbmNsdWRlICAgICBodHRwKjovLyp3YW5pa2FuaS5jb20va2FuamkvKgovLyBAaW5jbHVkZSAgICAgaHR0cCo6Ly8qd2FuaWthbmkuY29tL2xldmVsLyova2FuamkvKgovLyBAaW5jbHVkZSAgICAgaHR0cCo6Ly8qd2FuaWthbmkuY29tL3Jldmlldy9zZXNzaW9uCi8vIEBpbmNsdWRlICAgICBodHRwKjovLyp3YW5pa2FuaS5jb20vbGVzc29uL3Nlc3Npb24KLy8gQHZlcnNpb24gICAgIDEuMS4yCi8vIEBncmFudCAgICAgICBHTV94bWxodHRwUmVxdWVzdAovLyBAcmVxdWlyZSAgICAgaHR0cDovL2FqYXguZ29vZ2xlYXBpcy5jb20vYWpheC9saWJzL2pxdWVyeS8xLjEwLjIvanF1ZXJ5Lm1pbi5qcwovLyA9PS9Vc2VyU2NyaXB0PT0KCi8qCiAqIFRoYW5rcyBhIGxvdCB0byAuLi4KICogV2FuaWthbmkgUGhvbmV0aWMtU2VtYW50aWMgQ29tcG9zaXRpb24gLSBVc2Vyc2NyaXB0CiAqIGJ5IHJ1aXBncGluaGVpcm8gKExvcmRHcmF2ZXdpc2gpCiAqIC4uLiBmb3IgY29kZSBzaG93aW5nIG1lIGhvdyB0byBpbnNlcnQgc2VjdGlvbnMgZHVyaW5nIGthbmppIHJldmlld3MuCiAqIFRoZSBjb2RlIGhlYXZpbHkgYm9ycm93cyBmcm9tIHRoYXQgc2NyaXB0IQogKiBBbHNvIHRoYW5rcyB0byBIYWxvIGZvciBhIGxvYWRpbmcgYnVnIGZpeCEKICovCgovKgogKiBIZWxwZXIgRnVuY3Rpb25zL1ZhcmlhYmxlcwogKi8KJCA9IHVuc2FmZVdpbmRvdy4kOwoKLyoKICogR2xvYmFsIFZhcmlhYmxlcy9PYmplY3RzL0NsYXNzZXMKICovCnZhciBQYWdlRW51bSA9IE9iamVjdC5mcmVlemUoeyB1bmtub3duOjAsIGthbmppOjEsIHJldmlld3M6MiwgbGVzc29uczozIH0pOwp2YXIgY3VyUGFnZSA9IFBhZ2VFbnVtLnVua25vd247CnZhciBKSVNITyA9ICJodHRwOi8vY2xhc3NpYy5qaXNoby5vcmciOwoKLyoKICogTWFpbgogKi8KZnVuY3Rpb24gaW5pdCgpIHsKICAgIC8vIERldGVybWluZSBwYWdlIHR5cGUKICAgIGlmICgvXC9rYW5qaVwvLi8udGVzdChkb2N1bWVudC5VUkwpKSB7CiAgICAgICAgY3VyUGFnZSA9IFBhZ2VFbnVtLmthbmppOwogICAgfSBlbHNlIGlmICgvXC9yZXZpZXcvLnRlc3QoZG9jdW1lbnQuVVJMKSkgewogICAgICAgIGN1clBhZ2UgPSBQYWdlRW51bS5yZXZpZXdzOwogICAgfSBlbHNlIGlmICgvXC9sZXNzb24vLnRlc3QoZG9jdW1lbnQuVVJMKSkgewogICAgICAgIGN1clBhZ2UgPSBQYWdlRW51bS5sZXNzb25zOwogICAgfQoKICAgIC8vIENyZWF0ZSBhbmQgc3RvcmUgdGhlIGVsZW1lbnQgdGhhdCB3aWxsIGhvbGQgdGhlIGltYWdlCiAgICB1bnNhZmVXaW5kb3cuZGlhZ3JhbSA9IGNyZWF0ZURpYWdyYW1TZWN0aW9uKCk7CgogICAgLy8gUmVnaXN0ZXIgY2FsbGJhY2sgZm9yIHdoZW4gdG8gbG9hZCBzdHJva2Ugb3JkZXIKICAgIHN3aXRjaCAoY3VyUGFnZSkgewogICAgICAgIGNhc2UgUGFnZUVudW0ua2Fuamk6CiAgICAgICAgICAgIGxvYWREaWFncmFtKCk7CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgIGNhc2UgUGFnZUVudW0ucmV2aWV3czoKICAgICAgICAgICAgdmFyIG8gPSBuZXcgTXV0YXRpb25PYnNlcnZlcihmdW5jdGlvbihtdXRhdGlvbnMpIHsKICAgICAgICAgICAgICAgLy8gVGhlIGxhc3Qgb25lIGFsd2F5cyBoYXMgMiBtdXRhdGlvbnMsIHNvIGxldCdzIHVzZSB0aGF0CiAgICAgICAgICAgICAgIGlmIChtdXRhdGlvbnMubGVuZ3RoICE9IDIpCiAgICAgICAgICAgICAgICAgICByZXR1cm47CgogICAgICAgICAgICAgICAvLyBSZXZpZXdzIGR5bmFtaWNhbGx5IGdlbmVyYXRlIHRoZSBET00uIFdlIGFsd2F5cyBuZWVkIHRvIHJlLWluc2VydCB0aGUgZWxlbWVudAogICAgICAgICAgICAgICBpZiAoZ2V0S2FuamkoKSAhPT0gbnVsbCkgewogICAgICAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkgewogICAgICAgICAgICAgICAgICAgICAgIHZhciBkaWFncmFtID0gY3JlYXRlRGlhZ3JhbVNlY3Rpb24oKTsKICAgICAgICAgICAgICAgICAgICAgICBpZiAoZGlhZ3JhbSAhPT0gbnVsbCAmJiBkaWFncmFtLmxlbmd0aCA+IDApIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgdW5zYWZlV2luZG93LmRpYWdyYW0gPSBkaWFncmFtOwogICAgICAgICAgICAgICAgICAgICAgICAgICBsb2FkRGlhZ3JhbSgpOwogICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgIH0sIDE1MCk7CiAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIG8ub2JzZXJ2ZShkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnaXRlbS1pbmZvJyksIHsnYXR0cmlidXRlcycgOiB0cnVlfSk7CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgIGNhc2UgUGFnZUVudW0ubGVzc29uczoKICAgICAgICAgICAgdmFyIG8gPSBuZXcgTXV0YXRpb25PYnNlcnZlcihsb2FkRGlhZ3JhbSk7CiAgICAgICAgICAgIG8ub2JzZXJ2ZShkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnc3VwcGxlbWVudC1rYW4nKSwgeydhdHRyaWJ1dGVzJyA6IHRydWV9KTsKICAgICAgICAgICAgbG9hZERpYWdyYW0oKTsKICAgICAgICAgICAgYnJlYWs7CiAgICB9Cn0KCmlmIChkb2N1bWVudC5yZWFkeVN0YXRlID09PSAnY29tcGxldGUnKSB7CiAgICBpbml0KCk7Cn0gZWxzZSB7CiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignbG9hZCcsIGluaXQpOwp9CgovKgogKiBSZXR1cm5zIHRoZSBjdXJyZW50IGthbmppCiAqLwpmdW5jdGlvbiBnZXRLYW5qaSgpIHsKICAgIHN3aXRjaChjdXJQYWdlKSB7CiAgICAgICAgY2FzZSBQYWdlRW51bS5rYW5qaToKICAgICAgICAgICAgcmV0dXJuIGRvY3VtZW50LnRpdGxlW2RvY3VtZW50LnRpdGxlLmxlbmd0aCAtIDFdOwoKICAgICAgICBjYXNlIFBhZ2VFbnVtLnJldmlld3M6CiAgICAgICAgICAgIHZhciBjdXJJdGVtID0gJC5qU3RvcmFnZS5nZXQoImN1cnJlbnRJdGVtIik7CiAgICAgICAgICAgIGlmKCJrYW4iIGluIGN1ckl0ZW0pCiAgICAgICAgICAgICAgICByZXR1cm4gY3VySXRlbS5rYW4udHJpbSgpOwogICAgICAgICAgICBlbHNlCiAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDsKCiAgICAgICAgY2FzZSBQYWdlRW51bS5sZXNzb25zOgogICAgICAgICAgICB2YXIga2FuamlOb2RlID0gJCgiI2NoYXJhY3RlciIpOwoKICAgICAgICAgICAgaWYoa2FuamlOb2RlID09PSB1bmRlZmluZWQgfHwga2FuamlOb2RlID09PSBudWxsKQogICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7CgogICAgICAgICAgICByZXR1cm4ga2FuamlOb2RlLnRleHQoKS50cmltKCk7CiAgICB9CgogICAgcmV0dXJuIG51bGw7Cn0KCi8qCiAqIENyZWF0ZXMgYSBzZWN0aW9uIGZvciB0aGUgZGlhZ3JhbSBhbmQgcmV0dXJucyBhIHBvaW50ZXIgdG8gaXRzIGNvbnRlbnQKICovCmZ1bmN0aW9uIGNyZWF0ZURpYWdyYW1TZWN0aW9uKCkgewoKICAgIC8vIFJldmlld3MgaGFjazogT25seSBkbyBpdCBvbmNlCiAgICBpZiAoJCgnI3N0cm9rZV9vcmRlcicpLmxlbmd0aCA9PSAwKSB7CiAgICAgICAgdmFyIHNlY3Rpb25IVE1MID0gJzxzZWN0aW9uPjxoMj5TdHJva2UgT3JkZXI8L2gyPjxwIGlkPSJzdHJva2Vfb3JkZXIiPiZuYnNwOzwvcD48L3NlY3Rpb24+JzsKCiAgICAgICAgc3dpdGNoKGN1clBhZ2UpIHsKICAgICAgICAgICAgY2FzZSBQYWdlRW51bS5rYW5qaToKICAgICAgICAgICAgICAgICQoc2VjdGlvbkhUTUwpLmluc2VydEFmdGVyKCcjaW5mb3JtYXRpb24nKTsKICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICBjYXNlIFBhZ2VFbnVtLnJldmlld3M6CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygicHJlcGVuZCIpOwogICAgICAgICAgICAgICAgJCgnI2l0ZW0taW5mby1jb2wyJykucHJlcGVuZChzZWN0aW9uSFRNTCk7CiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgY2FzZSBQYWdlRW51bS5sZXNzb25zOgogICAgICAgICAgICAgICAgJCgnI3N1cHBsZW1lbnQta2FuLWJyZWFrZG93biAuY29sMScpLmFwcGVuZChzZWN0aW9uSFRNTCk7CiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICB9CiAgICB9CgogICAgcmV0dXJuICQoJyNzdHJva2Vfb3JkZXInKTsKfQoKLyoKICogQWRkcyB0aGUgZGlhZ3JhbSBzZWN0aW9uIGVsZW1lbnQgdG8gdGhlIGFwcHJvcHJpYXRlIGxvY2F0aW9uCiAqLwpmdW5jdGlvbiBsb2FkRGlhZ3JhbSgpIHsKCiAgICBpZiAoIXVuc2FmZVdpbmRvdyB8fCAhdW5zYWZlV2luZG93LmRpYWdyYW0ubGVuZ3RoKQogICAgICAgIHJldHVybjsKCiAgICB1bnNhZmVXaW5kb3cuZGlhZ3JhbS5odG1sKCJMb2FkaW5nLi4uIik7CgogICAgc2V0VGltZW91dChmdW5jdGlvbigpIHsKICAgICAgICBHTV94bWxodHRwUmVxdWVzdCh7CiAgICAgICAgICAgIG1ldGhvZDogIkdFVCIsCiAgICAgICAgICAgIHVybDogSklTSE8gKyAiL2thbmppL2RldGFpbHMvIiArIGdldEthbmppKCksCiAgICAgICAgICAgIG9ubG9hZDogZnVuY3Rpb24oeGhyKSB7CiAgICAgICAgICAgICAgICB2YXIgZGlhZ3JhbSA9IHVuc2FmZVdpbmRvdy5kaWFncmFtOwogICAgICAgICAgICAgICAgaWYgKHhoci5zdGF0dXMgPT0gMjAwKSB7CiAgICAgICAgICAgICAgICAgICAgaWYgKGRpYWdyYW1VUkwgPSB4aHIucmVzcG9uc2VUZXh0Lm1hdGNoKC9cL3N0YXRpY1wvaW1hZ2VzXC9zdHJva2VfZGlhZ3JhbXNcL1swLTldK19mcmFtZXNcLnBuZy8pKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGRpYWdyYW0uaHRtbCgnPGltZyBzcmM9IicgKyBKSVNITyArIGRpYWdyYW1VUkxbMF0gKyAnIiBhbHQ9IlN0cm9rZSBvcmRlciBkaWFncmFtIiAvPicpOwogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIHVuc2FmZVdpbmRvdy5kaWFncmFtLmh0bWwoIkVycm9yIHdoaWxlIGxvYWRpbmcgZGlhZ3JhbSIpOwogICAgICAgICAgICB9LAogICAgICAgICAgICBvbmVycm9yOiBmdW5jdGlvbih4aHIpIHsKICAgICAgICAgICAgICAgIHVuc2FmZVdpbmRvdy5kaWFncmFtLmh0bWwoIkVycm9yIHdoaWxlIGxvYWRpbmcgZGlhZ3JhbSIpOwogICAgICAgICAgICB9CiAgICAgICAgfSk7CiAgICB9LCAwKTsKfQ==",
            "storage": {
                "data": {},
                "ts": 1607436649628
            },
            "uuid": "648066f1-2454-460b-9217-49d3d4376da9"
        },
        {
            "enabled": true,
            "file_url": "https://openuserjs.org/install/laidbacktempo/Google_View_Image.user.js",
            "name": "Google View Image",
            "options": {
                "check_for_updates": false,
                "comment": null,
                "compat_foreach": false,
                "compat_metadata": false,
                "compat_powerful_this": null,
                "compat_prototypes": false,
                "compat_wrappedjsobject": false,
                "compatopts_for_requires": true,
                "noframes": null,
                "override": {
                    "merge_connects": true,
                    "merge_excludes": true,
                    "merge_includes": true,
                    "merge_matches": false,
                    "orig_connects": [],
                    "orig_excludes": [],
                    "orig_includes": [],
                    "orig_matches": [
                        "https://**/*",
                        "http://**/*"
                    ],
                    "orig_noframes": null,
                    "orig_run_at": "document-idle",
                    "use_blockers": [],
                    "use_connects": [],
                    "use_excludes": [],
                    "use_includes": [],
                    "use_matches": [
                        "https://www.google.com/**"
                    ]
                },
                "run_at": null,
                "tab_types": null
            },
            "position": 6,
            "source": "Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICBHb29nbGUgVmlldyBJbWFnZQovLyBAbmFtZXNwYWNlICAgIGh0dHA6Ly9Hb29nbGVWaWV3SW1hZ2UuY29tLwovLyBAdmVyc2lvbiAgICAgIDAuMQovLyBAZGVzY3JpcHRpb24gIEJyaW5nIGJhY2sgR29vZ2xlIFZpZXcgSW1hZ2UhCi8vIEBhdXRob3IgICAgICAgbGFpZGJhY2tUZW1wbwovLyBAbWF0Y2ggICAgICAgIGh0dHBzOi8vKiovKgovLyBAbWF0Y2ggICAgICAgIGh0dHA6Ly8qKi8qCi8vIEBsaWNlbnNlIE1JVAovLyBAZ3JhbnQgICAgICAgIG5vbmUKLy8gPT0vVXNlclNjcmlwdD09CgooZnVuY3Rpb24oKSB7CiAgICAndXNlIHN0cmljdCc7CgpmdW5jdGlvbiB0b0kxOG4oc3RyKSB7CiAgICByZXR1cm4gc3RyLnJlcGxhY2UoL19fTVNHXyhcdyspX18vZywgZnVuY3Rpb24gKG1hdGNoLCB2MSkgewogICAgICAgIHJldHVybiB2MSA/IGNocm9tZS5pMThuLmdldE1lc3NhZ2UodjEpIDogJyc7CiAgICB9KTsKfQoKZnVuY3Rpb24gbG9jYWxpc2VPYmplY3Qob2JqLCB0YWcpIHsKICAgIG9iai5pbm5lckhUTUwgPSB0YWc7CiAgICByZXR1cm47CiAgICAvL3ZhciBtc2cgPSB0b0kxOG4odGFnKTsKICAgIC8vaWYgKG1zZyAhPSB0YWcpIG9iai5pbm5lckhUTUwgPSBtc2c7Cn0KCmZ1bmN0aW9uIGFkZExpbmtzKG5vZGUpIHsKICAgIC8vIGNvbnNvbGUubG9nKCJBZGRpbmcgbGluayIpOwogICAgaWYgKG5vZGUubm9kZVR5cGUgPT09IE5vZGUuRUxFTUVOVF9OT0RFKSB7CiAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKCJBZGRpbmcgbGluayBpbiIpOwogICAgICAgIGlmICgobm9kZS5jbGFzc0xpc3QuY29udGFpbnMoJ2lyY19yaXMnKSkgfHwgKG5vZGUuY2xhc3NMaXN0LmNvbnRhaW5zKCdpcmNfbWknKSB8fCAobm9kZS5jbGFzc0xpc3QuY29udGFpbnMoJ2lyY190YXMnKSkpKSB7CiAgICAgICAgICAgICAgICAvLyBjb25zb2xlLmxvZygiQWRkaW5nIGxpbmsgT0sgT0sgIik7CiAgICAgICAgICAgIHZhciBvYmplY3QgPSBub2RlLmNsb3Nlc3QoJy5pcmNfYycpOwogICAgICAgICAgICAvLyBSZXRyaXZlIGltYWdlIGxpbmtzLCBhbmQgaW1hZ2UgdXJsCiAgICAgICAgICAgIHZhciBpbWFnZUxpbmtzID0gb2JqZWN0LnF1ZXJ5U2VsZWN0b3IoJy5fRkt3LmlyY19idXRfciA+IHRib2R5ID4gdHInKTsKICAgICAgICAgICAgdmFyIGltYWdlVGV4dCA9IG9iamVjdC5xdWVyeVNlbGVjdG9yKCcuX2NqaiA+IC5pcmNfaXQgPiAuaXJjX2hkID4gLl9yMycpOwoKICAgICAgICAgICAgLy8gUmV0cml2ZSB0aGUgaW1hZ2UgVVJMCiAgICAgICAgICAgIHZhciBpbWFnZVVSTDsKCiAgICAgICAgICAgIHZhciB0aHVtYm5haWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdpbWdbbmFtZT0iJyArIG9iamVjdC5kYXRhc2V0Lml0ZW1JZCArICciXScpOwogICAgICAgICAgICBpZiAodGh1bWJuYWlsKSB7CiAgICAgICAgICAgICAgICB2YXIgbWV0YSA9IHRodW1ibmFpbC5jbG9zZXN0KCcucmdfYngnKS5xdWVyeVNlbGVjdG9yKCcucmdfbWV0YScpOwogICAgICAgICAgICAgICAgdmFyIG1ldGFkYXRhID0gSlNPTi5wYXJzZShtZXRhLmlubmVySFRNTCk7CiAgICAgICAgICAgICAgICBpbWFnZVVSTCA9IG1ldGFkYXRhLm91OwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgaW1hZ2VVUkwgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCdpcmNfbWknKVswXS5zcmM7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIC8vIFJlbW92ZSBwcmV2aW91c2x5IGdlbmVyYXRlZCB2aWV3IGltYWdlIGJ1dHRvbnMKICAgICAgICAgICAgdmFyIG9sZFZpZXdJbWFnZSA9IGltYWdlTGlua3MucXVlcnlTZWxlY3RvcignLmV4dF9hZGRvbicpOwogICAgICAgICAgICBpZiAob2xkVmlld0ltYWdlKSB7CiAgICAgICAgICAgICAgICBpbWFnZUxpbmtzLnJlbW92ZUNoaWxkKG9sZFZpZXdJbWFnZSk7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIC8vIHJlbW92ZSBwcmV2aW91c2x5IGdlbmVyYXRlZCBzZWFyY2ggYnkgaW1hZ2UgbGlua3MKICAgICAgICAgICAgdmFyIG9sZFNlYXJjaEJ5SW1hZ2UgPSBpbWFnZVRleHQucXVlcnlTZWxlY3RvcignLmV4dF9hZGRvbicpOwogICAgICAgICAgICBpZiAob2xkU2VhcmNoQnlJbWFnZSkgewogICAgICAgICAgICAgICAgaW1hZ2VUZXh0LnJlbW92ZUNoaWxkKG9sZFNlYXJjaEJ5SW1hZ2UpOwogICAgICAgICAgICB9CgogICAgICAgICAgICAvLyBDcmVhdGUgU2VhcmNoIGJ5IGltYWdlIGJ1dHRvbgogICAgICAgICAgICB2YXIgc2VhcmNoQnlJbWFnZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2EnKTsKICAgICAgICAgICAgc2VhcmNoQnlJbWFnZS5zZXRBdHRyaWJ1dGUoJ2hyZWYnLCAnL3NlYXJjaGJ5aW1hZ2U/JmltYWdlX3VybD0nICsgaW1hZ2VVUkwpOwogICAgICAgICAgICBzZWFyY2hCeUltYWdlLnNldEF0dHJpYnV0ZSgnY2xhc3MnLCAnZXh0X2FkZG9uJyk7CiAgICAgICAgICAgIHNlYXJjaEJ5SW1hZ2Uuc2V0QXR0cmlidXRlKCdzdHlsZScsICdtYXJnaW4tbGVmdDo0cHQ7Jyk7CgogICAgICAgICAgICAvLyBJbnNlcnQgdGV4dCBpbnRvIFNlYXJjaCBieSBpbWFnZSBidXR0b24KICAgICAgICAgICAgdmFyIHNlYXJjaEJ5SW1hZ2VUZXh0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpOwogICAgICAgICAgICBsb2NhbGlzZU9iamVjdChzZWFyY2hCeUltYWdlVGV4dCwgJzxzcGFuPlZpZXcgSW1hZ2U8L3NwYW4+Jyk7CiAgICAgICAgICAgIHNlYXJjaEJ5SW1hZ2UuYXBwZW5kQ2hpbGQoc2VhcmNoQnlJbWFnZVRleHQpOwoKICAgICAgICAgICAgLy8gQXBwZW5kIFNlYXJjaCBieSBpbWFnZSBidXR0b24KICAgICAgICAgICAgaW1hZ2VUZXh0LmFwcGVuZENoaWxkKHNlYXJjaEJ5SW1hZ2UpOwoKICAgICAgICAgICAgLy8gQ3JlYXRlIFZpZXcgaW1hZ2UgYnV0dG9uCiAgICAgICAgICAgIHZhciB2aWV3SW1hZ2UgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCd0ZCcpOwogICAgICAgICAgICB2aWV3SW1hZ2Uuc2V0QXR0cmlidXRlKCdjbGFzcycsICdleHRfYWRkb24nKTsKCiAgICAgICAgICAgIC8vIEFkZCBnbG9iZSB0byBWaWV3IGltYWdlIGJ1dHRvbgogICAgICAgICAgICB2YXIgdmlld0ltYWdlTGluayA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2EnKTsKICAgICAgICAgICAgdmFyIGdsb2JlSWNvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5fUkt3Ll93dGYuX1B0ZicpLmNsb25lTm9kZSh0cnVlKTsKICAgICAgICAgICAgdmlld0ltYWdlTGluay5hcHBlbmRDaGlsZChnbG9iZUljb24pOwoKICAgICAgICAgICAgLy8gYWRkIHRleHQgdG8gdmlldyBpbWFnZSBidXR0b24KICAgICAgICAgICAgdmFyIHZpZXdJbWFnZVRleHQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuX1dLdycpLmNsb25lTm9kZSh0cnVlKTsKICAgICAgICAgICAgbG9jYWxpc2VPYmplY3Qodmlld0ltYWdlVGV4dCwgJ1ZpZXcgSW1hZ2UnKTsKICAgICAgICAgICAgdmlld0ltYWdlTGluay5hcHBlbmRDaGlsZCh2aWV3SW1hZ2VUZXh0KTsKCiAgICAgICAgICAgIC8vIEFkZCBWaWV3IGltYWdlIGJ1dHRvbiBVUkwKICAgICAgICAgICAgdmlld0ltYWdlTGluay5zZXRBdHRyaWJ1dGUoJ2hyZWYnLCBpbWFnZVVSTCk7CiAgICAgICAgICAgIHZpZXdJbWFnZUxpbmsuc2V0QXR0cmlidXRlKCd0YXJnZXQnLCAnX2JsYW5rJyk7CiAgICAgICAgICAgIHZpZXdJbWFnZS5hcHBlbmRDaGlsZCh2aWV3SW1hZ2VMaW5rKTsKCiAgICAgICAgICAgIC8vIEFkZCBWaWV3IGltYWdlIGJ1dHRvbiB0byBJbWFnZSBMaW5rcwogICAgICAgICAgICB2YXIgc2F2ZSA9IGltYWdlTGlua3MuY2hpbGROb2Rlc1sxXTsKICAgICAgICAgICAgaW1hZ2VMaW5rcy5pbnNlcnRCZWZvcmUodmlld0ltYWdlLCBzYXZlKTsKICAgICAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKCJBZGRpbmcgRE9ORSEhISIpOwogICAgICAgIH0KICAgIH0KfQoKCiAgICB2YXIgb2JzZXJ2ZXIgPSBuZXcgTXV0YXRpb25PYnNlcnZlcihmdW5jdGlvbiAobXV0YXRpb25zKSB7CiAgICAgICAgbXV0YXRpb25zLmZvckVhY2goKG11dGF0aW9uKSA9PiB7CiAgICAgICAgICAgIGlmIChtdXRhdGlvbi5hZGRlZE5vZGVzICYmIG11dGF0aW9uLmFkZGVkTm9kZXMubGVuZ3RoID4gMCkgewogICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBtdXRhdGlvbi5hZGRlZE5vZGVzLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgICAgICAgICAgICAgdmFyIG5ld05vZGUgPSBtdXRhdGlvbi5hZGRlZE5vZGVzW2ldOwogICAgICAgICAgICAgICAgICAgIGFkZExpbmtzKG5ld05vZGUpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgfSk7CiAgICB9KTsKCiAgICBvYnNlcnZlci5vYnNlcnZlKGRvY3VtZW50LmJvZHksIHsKICAgICAgICBjaGlsZExpc3Q6IHRydWUsCiAgICAgICAgc3VidHJlZTogdHJ1ZQogICAgfSk7CgogICAgYWRkTGlua3MoZG9jdW1lbnQuYm9keSk7Cgp9KSgpOw==",
            "storage": {
                "data": {},
                "ts": 1606921521538
            },
            "uuid": "21e7da1a-d1ce-4acf-9838-a7b170386128"
        },
        {
            "enabled": true,
            "file_url": "https://greasyfork.org/scripts/233-wanikani-levelup-celebrator/code/WaniKani%20LevelUP%20Celebrator.user.js",
            "name": "WaniKani LevelUP Celebrator",
            "options": {
                "awareOfChrome": false,
                "check_for_updates": true,
                "comment": null,
                "compat_arrayleft": false,
                "compat_foreach": false,
                "compat_forvarin": false,
                "compat_metadata": false,
                "compat_powerful_this": null,
                "compat_uW_gmonkey": false,
                "compat_wrappedjsobject": false,
                "compatopts_for_requires": true,
                "noframes": null,
                "override": {
                    "merge_connects": true,
                    "merge_excludes": true,
                    "merge_includes": true,
                    "merge_matches": true,
                    "orig_excludes": [],
                    "orig_includes": [
                        "https://www.wanikani.com/",
                        "https://www.wanikani.com/dashboard"
                    ],
                    "orig_matches": [],
                    "orig_noframes": null,
                    "orig_run_at": "document-end",
                    "use_blockers": [],
                    "use_connects": [],
                    "use_excludes": [],
                    "use_includes": [],
                    "use_matches": []
                },
                "run_at": null,
                "tab_types": null
            },
            "position": 7,
            "source": "Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICAgV2FuaUthbmkgTGV2ZWxVUCBDZWxlYnJhdG9yCi8vIEBuYW1lc3BhY2UgICAgIGh0dHBzOi8vd3d3LndhbmlrYW5pLmNvbQovLyBAZGVzY3JpcHRpb24gICBUaGlzIHdpbGwgZGlzcGxheSBhICJsZXZlbC11cCIgbm90aWZpY2F0aW9uIG9uIHlvdXIgV0sgRGFzaGJvYXJkIGFmdGVyIHlvdSBsZXZlbCB1cC4gIFlvdSBjYW4gY3VzdG9taXplIHRoZSBpbWFnZSBhbmQgdGV4dCBvZiB0aGUgZGlzcGxheS4gIE90aGVyIGFjaGlldmVtZW50cyBhcmUgYWxzbyBub3RlZC4gIEJ5IFJob3NWZWVkY3kuCi8vIEB2ZXJzaW9uIDIuNC4wCi8vIEBpbmNsdWRlICAgICAgIGh0dHBzOi8vd3d3LndhbmlrYW5pLmNvbS8KLy8gQGluY2x1ZGUgICAgICAgaHR0cHM6Ly93d3cud2FuaWthbmkuY29tL2Rhc2hib2FyZAovLyBAcnVuLWF0CSAgZG9jdW1lbnQtZW5kCi8vIEBncmFudAkgIEdNX3JlZ2lzdGVyTWVudUNvbW1hbmQKCi8vID09L1VzZXJTY3JpcHQ9PQoKZnVuY3Rpb24gZ2V0KGlkKSB7CiAgICBjb25zb2xlLmxvZygnZ2V0IGZjdCcpOwogICAgaWYgKGlkICYmIHR5cGVvZiBpZCA9PT0gJ3N0cmluZycpIHsKCWNvbnNvbGUubG9nKGlkKTsKICAgICAgICBpZCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGlkKTsKICAgIH0KICAgIHJldHVybiBpZCB8fCBudWxsOwp9CgoKZnVuY3Rpb24gR01zZXR1cCgpIHsKICBpZiAoR01fcmVnaXN0ZXJNZW51Q29tbWFuZCkgewogICAgR01fcmVnaXN0ZXJNZW51Q29tbWFuZCgnV2FuaUthbmkgTGV2ZWxVUCBDZWxlYnJhdG9yOiBTZXQgaW1hZ2UgVVJMJywgZnVuY3Rpb24oKSB7CiAgICAgIHZhciBjdXJFbnRyeSA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCJXS2x2bHVwSW1nVVJMIikgfHwgIiI7CiAgICAgIHZhciBuZXdJbWdVUkwgPSBwcm9tcHQoJ05ldyBJbWFnZSBVUkw6JywgY3VyRW50cnkpOwogICAgICBpZiAobmV3SW1nVVJMICE9IG51bGwpIHsKCWlmICh0eXBlb2YobmV3SW1nVVJMKSAhPT0gInN0cmluZyIpIHsKCQluZXdJbWdVUkwgPSBTdHJpbmcobmV3SW1nVVJMKTsKCX0KICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgiV0tsdmx1cEltZ1VSTCIsIG5ld0ltZ1VSTCk7CiAgICAgIH0KICAgIH0pOwoKICAgIEdNX3JlZ2lzdGVyTWVudUNvbW1hbmQoJ1dhbmlLYW5pIExldmVsVVAgQ2VsZWJyYXRvcjogU2V0IGltYWdlIHBvc2l0aW9uJywgZnVuY3Rpb24oKSB7CiAgICAgIHZhciBjdXJFbnRyeSA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCJXS2x2bHVwSW1nUG9zIikgfHwgIkxlZnQiOwogICAgICB2YXIgbmV3SW1nUG9zID0gcHJvbXB0KCdJbWFnZSBwb3NpdGlvbiByZWxhdGl2ZSB0byB0ZXh0IChsZWZ0LCByaWdodCwgYWJvdmUsIGJlbG93KTonLCBjdXJFbnRyeSk7CiAgICAgIGlmIChuZXdJbWdQb3MgIT0gbnVsbCkgewoJaWYgKHR5cGVvZihuZXdJbWdQb3MpICE9PSAic3RyaW5nIikgewoJCW5ld0ltZ1BvcyA9IFN0cmluZyhuZXdJbWdQb3MpOwoJfQogICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCJXS2x2bHVwSW1nUG9zIiwgbmV3SW1nUG9zKTsKICAgICAgfQogICAgfSk7CgogICAgR01fcmVnaXN0ZXJNZW51Q29tbWFuZCgnV2FuaUthbmkgTGV2ZWxVUCBDZWxlYnJhdG9yOiBTZXQgdGV4dCcsIGZ1bmN0aW9uKCkgewogICAgICB2YXIgY3VyRW50cnkgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgiV0tsdmx1cFRleHQiKSB8fCAiIjsKICAgICAgdmFyIG5ld1RleHQgPSBwcm9tcHQoJ05ldyB0ZXh0OicsIGN1ckVudHJ5KTsKICAgICAgaWYgKG5ld1RleHQgIT0gbnVsbCkgewoJaWYgKHR5cGVvZihuZXdUZXh0KSAhPT0gInN0cmluZyIpIHsKCQluZXdUZXh0ID0gU3RyaW5nKG5ld1RleHQpOwoJfQogICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCJXS2x2bHVwVGV4dCIsIG5ld1RleHQpOwogICAgICB9CiAgICB9KTsKCiAgICBHTV9yZWdpc3Rlck1lbnVDb21tYW5kKCdXYW5pS2FuaSBMZXZlbFVQIENlbGVicmF0b3I6IFByZXZpZXcnLCBmdW5jdGlvbigpIHsKCXNlc3Npb25TdG9yYWdlLnNldEl0ZW0oIldLbHZsdXBQcmV2aWV3IiwgMSk7Cglsb2NhdGlvbi5yZWxvYWQoKTsKICAgIH0pOwoKICB9Cn0KCgpmdW5jdGlvbiBjaGVja0xldmVsKCkgewoKCWNvbnNvbGUubG9nKCJjaGVja0xldmVsKCkgc3RhcnQiKTsKCgl2YXIgbGFzdEtub3duTGV2ZWwgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgiV0tsdmx1cFByZXZMZXZlbCIpIHx8IDE7CiAgICB2YXIgbGV2ZWxUZXh0ID0gJCgnbGkudXNlci1zdW1tYXJ5X19hdHRyaWJ1dGUgYScpWzBdLmhyZWYuc3BsaXQoJy9sZXZlbC8nKVsxXTsKICAgIHZhciBjdXJsZXZlbCA9IChsZXZlbFRleHQ/IGxldmVsVGV4dDogbGFzdEtub3duTGV2ZWwpOwoKICAgIGNvbnNvbGUubG9nKCJsZXZlbFRleHQ6ICIsIGxldmVsVGV4dCk7CiAgICBjb25zb2xlLmxvZygiY3VybGV2ZWw6ICIsIGN1cmxldmVsKTsKCgl2YXIgcHJldiA9IE51bWJlcihsYXN0S25vd25MZXZlbCk7Cgl2YXIgY3VyICA9IE51bWJlcihjdXJsZXZlbCk7Cgl2YXIgbmV4dCA9IHByZXYgKyAxOwoKCWlmIChjdXIgPT0gbmV4dCkgeyAKCQljb25zb2xlLmxvZygibGV2ZWxlZCB1cCEiKTsKCQl2YXIgZCA9IG5ldyBEYXRlKCk7CgkJdmFyIG4gPSBkLmdldFRpbWUoKTsKCQlsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgiV0tsdmx1cExldlRpbWUiLCBuKTsgLy8gcmVjb3JkIGxldmVsLXVwIHRpbWUKCQlsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgiV0tsdmx1cFByZXZMZXZlbCIsIGN1cik7ICAvLyB1cGRhdGUgJ2xhc3RLbm93bkxldmVsJyBmb3IgbmV4dCB0aW1lCgoJfSBlbHNlIGlmIChjdXIgIT0gcHJldikgewoJCS8vIGVpdGhlciB0aGlzIGlzIHRoZSBmaXJzdCB0aW1lIHdlJ3JlIHJ1bm5pbmcsIG9yIHRoZXJlJ3MgYSBkaWZmZXJlbnQgdXNlciBoZXJlLCAKCQkvLyBvciB0aGUgdXNlcidzIHN1YnNjcmlwdGlvbiBzdGF0dXMgaGFzIGNoYW5nZWQsIG9yIHNvbWV0aGluZyBlbHNlIHdlaXJkIGlzIGdvaW5nIG9uOwoKCQkvLyBpZiBjdXIgPT0gMiwgYXNzdW1lIHRoZSB1c2VyJ3Mgc3Vic2NyaXB0aW9uIGV4cGlyZWQ7IGxlYXZlIGV2ZXJ5dGhpbmcgYmUgYW5kIHdhaXQgZm9yIHJlbmV3YWwuIE90aGVyd2lzZSwKCgkJaWYgKGN1ciAhPSAyIHx8ICEgbG9jYWxTdG9yYWdlLmdldEl0ZW0oIldLbHZsdXBQcmV2TGV2ZWwiKSkgeyAKCgkJCS8vIGNsZWFyIFdLbHZsdXBMZXZUaW1lIHRvIG1ha2Ugc3VyZSB3ZSBkb24ndCBkaXNwbGF5IHRoZSBsZXZlbC11cCBtZXNzYWdlCgkJCWNvbnNvbGUubG9nKCJyZWluaXRpYWxpemluZyIpOwoJCQlsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgiV0tsdmx1cExldlRpbWUiLCAwKTsKCQkJbG9jYWxTdG9yYWdlLnNldEl0ZW0oIldLbHZsdXBQcmV2TGV2ZWwiLCBjdXIpOyAgLy8gdXBkYXRlICdsYXN0S25vd25MZXZlbCcgZm9yIG5leHQgdGltZQoKCQkJLy8gYWxzbyByZWluaXRpYWxpemUgdGhlIG5leHRNaWxlc3RvbmVzIGFycmF5CgkJCWluaXRpYWxpemVNaWxlc3RvbmVzKCk7CgoJCX0KCgl9IC8vZWxzZSBjdXIgPT0gcHJldiwgc28gJ2xhc3RLbm93bkxldmVsJyBpcyBzdGlsbCBjb3JyZWN0IChvciBpdCB3aWxsIGNvbnRpbnVlIHRvIGRlZmF1bHQgdG8gMSBpZiBpdCBoYXNuJ3QgYmVlbiBzdG9yZWQgeWV0KQoKCWNvbnNvbGUubG9nKCJwcmV2IGxldmVsOiAiLCBwcmV2KTsKCWNvbnNvbGUubG9nKCJjdXIgbGV2ZWw6ICIsIGN1cik7Cgljb25zb2xlLmxvZygibmV4dCBsZXZlbDogIiwgbmV4dCk7Cgljb25zb2xlLmxvZygiY2hlY2tMZXZlbCgpIGVuZCIpOwoKCXJldHVybiBjdXI7Cn0KCgoKZnVuY3Rpb24gc2hvdWxkRGlzcGxheSgpIHsKCgljb25zb2xlLmxvZygnc2hvdWxkRGlzcGxheSgpIHN0YXJ0Jyk7CgoJdmFyIGxldlRpbWUgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgiV0tsdmx1cExldlRpbWUiKSB8fCAwOwoJdmFyIHJhd2R1ciA9IDEwOyAgLy8gbmV3IGxldmVsIGRpc3BsYXkgaXMgZW5hYmxlZCBmb3IgMTAgbWludXRlcyBhZnRlciBmaXJzdCBkaXNwbGF5IHRpbWUKCXZhciBkID0gbmV3IERhdGUoKTsKCXZhciBub3cgPSBkLmdldFRpbWUoKTsKCXZhciByZXR2YWw7Cgl2YXIgZHVyYXRpb24gPSBOdW1iZXIocmF3ZHVyKTsKCXZhciBwcmV2aWV3ID0gc2Vzc2lvblN0b3JhZ2UuZ2V0SXRlbSgiV0tsdmx1cFByZXZpZXciKTsKCgl2YXIgdGhlVHh0ID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oIldLbHZsdXBUZXh0Iik7CgoJY29uc29sZS5sb2coIm5vdyA9ICIsIG5vdyk7Cgljb25zb2xlLmxvZygibGV2VGltZSA9ICIsIGxldlRpbWUpOwoJY29uc29sZS5sb2coInJhd2R1ciA9ICIsIHJhd2R1cik7Cgljb25zb2xlLmxvZygiZHVyYXRpb24gbWludXRlcyA9ICIsIGR1cmF0aW9uKTsKCglpZiAocHJldmlldyAmJiBwcmV2aWV3ID09IDEpIHsKCQljb25zb2xlLmxvZygiUHJldmlldyBlbmFibGVkLCBkaXNwbGF5IGl0Iik7CgkJc2Vzc2lvblN0b3JhZ2Uuc2V0SXRlbSgiV0tsdmx1cFByZXZpZXciLCAwKTsJLy8gb25jZSBvbmx5CgkJcmV0dXJuIDE7Cgl9CgoJaWYgKHRoZVR4dCAmJiB0aGVUeHQuc3Vic3RyaW5nKDAsIDgpID09ICIlI1RFU1QlIyIpIHsKCQljb25zb2xlLmxvZygidGV4dCBiZWdpbnMgd2l0aCAlI1RFU1QlIywgYWx3YXlzIGRpc3BsYXkiKTsKCQlyZXR1cm4gMTsKCX0KCQoJZHVyYXRpb24gKj0gNjAwMDA7IC8vIGNvbnZlcnQgdG8gbWlsbGlzZWNvbmRzCgoJY29uc29sZS5sb2coImR1cmF0aW9uIG1zZWMgPSAiLCBkdXJhdGlvbik7CgoJY29uc29sZS5sb2coIm5vdyAtIGxldlRpbWUgPSAiLCBub3cgLSBsZXZUaW1lKTsKCglpZiAoKG5vdyAtIGxldlRpbWUpIDw9IGR1cmF0aW9uKSB7CgkJcmV0dmFsID0gMTsKCX0gZWxzZSB7CgkJcmV0dmFsID0gMDsKCX0KCgljb25zb2xlLmxvZygicmV0dmFsID0gIiwgcmV0dmFsKTsKCgljb25zb2xlLmxvZygnc2hvdWxkRGlzcGxheSgpIGVuZCcpOwoJcmV0dXJuIHJldHZhbDsKfQoKCgpmdW5jdGlvbiBkaXNwbGF5TGV2ZWxVcE1lc3NhZ2UgKCBjdXJMZXZlbCApIHsKCWNvbnNvbGUubG9nKCdkaXNwbGF5TGV2ZWxVcE1lc3NhZ2UoKSBzdGFydCcpOwoJdmFyIG1zZyA9IGdldCgic2VhcmNoIik7CiAgICAJdmFyIHQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTsKIAl2YXIgdGhlSW1nID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oIldLbHZsdXBJbWdVUkwiKTsKIAl2YXIgdGhlUG9zID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oIldLbHZsdXBJbWdQb3MiKSB8fCAiTEVGVCI7Cgl2YXIgdGhlVHh0ID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oIldLbHZsdXBUZXh0Iik7CgogICAgc3dpdGNoKHRoZVBvcy50b1VwcGVyQ2FzZSgpKSB7CgogICAgICAgIGNhc2UgIkJFTE9XIjoKICAgICAgICBjYXNlICJVTkRFUiI6CiAgICAgICAgY2FzZSAiVU5ERVJORUFUSCI6CiAgICAgICAgY2FzZSAiRE9XTiI6CiAgICAgICAgY2FzZSAiQk9UVE9NIjoKICAgICAgICBjYXNlICLjgZfjgZ8iOgogICAgICAgIGNhc2UgIuS4iyI6CiAgICAgICAgICAgIHQuaW5uZXJIVE1MID0gJzxkaXYgaWQ9IldLbHZsdXBUeHQiIHN0eWxlPSJtYXJnaW46YXV0bzt0ZXh0LWFsaWduOmNlbnRlcjtsaW5lLWhlaWdodDoxMTAlO2ZvbnQtc2l6ZTozMDAlIj4gPC9kaXY+JysKICAgICAgICAgICAgICAgICc8aW1nIGlkPSJXS2x2bHVwSW1nIiBzdHlsZT0iZGlzcGxheTpibG9jazttYXJnaW46YXV0byI+IDwvaW1nPicrCiAgICAgICAgCQknPC9kaXY+JzsKICAgICAgICAgICAgYnJlYWs7CgogICAgICAgIGNhc2UgIkFCT1ZFIjoKICAgICAgICBjYXNlICJUT1AiOgogICAgICAgIGNhc2UgIlVQIjoKICAgICAgICBjYXNlICJPVkVSIjoKICAgICAgICBjYXNlICJPTiBUT1AgT0YiOgogICAgICAgIGNhc2UgIkNFTlRFUiI6CiAgICAgICAgY2FzZSAiQ0VOVEVSRUQiOgogICAgICAgIGNhc2UgIuOBhuOBiCI6CiAgICAgICAgY2FzZSAi5LiKIjoKICAgICAgICBjYXNlICLjgarjgYsiOgogICAgICAgIGNhc2UgIuS4rSI6CiAgICAgICAgY2FzZSAi44Gh44KF44GG44GK44GGIjoKICAgICAgICBjYXNlICLkuK3lpK4iOgogICAgICAgICAgICB0LmlubmVySFRNTCA9ICc8aW1nIGlkPSJXS2x2bHVwSW1nIiBzdHlsZT0iZGlzcGxheTpibG9jazttYXJnaW46YXV0byI+IDwvaW1nPicrCiAgICAgICAgICAgICAgICAnPGRpdiBpZD0iV0tsdmx1cFR4dCIgc3R5bGU9Im1hcmdpbjphdXRvO3RleHQtYWxpZ246Y2VudGVyO2xpbmUtaGVpZ2h0OjExMCU7Zm9udC1zaXplOjMwMCUiPiA8L2Rpdj4nKwogICAgICAgIAkJJzwvZGl2Pic7CiAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICBjYXNlICJMRUZUIjoKICAgICAgICBjYXNlICJBVCBMRUZUIjoKICAgICAgICBjYXNlICJPTiBMRUZUIjoKICAgICAgICBjYXNlICJPTiBUSEUgTEVGVCI6CiAgICAgICAgY2FzZSAiTEVGVCBPRiI6CiAgICAgICAgY2FzZSAiVE8gVEhFIExFRlQgT0YiOgogICAgICAgIGNhc2UgIuOBsuOBoOOCiiI6CiAgICAgICAgY2FzZSAi5bemIjoKICAgICAgICBjYXNlICLjgbLjgaDjgorjgYzjgo8iOgogICAgICAgIGNhc2UgIuW3puWBtCI6CiAgICAgICAgZGVmYXVsdDoKICAgICAgICAgICAgdC5pbm5lckhUTUwgPSAnPGltZyBpZD0iV0tsdmx1cEltZyIgc3R5bGU9ImZsb2F0OmxlZnQ7bWFyZ2luOjIwcHgiPiA8L2ltZz4nKwogICAgICAgICAgICAgICAgJzxkaXYgaWQ9IldLbHZsdXBUeHQiIHN0eWxlPSJtYXJnaW46MjBweDtmbG9hdDpsZWZ0O3RleHQtYWxpZ246Y2VudGVyO2xpbmUtaGVpZ2h0OjExMCU7Zm9udC1zaXplOjMwMCUiPiA8L2Rpdj4nKwogICAgICAgIAkJJzwvZGl2Pic7CiAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICBjYXNlICJSSUdIVCI6CiAgICAgICAgY2FzZSAiQVQgUklHSFQiOgogICAgICAgIGNhc2UgIk9OIFJJR0hUIjoKICAgICAgICBjYXNlICJPTiBUSEUgUklHSFQiOgogICAgICAgIGNhc2UgIlJJR0hUIE9GIjoKICAgICAgICBjYXNlICJUTyBUSEUgUklHSFQgT0YiOgogICAgICAgIGNhc2UgIk1JR0kiOgogICAgICAgIGNhc2UgIuOBv+OBjiI6CiAgICAgICAgY2FzZSAi5Y+zIjoKICAgICAgICBjYXNlICLjgb/jgY7jgYzjgo8iOgogICAgICAgIGNhc2UgIuWPs+WBtCI6CiAgICAgICAgICAgIHQuaW5uZXJIVE1MID0gJzxpbWcgaWQ9IldLbHZsdXBJbWciIHN0eWxlPSJmbG9hdDpyaWdodDttYXJnaW46MjBweCI+IDwvaW1nPicrCiAgICAgICAgICAgICAgICAnPGRpdiBpZD0iV0tsdmx1cFR4dCIgc3R5bGU9Im1hcmdpbjoyMHB4O2Zsb2F0OnJpZ2h0O3RleHQtYWxpZ246Y2VudGVyO2xpbmUtaGVpZ2h0OjExMCU7Zm9udC1zaXplOjMwMCUiPiA8L2Rpdj4nKwogICAgICAgIAkJJzwvZGl2Pic7CiAgICAgICAgICAgIGJyZWFrOwoKICAgIH0KICAgIHQuc3R5bGUud2lkdGggPSAiMTIwMHB4IjsKICAgIHQuc3R5bGUubWFyZ2luID0gImF1dG8iOwoKICAgIG1zZy5hcHBlbmRDaGlsZCh0KTsKCgl2YXIgdGhpbmcxID0gZ2V0KCJXS2x2bHVwSW1nIik7CglpZiAodGhpbmcxICYmIHRoZUltZykgewoJCXRoaW5nMS5zcmMgPSB0aGVJbWc7Cgl9CgoJdmFyIHRoaW5nMiA9IGdldCgiV0tsdmx1cFR4dCIpOwoKCWlmICh0aGluZzIgJiYgdGhlVHh0KSB7CgkJaWYgKHRoZVR4dC5zdWJzdHJpbmcoMCwgOCkgPT0gIiUjVEVTVCUjIikgewoJCQkvLyBpbmRpY2F0ZXMgdGVzdCBtb2RlOyBzdHJpcCB0aGUgdGVzdCBmbGFnIG91dCBvZiB0aGUgdGV4dAoJCQl0aGVUeHQgPSB0aGVUeHQucmVwbGFjZSgiJSNURVNUJSMiLCAiIik7CgkJfQoJCQoJCXRoZVR4dCA9IHRoZVR4dC5yZXBsYWNlKC8jTEVWRUxOVU0jL2csIGN1ckxldmVsKTsgIC8vIHN1cHBvcnQgI0xFVkVMTlVNIyB2YXJpYWJsZSBpbiB0ZXh0IHN0cmluZ3MKCgkJdGhpbmcyLmlubmVySFRNTD0gdGhlVHh0OwoJfSAKCgljb25zb2xlLmxvZygnZGlzcGxheUxldmVsVXBNZXNzYWdlKCkgZW5kJyk7Cn0KCgpmdW5jdGlvbiBnZXROZXh0TWlsZXN0b25lKCBudW1UdXJ0bGVzICkgewoKCWNvbnNvbGUubG9nKCJnZXROZXh0TWlsZXN0b25lKCkiKTsKCgl2YXIgbWlsZXN0b25lcyA9IFsxLCAxMDAsIDI1MCwgNTAwLCA3NTAsIDEwMDAsIDE1MDAsIDIwMDAsIDI1MDAsIDMwMDAsIDQwMDAsIDUwMDAsIDYwMDAsIDcwMDAsIDgwMDAsIDkwMDAsIDEwMDAwLCA5OTk5OTldOwoJdmFyIGk9MDsKCgljb25zb2xlLmxvZygibnVtVHVydGxlcyA9ICIsIG51bVR1cnRsZXMpOwoKCXdoaWxlICggbWlsZXN0b25lc1tpXSA8PSBudW1UdXJ0bGVzICkgewoKCQlpKys7Cgl9Cgljb25zb2xlLmxvZygibmV4dCBtaWxlc3RvbmUgPSAiLCBtaWxlc3RvbmVzW2ldKTsKCXJldHVybiBtaWxlc3RvbmVzW2ldOwp9CgoKZnVuY3Rpb24gZ2V0VHVydGxlQ291bnRzKCkgewkvLyBjdW11bGF0aXZlIChlbmwgPSBlbmwgKyBidXIsIGV0Yy4pCgoJY29uc29sZS5sb2coImdldFR1cnRsZUNvdW50cygpIik7CgoJLy8gSSdtIGRvaW5nIHRoZSBzdHJpbmcgc3BsaXQoIiAiKSBhbmQgcmVwbGFjZSgpIHNvIHdlIHdpbGwgcGxheSBuaWNlbHkgd2l0aCBvbmUgb2YgbXkgb3RoZXIgc2NyaXB0cyBqdXN0IGluIGNhc2UgdGhlIG90aGVyIG9uZSBydW5zIGZpcnN0CgoJdmFyIGJzdHIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYnVybmVkIikuZ2V0RWxlbWVudHNCeVRhZ05hbWUoInNwYW4iKVswXS5pbm5lckhUTUwuc3BsaXQoIiAiKVswXSB8fCAiMCI7Cgl2YXIgZXN0ciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJlbmxpZ2h0ZW5lZCIpLmdldEVsZW1lbnRzQnlUYWdOYW1lKCJzcGFuIilbMF0uaW5uZXJIVE1MLnNwbGl0KCIgIilbMF0gfHwgIjAiOwoJdmFyIG1zdHIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgibWFzdGVyIikuZ2V0RWxlbWVudHNCeVRhZ05hbWUoInNwYW4iKVswXS5pbm5lckhUTUwuc3BsaXQoIiAiKVswXSB8fCAiMCI7Cgl2YXIgZ3N0ciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJndXJ1IikuZ2V0RWxlbWVudHNCeVRhZ05hbWUoInNwYW4iKVswXS5pbm5lckhUTUwuc3BsaXQoIiAiKVswXSB8fCAiMCI7Cgl2YXIgYXN0ciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhcHByZW50aWNlIikuZ2V0RWxlbWVudHNCeVRhZ05hbWUoInNwYW4iKVswXS5pbm5lckhUTUwuc3BsaXQoIiAiKVswXSB8fCAiMCI7CgoJdmFyIHVwYXJyb3cgPSAi4oaRIjsKCXZhciBkb3duYXJyb3cgPSAi4oaTIjsKCglic3RyID0gYnN0ci5yZXBsYWNlKHVwYXJyb3csICIiKTsKCWVzdHIgPSBlc3RyLnJlcGxhY2UodXBhcnJvdywgIiIpOwoJbXN0ciA9IG1zdHIucmVwbGFjZSh1cGFycm93LCAiIik7Cglnc3RyID0gZ3N0ci5yZXBsYWNlKHVwYXJyb3csICIiKTsKCWFzdHIgPSBhc3RyLnJlcGxhY2UodXBhcnJvdywgIiIpOwoKCWJzdHIgPSBic3RyLnJlcGxhY2UoZG93bmFycm93LCAiIik7Cgllc3RyID0gZXN0ci5yZXBsYWNlKGRvd25hcnJvdywgIiIpOwoJbXN0ciA9IG1zdHIucmVwbGFjZShkb3duYXJyb3csICIiKTsKCWdzdHIgPSBnc3RyLnJlcGxhY2UoZG93bmFycm93LCAiIik7Cglhc3RyID0gYXN0ci5yZXBsYWNlKGRvd25hcnJvdywgIiIpOwoKCXZhciBidXJuZWQgPSBOdW1iZXIoIGJzdHIgKTsKCXZhciBlbmxpZ2h0ZW5lZCA9IE51bWJlciggZXN0ciApOwoJdmFyIG1hc3RlciA9IE51bWJlciggbXN0ciApOwoJdmFyIGd1cnUgPSBOdW1iZXIoIGdzdHIgKTsKCXZhciBhcHByZW50aWNlID0gTnVtYmVyKCBhc3RyICk7CgoJY29uc29sZS5sb2coInJhdyBjb3VudHM6ICIsIGFwcHJlbnRpY2UsIGd1cnUsIG1hc3RlciwgZW5saWdodGVuZWQsIGJ1cm5lZCk7CgoJZW5saWdodGVuZWQgKz0gYnVybmVkOwoJbWFzdGVyICs9IGVubGlnaHRlbmVkOwoJZ3VydSArPSBtYXN0ZXI7CglhcHByZW50aWNlICs9IGd1cnU7CgoJY29uc29sZS5sb2coImN1bXVsYXRpdmUgY291bnRzOiAiLCBhcHByZW50aWNlLCBndXJ1LCBtYXN0ZXIsIGVubGlnaHRlbmVkLCBidXJuZWQpOwoKCXJldHVybiBbYXBwcmVudGljZSwgZ3VydSwgbWFzdGVyLCBlbmxpZ2h0ZW5lZCwgYnVybmVkXTsKfQoKCgpmdW5jdGlvbiBpbml0ICgpIHsKCWNvbnNvbGUubG9nKCdpbml0KCkgc3RhcnQnKTsKCiAJdmFyIHRoZUltZyA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCJXS2x2bHVwSW1nVVJMIik7Cgl2YXIgdGhlVHh0ID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oIldLbHZsdXBUZXh0Iik7Cgl2YXIgbmV4dE1pbGVzdG9uZXMgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgiV0tsdmx1cE1pbGVzdG9uZXMiKTsKICAgIAogICAgICAJaWYgKCF0aGVJbWcpIHsKCQl0aGVJbWcgPSAiaHR0cHM6Ly9pLmltZ3VyLmNvbS9LNlVRTDFaLmdpZiI7CiAgICAgICAgCWxvY2FsU3RvcmFnZS5zZXRJdGVtKCJXS2x2bHVwSW1nVVJMIiwgdGhlSW1nKTsKICAgICAgCX0KICAgICAgCiAgICAgIAlpZiAoIXRoZVR4dCkgewoJCXRoZVR4dCA9ICc8YnIvPllvdSBsZXZlbGVkIHVwITxici8+Q29uZ3JhdHVsYXRpb25zISc7CiAgICAgICAgCWxvY2FsU3RvcmFnZS5zZXRJdGVtKCJXS2x2bHVwVGV4dCIsIHRoZVR4dCk7CiAgICAgIAl9CgoJaWYgKCFuZXh0TWlsZXN0b25lcykgewoKCQlpbml0aWFsaXplTWlsZXN0b25lcygpOwoJCQoJfQoKCWNvbnNvbGUubG9nKCdpbml0KCkgZW5kJyk7Cn0KCgpmdW5jdGlvbiBpbml0aWFsaXplTWlsZXN0b25lcyAoKSB7CgoJY29uc29sZS5sb2coImluaXRpYWxpemVNaWxlc3RvbmVzKCkiKTsKCgl2YXIgdHVydGxlQ291bnRzID0gZ2V0VHVydGxlQ291bnRzKCk7CS8vIGN1bXVsYXRpdmUgKGVubCA9IGVubCArIGJ1ciwgZXRjLikKCXZhciBuZXh0TWlsZXN0b25lcyA9IG5ldyBBcnJheSgpOwoKCWZvciAodmFyIHg9MTsgeCA8IHR1cnRsZUNvdW50cy5sZW5ndGg7IHgrKykgewoKCQluZXh0TWlsZXN0b25lc1t4LTFdID0gZ2V0TmV4dE1pbGVzdG9uZSggdHVydGxlQ291bnRzW3hdICk7ICAvLyB0dXJ0bGVDb3VudHNbXSBpbmNsdWRlcyBBcHByZW50aWNlIGl0ZW1zLCBuZXh0TWlsZXN0b25lc1tdIGRvZXMgbm90Cgl9CgoJbG9jYWxTdG9yYWdlLnNldEl0ZW0oIldLbHZsdXBNaWxlc3RvbmVzIiwgSlNPTi5zdHJpbmdpZnkobmV4dE1pbGVzdG9uZXMpKTsKfQoKCmZ1bmN0aW9uIGNoZWNrTWlsZXN0b25lcyggbGV2ZWwgKSB7CgoJY29uc29sZS5sb2coImNoZWNrTWlsZXN0b25lcygpIik7CgoJdmFyIG5leHRNaWxlc3RvbmVzID0gSlNPTi5wYXJzZSggbG9jYWxTdG9yYWdlLmdldEl0ZW0oIldLbHZsdXBNaWxlc3RvbmVzIikgKTsKCXZhciB0dXJ0bGVDb3VudHMgPSBnZXRUdXJ0bGVDb3VudHMoKTsKCXZhciBhY2hpZXZlbWVudHMgPSBuZXcgQXJyYXkoKTsKCXZhciBnb3RPbmUgPSAwOwoJdmFyIHRlc3RBbGxEb25lID0gbnVsbDsgLy9zZXNzaW9uU3RvcmFnZS5nZXRJdGVtKCJXS2x2bHVwVGVzdEFsbEJ1cm5lZCIpOwoKCWNvbnNvbGUubG9nKCJuZXh0TWlsZXN0b25lczogIiwgSlNPTi5zdHJpbmdpZnkobmV4dE1pbGVzdG9uZXMpKTsKCglpZiAoIHRlc3RBbGxEb25lIHx8IChsZXZlbCA+PSA1MCAgJiYgKHR1cnRsZUNvdW50c1swXSA9PSB0dXJ0bGVDb3VudHNbNF0pKSkgewoKCQkvLyBhbHNvIGNoZWNrIHRoYXQgbGVzc29ucyA9PSAwIGFuZCByZXZpZXdzID09IDAKCgkJdmFyIHJ2d3MgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCJyZXZpZXdzIilbMF0uZ2V0RWxlbWVudHNCeVRhZ05hbWUoInNwYW4iKVswXTsKCQl2YXIgbHNucyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoImxlc3NvbnMiKVswXS5nZXRFbGVtZW50c0J5VGFnTmFtZSgic3BhbiIpWzBdOwoJCgkJaWYgKHRlc3RBbGxEb25lIHx8IChydndzID09IDAgJiYgbHNucyA9PSAwKSkgewoKCQkJY29uc29sZS5sb2coImFsbCB0dXJ0bGVzIGJ1cm5lZCEiKTsKCgkJCS8vIHNldCBmbGFnCgkJCXNlc3Npb25TdG9yYWdlLnNldEl0ZW0oIldLbHZsdXBBbGxCdXJuZWQiLCAxKTsKCgkJCS8vIHJldHVybiBzb21lIG90aGVyd2lzZS1pbXBvc3NpYmxlIGFycmF5IHNvIHRoYXQgd2UnbGwgZ2V0IGludG8gZGlzcGxheU1pbGVzdG9uZXMoKQoJCQljb25zb2xlLmxvZygicmV0dXJuaW5nIFsxLDEsMSwxXSIpOwkKCQkJcmV0dXJuIFsxLCAxLCAxLCAxXTsKCQl9Cgl9CgoJZm9yICh2YXIgeD0wOyB4IDwgbmV4dE1pbGVzdG9uZXMubGVuZ3RoOyB4KyspIHsKCgkJaWYgKHR1cnRsZUNvdW50c1t4KzFdID49IG5leHRNaWxlc3RvbmVzW3hdKSB7IC8vIHR1cnRsZUNvdW50c1tdIGluY2x1ZGVzIEFwcHJlbnRpY2UgaXRlbXMsIG5leHRNaWxlc3RvbmVzW10gZG9lcyBub3QKCQkJCgkJCWFjaGlldmVtZW50c1t4XSA9IG5leHRNaWxlc3RvbmVzW3hdOwoJCQluZXh0TWlsZXN0b25lc1t4XSA9IGdldE5leHRNaWxlc3RvbmUoIHR1cnRsZUNvdW50c1t4KzFdICk7CgkJCWdvdE9uZSsrOwoKCQl9IGVsc2UgewoJCQlhY2hpZXZlbWVudHNbeF0gPSAwOwoJCX0KCX0KCgljb25zb2xlLmxvZygiYWNoaWV2ZW1lbnRzOiAiLCBKU09OLnN0cmluZ2lmeShhY2hpZXZlbWVudHMpKTsKCglpZiAoZ290T25lICE9IDApIHsKCgkJY29uc29sZS5sb2coImNoZWNrTWlsZXN0b25lcygpIHJldHVybmluZyBhY2hpZXZlbWVudHMiKTsKCQlsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgiV0tsdmx1cE1pbGVzdG9uZXMiLCBKU09OLnN0cmluZ2lmeShuZXh0TWlsZXN0b25lcykpOwoJCXJldHVybiBhY2hpZXZlbWVudHM7CgoJfSBlbHNlIHsKCQljb25zb2xlLmxvZygiY2hlY2tNaWxlc3RvbmVzKCkgcmV0dXJuaW5nIG51bGwiKTsKCQlyZXR1cm4gbnVsbDsKCX0KfQoKCmZ1bmN0aW9uIGRpc3BsYXlNaWxlc3RvbmVzICggbWlsZXN0b25lcyApIHsKCgljb25zb2xlLmxvZygnZGlzcGxheU1pbGVzdG9uZXMoKSBzdGFydCcpOwoJdmFyIG1zZyA9IGdldCgic2VhcmNoIik7CiAgICAJdmFyIHQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTsKIAl2YXIgdGhlSW1nID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oIldLbHZsdXBJbWdVUkwiKTsKCXZhciB0aGVUeHQgPSAiPGJyLz4iOwoJdmFyIGxhYmVscyA9IFsiIEd1cnUgdHVydGxlISIsICIgTWFzdGVyIHR1cnRsZSEiLCAiIEVubGlnaHRlbmVkIHR1cnRsZSEiLCAiIEJ1cm5lZCB0dXJ0bGUhIl07CiAJdmFyIHRoZVBvcyA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCJXS2x2bHVwSW1nUG9zIikgfHwgIkxFRlQiOwoKICAgIHN3aXRjaCh0aGVQb3MudG9VcHBlckNhc2UoKSkgewoKICAgICAgICBjYXNlICJCRUxPVyI6CiAgICAgICAgY2FzZSAiVU5ERVIiOgogICAgICAgIGNhc2UgIlVOREVSTkVBVEgiOgogICAgICAgIGNhc2UgIkRPV04iOgogICAgICAgIGNhc2UgIkJPVFRPTSI6CiAgICAgICAgY2FzZSAi44GX44GfIjoKICAgICAgICBjYXNlICLkuIsiOgogICAgICAgICAgICB0LmlubmVySFRNTCA9ICc8ZGl2IGlkPSJXS2x2bHVwVHh0IiBzdHlsZT0ibWFyZ2luOmF1dG87dGV4dC1hbGlnbjpjZW50ZXI7bGluZS1oZWlnaHQ6MTEwJTtmb250LXNpemU6MzAwJSI+IDwvZGl2PicrCiAgICAgICAgICAgICAgICAnPGltZyBpZD0iV0tsdmx1cEltZyIgc3R5bGU9ImRpc3BsYXk6YmxvY2s7bWFyZ2luOmF1dG8iPiA8L2ltZz4nKwogICAgICAgIAkJJzwvZGl2Pic7CiAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICBjYXNlICJBQk9WRSI6CiAgICAgICAgY2FzZSAiVE9QIjoKICAgICAgICBjYXNlICJVUCI6CiAgICAgICAgY2FzZSAiT1ZFUiI6CiAgICAgICAgY2FzZSAiT04gVE9QIE9GIjoKICAgICAgICBjYXNlICJDRU5URVIiOgogICAgICAgIGNhc2UgIkNFTlRFUkVEIjoKICAgICAgICBjYXNlICLjgYbjgYgiOgogICAgICAgIGNhc2UgIuS4iiI6CiAgICAgICAgY2FzZSAi44Gq44GLIjoKICAgICAgICBjYXNlICLkuK0iOgogICAgICAgIGNhc2UgIuOBoeOCheOBhuOBiuOBhiI6CiAgICAgICAgY2FzZSAi5Lit5aSuIjoKICAgICAgICAgICAgdC5pbm5lckhUTUwgPSAnPGltZyBpZD0iV0tsdmx1cEltZyIgc3R5bGU9ImRpc3BsYXk6YmxvY2s7bWFyZ2luOmF1dG8iPiA8L2ltZz4nKwogICAgICAgICAgICAgICAgJzxkaXYgaWQ9IldLbHZsdXBUeHQiIHN0eWxlPSJtYXJnaW46YXV0bzt0ZXh0LWFsaWduOmNlbnRlcjtsaW5lLWhlaWdodDoxMTAlO2ZvbnQtc2l6ZTozMDAlIj4gPC9kaXY+JysKICAgICAgICAJCSc8L2Rpdj4nOwogICAgICAgICAgICBicmVhazsKCiAgICAgICAgY2FzZSAiTEVGVCI6CiAgICAgICAgY2FzZSAiQVQgTEVGVCI6CiAgICAgICAgY2FzZSAiT04gTEVGVCI6CiAgICAgICAgY2FzZSAiT04gVEhFIExFRlQiOgogICAgICAgIGNhc2UgIkxFRlQgT0YiOgogICAgICAgIGNhc2UgIlRPIFRIRSBMRUZUIE9GIjoKICAgICAgICBjYXNlICLjgbLjgaDjgooiOgogICAgICAgIGNhc2UgIuW3piI6CiAgICAgICAgY2FzZSAi44Gy44Gg44KK44GM44KPIjoKICAgICAgICBjYXNlICLlt6blgbQiOgogICAgICAgIGRlZmF1bHQ6CiAgICAgICAgICAgIHQuaW5uZXJIVE1MID0gJzxpbWcgaWQ9IldLbHZsdXBJbWciIHN0eWxlPSJmbG9hdDpsZWZ0O21hcmdpbjoyMHB4Ij4gPC9pbWc+JysKICAgICAgICAgICAgICAgICc8ZGl2IGlkPSJXS2x2bHVwVHh0IiBzdHlsZT0ibWFyZ2luOjIwcHg7ZmxvYXQ6bGVmdDt0ZXh0LWFsaWduOmNlbnRlcjtsaW5lLWhlaWdodDoxMTAlO2ZvbnQtc2l6ZTozMDAlIj4gPC9kaXY+JysKICAgICAgICAJCSc8L2Rpdj4nOwogICAgICAgICAgICBicmVhazsKCiAgICAgICAgY2FzZSAiUklHSFQiOgogICAgICAgIGNhc2UgIkFUIFJJR0hUIjoKICAgICAgICBjYXNlICJPTiBSSUdIVCI6CiAgICAgICAgY2FzZSAiT04gVEhFIFJJR0hUIjoKICAgICAgICBjYXNlICJSSUdIVCBPRiI6CiAgICAgICAgY2FzZSAiVE8gVEhFIFJJR0hUIE9GIjoKICAgICAgICBjYXNlICJNSUdJIjoKICAgICAgICBjYXNlICLjgb/jgY4iOgogICAgICAgIGNhc2UgIuWPsyI6CiAgICAgICAgY2FzZSAi44G/44GO44GM44KPIjoKICAgICAgICBjYXNlICLlj7PlgbQiOgogICAgICAgICAgICB0LmlubmVySFRNTCA9ICc8aW1nIGlkPSJXS2x2bHVwSW1nIiBzdHlsZT0iZmxvYXQ6cmlnaHQ7bWFyZ2luOjIwcHgiPiA8L2ltZz4nKwogICAgICAgICAgICAgICAgJzxkaXYgaWQ9IldLbHZsdXBUeHQiIHN0eWxlPSJtYXJnaW46MjBweDtmbG9hdDpyaWdodDt0ZXh0LWFsaWduOmNlbnRlcjtsaW5lLWhlaWdodDoxMTAlO2ZvbnQtc2l6ZTozMDAlIj4gPC9kaXY+JysKICAgICAgICAJCSc8L2Rpdj4nOwogICAgICAgICAgICBicmVhazsKCiAgICB9CgogICAgdC5zdHlsZS53aWR0aCA9ICIxMjAwcHgiOwogICAgdC5zdHlsZS5tYXJnaW4gPSAiYXV0byI7CgogICAgbXNnLmFwcGVuZENoaWxkKHQpOwoKCXZhciB0aGluZzEgPSBnZXQoIldLbHZsdXBJbWciKTsKCWlmICh0aGluZzEgJiYgdGhlSW1nKSB7CgkJdGhpbmcxLnNyYyA9IHRoZUltZzsKCX0KCgl2YXIgYWxsRG9uZVdLID0gc2Vzc2lvblN0b3JhZ2UuZ2V0SXRlbSgiV0tsdmx1cEFsbEJ1cm5lZCIpOwoJCglpZiAoYWxsRG9uZVdLICYmIGFsbERvbmVXSyA9PSAxKSB7CgoJCXRoZVR4dCArPSAiQUxMIFRVUlRMRVMgQlVSTkVEITxici8+V0FOSUtBTkkgQ09NUExFVEUhIjsKCQkvL3Nlc3Npb25TdG9yYWdlLnJlbW92ZUl0ZW0oIldLbHZsdXBUZXN0QWxsQnVybmVkIik7Cgl9IGVsc2UgewoKCQlmb3IgKHZhciB4ID0gbWlsZXN0b25lcy5sZW5ndGggLSAxOyB4ID49IDA7IHgtLSkgewoKCQkJaWYgKG1pbGVzdG9uZXNbeF0gPT0gMSkgewoKCQkJCXRoZVR4dCArPSAiRmlyc3QiICsgbGFiZWxzW3hdICsgIjxici8+IjsKCQkJfQoJCQllbHNlIGlmIChtaWxlc3RvbmVzW3hdICE9IDApIHsKCgkJCQl0aGVUeHQgKz0gbWlsZXN0b25lc1t4XSArICJ0aCIgKyBsYWJlbHNbeF0gKyAiPGJyLz4iOwoJCQl9CgkJfQoJfQoKICAgIHZhciBjdXN0b21CdXJuTGFiZWwgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgiV0tCTFJCdXJuTGV2ZWxOYW1lIikgfHwgIkJ1cm5lZCI7CiAgICBpZiAoY3VzdG9tQnVybkxhYmVsICYmIChjdXN0b21CdXJuTGFiZWwgIT0gIkJ1cm5lZCIpKSB7CiAgICAgICAgdmFyIG5ld1RleHQgPSB0aGVUeHQucmVwbGFjZSgiQnVybmVkIiwgY3VzdG9tQnVybkxhYmVsKTsKICAgICAgICBpZiAobmV3VGV4dCA9PSB0aGVUeHQpIHsKICAgICAgICAgICAgdmFyIG5ld0NCTCA9IGN1c3RvbUJ1cm5MYWJlbC50b1VwcGVyQ2FzZSgpOwogICAgICAgICAgICBuZXdUZXh0ID0gdGhlVHh0LnJlcGxhY2UoIkJVUk5FRCIsIG5ld0NCTCk7CiAgICAgICAgfQogICAgICAgIHRoZVR4dCA9IG5ld1RleHQ7CiAgICB9CgoJdmFyIHRoaW5nMiA9IGdldCgiV0tsdmx1cFR4dCIpOwoKCWlmICh0aGluZzIpIHsKCgkJdGhpbmcyLmlubmVySFRNTD0gdGhlVHh0OwoJfSAKCgljb25zb2xlLmxvZygnZGlzcGxheU1pbGVzdG9uZXMoKSBlbmQnKTsKfQoKCgpmdW5jdGlvbiBtYWluICgpIHsKCgl2YXIgY3VyTGV2ZWw7CgoJY29uc29sZS5sb2coIm1haW4oKSIpOwoKCWluaXQoKTsKCglHTXNldHVwKCk7CgoJY3VyTGV2ZWwgPSBjaGVja0xldmVsKCk7CgoJdmFyIGxhc3RLbm93bkxldmVsID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oIldLbHZsdXBQcmV2TGV2ZWwiKSB8fCAxOwoKCWlmIChjdXJMZXZlbCAhPSBsYXN0S25vd25MZXZlbCkgeyByZXR1cm47IH0KCglpZiAoc2hvdWxkRGlzcGxheSgpKSB7CgoJCXZhciBkdXJ0ZXh0ID0gZ2V0KCJXS2x2bGR1clR4dCIpOwoKCQlpZiAoZHVydGV4dCkgeyBkdXJ0ZXh0LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoZHVydGV4dCk7IH0gIC8vIG92ZXJyaWRlIFdLIExldmVsIER1cmF0aW9uIHNjcmlwdAoKCQlkaXNwbGF5TGV2ZWxVcE1lc3NhZ2UoIGN1ckxldmVsICk7CgoJfSBlbHNlIHsKCgkJdmFyIG1pbGVzdG9uZXMgPSBjaGVja01pbGVzdG9uZXMoIGN1ckxldmVsICk7CgoJCWlmIChtaWxlc3RvbmVzKSB7CgoJCQl2YXIgZHVydGV4dCA9IGdldCgiV0tsdmxkdXJUeHQiKTsKCgkJCWlmIChkdXJ0ZXh0KSB7IGR1cnRleHQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChkdXJ0ZXh0KTsgfSAgLy8gb3ZlcnJpZGUgV0sgTGV2ZWwgRHVyYXRpb24gc2NyaXB0CgoJCQlkaXNwbGF5TWlsZXN0b25lcyggbWlsZXN0b25lcyApOwoKCQl9IAoJfQp9Cgp3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigiRE9NQ29udGVudExvYWRlZCIsIG1haW4sIGZhbHNlKTsKCmNvbnNvbGUubG9nKCdzY3JpcHQgbG9hZCBlbmQnKTsK",
            "storage": {
                "data": {},
                "ts": 1607436649632
            },
            "uuid": "f56e4394-b554-42b3-b894-0263a9d2f095"
        },
        {
            "enabled": false,
            "file_url": "https://greasyfork.org/scripts/26481-wanikani-katakana-madness/code/WaniKani%20Katakana%20Madness.user.js",
            "name": "WaniKani Katakana Madness",
            "options": {
                "awareOfChrome": false,
                "check_for_updates": true,
                "comment": null,
                "compat_arrayleft": false,
                "compat_foreach": false,
                "compat_forvarin": false,
                "compat_metadata": false,
                "compat_powerful_this": null,
                "compat_uW_gmonkey": false,
                "compat_wrappedjsobject": false,
                "compatopts_for_requires": true,
                "noframes": null,
                "override": {
                    "merge_connects": true,
                    "merge_excludes": true,
                    "merge_includes": true,
                    "merge_matches": true,
                    "orig_excludes": [],
                    "orig_includes": [
                        "https://www.wanikani.com/*",
                        "http://www.wanikani.com/*"
                    ],
                    "orig_matches": [],
                    "orig_noframes": null,
                    "orig_run_at": "document-end",
                    "use_blockers": [],
                    "use_connects": [],
                    "use_excludes": [
                        "https://www.wanikani.com/lesson/*"
                    ],
                    "use_includes": [],
                    "use_matches": []
                },
                "run_at": null,
                "tab_types": null
            },
            "position": 8,
            "source": "",
            "storage": {
                "data": {},
                "ts": 1607436649633
            },
            "uuid": "8e97bd94-02cf-48f1-a58b-ff272dd5aadb"
        },
        {
            "enabled": false,
            "file_url": "https://raw.githubusercontent.com/selslack/codingame-sync-userscript/master/codingame-sync.user.js",
            "name": "Codingame File Sync",
            "options": {
                "awareOfChrome": false,
                "check_for_updates": true,
                "comment": null,
                "compat_arrayleft": false,
                "compat_foreach": false,
                "compat_forvarin": false,
                "compat_metadata": false,
                "compat_powerful_this": null,
                "compat_uW_gmonkey": false,
                "compat_wrappedjsobject": false,
                "compatopts_for_requires": true,
                "noframes": null,
                "override": {
                    "merge_connects": true,
                    "merge_excludes": true,
                    "merge_includes": true,
                    "merge_matches": true,
                    "orig_excludes": [],
                    "orig_includes": [],
                    "orig_matches": [
                        "*://www.codingame.com/*"
                    ],
                    "orig_noframes": null,
                    "orig_run_at": "document-idle",
                    "use_blockers": [],
                    "use_connects": [],
                    "use_excludes": [],
                    "use_includes": [],
                    "use_matches": []
                },
                "run_at": null,
                "tab_types": null
            },
            "position": 9,
            "source": "Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgIENvZGluZ2FtZSBGaWxlIFN5bmMKLy8gQG1hdGNoICAgICo6Ly93d3cuY29kaW5nYW1lLmNvbS8qCi8vIEB2ZXJzaW9uICAyLjAKLy8gQGdyYW50ICAgIG5vbmUKLy8gPT0vVXNlclNjcmlwdD09CgooZnVuY3Rpb24oKSB7CiAgICAndXNlIHN0cmljdCc7CgogICAgdmFyIGlucHV0ID0gbnVsbDsKICAgIHZhciByZWFkZXIgPSBuZXcgRmlsZVJlYWRlcigpOwoKICAgIHZhciBvYnNlcnZlciA9IG5ldyBNdXRhdGlvbk9ic2VydmVyKGZ1bmN0aW9uIChtdXRhdGlvbnMpIHsKICAgICAgICBtdXRhdGlvbnMuZm9yRWFjaChmdW5jdGlvbiAobXV0YXRpb24pIHsKICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBtdXRhdGlvbi5hZGRlZE5vZGVzLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgICAgICAgICBpZiAobXV0YXRpb24uYWRkZWROb2Rlc1tpXS5ub2RlVHlwZSAhPT0gMSkgeyAvLyBFTEVNRU5UX05PREUKICAgICAgICAgICAgICAgICAgICBjb250aW51ZSA7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgbGV0IGJ1dHRvbnMgPSBtdXRhdGlvbi5hZGRlZE5vZGVzW2ldLnF1ZXJ5U2VsZWN0b3IoImRpdi5jb2RlLWJ1dHRvbnMiKTsKCiAgICAgICAgICAgICAgICBpZiAoIWJ1dHRvbnMpIHsKICAgICAgICAgICAgICAgICAgICBjb250aW51ZSA7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgaW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJpbnB1dCIpOwogICAgICAgICAgICAgICAgaW5wdXQuY2xhc3NOYW1lID0gImlkZS10YWIiOwogICAgICAgICAgICAgICAgaW5wdXQudHlwZSA9ICJmaWxlIjsKCiAgICAgICAgICAgICAgICBidXR0b25zLmluc2VydEJlZm9yZShpbnB1dCwgYnV0dG9ucy5maXJzdENoaWxkKTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBtdXRhdGlvbi5yZW1vdmVkTm9kZXMubGVuZ3RoOyBpKyspIHsKICAgICAgICAgICAgICAgIGlmIChtdXRhdGlvbi5yZW1vdmVkTm9kZXNbaV0ubm9kZVR5cGUgIT09IDEpIHsgLy8gRUxFTUVOVF9OT0RFCiAgICAgICAgICAgICAgICAgICAgY29udGludWUgOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIGlmICghbXV0YXRpb24ucmVtb3ZlZE5vZGVzW2ldLnF1ZXJ5U2VsZWN0b3IoImRpdi5jb2RlLWJ1dHRvbnMiKSkgewogICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlIDsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBpbnB1dCA9IG51bGw7CiAgICAgICAgICAgIH0KICAgICAgICB9KTsKICAgIH0pOwoKICAgIHZhciBzeW5jID0gZnVuY3Rpb24gKCkgewogICAgICAgIGlmICghaW5wdXQgfHwgaW5wdXQuZmlsZXMubGVuZ3RoICE9PSAxKSB7CiAgICAgICAgICAgIHJldHVybiA7CiAgICAgICAgfQoKICAgICAgICB0cnkgewogICAgICAgICAgICByZWFkZXIucmVhZEFzVGV4dChpbnB1dC5maWxlc1swXSk7CiAgICAgICAgfQogICAgICAgIGNhdGNoIChlKSB7CiAgICAgICAgICAgIC8vIFNhZmVseSBpZ25vcmUgYW55IGVycm9yCiAgICAgICAgfQogICAgfTsKCiAgICByZWFkZXIub25sb2FkID0gZnVuY3Rpb24gKGV2ZW50KSB7CiAgICAgICAgd2luZG93LmRvY3VtZW50LmRpc3BhdGNoRXZlbnQobmV3IEN1c3RvbUV2ZW50KCJFeHRlcm5hbEVkaXRvclRvSURFIiwgewogICAgICAgICAgICBkZXRhaWw6IHsKICAgICAgICAgICAgICAgIHN0YXR1czogInVwZGF0ZUNvZGUiLAogICAgICAgICAgICAgICAgY29kZTogZXZlbnQudGFyZ2V0LnJlc3VsdC5yZXBsYWNlKC9cclxuL2csICJcbiIpLnJlcGxhY2UoL1xyL2csICJcbiIpCiAgICAgICAgICAgIH0KICAgICAgICB9KSk7CiAgICB9OwoKICAgIG9ic2VydmVyLm9ic2VydmUoZG9jdW1lbnQuYm9keSwgewogICAgICAgIHN1YnRyZWU6IHRydWUsCiAgICAgICAgY2hpbGRMaXN0OiB0cnVlLAogICAgICAgIGF0dHJpYnV0ZXM6IGZhbHNlLAogICAgICAgIGNoYXJhY3RlckRhdGE6IGZhbHNlCiAgICB9KTsKCiAgICBzZXRJbnRlcnZhbChzeW5jLCAxMDAwKTsKfSkoKTsK",
            "storage": {
                "data": {},
                "ts": 1607436649634
            },
            "uuid": "7c2e57a8-c3c9-405e-93b2-c4bb6a4312aa"
        },
        {
            "enabled": true,
            "file_url": "https://greasyfork.org/scripts/396170-bunpro-disable-backspace-undo/code/Bunpro:%20Disable%20Backspace%20Undo.user.js",
            "name": "Bunpro: Disable Backspace Undo",
            "options": {
                "check_for_updates": true,
                "comment": null,
                "compat_foreach": false,
                "compat_metadata": false,
                "compat_powerful_this": null,
                "compat_prototypes": false,
                "compat_wrappedjsobject": false,
                "compatopts_for_requires": true,
                "noframes": null,
                "override": {
                    "merge_connects": true,
                    "merge_excludes": true,
                    "merge_includes": true,
                    "merge_matches": true,
                    "orig_connects": [],
                    "orig_excludes": [
                        "*community.bunpro.jp*"
                    ],
                    "orig_includes": [
                        "*bunpro.jp/*"
                    ],
                    "orig_matches": [],
                    "orig_noframes": null,
                    "orig_run_at": "document-idle",
                    "use_blockers": [],
                    "use_connects": [],
                    "use_excludes": [],
                    "use_includes": [],
                    "use_matches": []
                },
                "run_at": null,
                "tab_types": null
            },
            "position": 10,
            "requires": [
                {
                    "meta": {
                        "mimetype": "text/javascript",
                        "name": "Bunpro:%20Helpful%20Events.js",
                        "ts": 1649271252201,
                        "url": "https://greasyfork.org/scripts/370623-bunpro-helpful-events/code/Bunpro:%20Helpful%20Events.js?version=974369"
                    },
                    "source": "Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICBCdW5wcm87IEhlbHBmdWwgRXZlbnRzCi8vIEBuYW1lc3BhY2UgICAgaHR0cDovL3RhbXBlcm1vbmtleS5uZXQvCi8vIEB2ZXJzaW9uICAgICAgMS4wLjIKLy8gQGF1dGhvciAgICAgICBLdW1pcmVpCi8vIEByZXF1aXJlICAgICAgaHR0cHM6Ly9ncmVhc3lmb3JrLm9yZy9zY3JpcHRzLzQzMjQxOC13YWl0LWZvci1zZWxlY3Rvci9jb2RlL1dhaXQlMjBGb3IlMjBTZWxlY3Rvci5qcz92ZXJzaW9uPTk3NDM2NgovLyA9PS9Vc2VyU2NyaXB0PT0KCihmdW5jdGlvbih3ZnMpIHsKICAgIC8vIEFkZCBhIGN1c3RvbSBldmVudCBmb3Igd2hlbiBCUCBjcmVhdGVzIGEgbmV3IGJvZHkKICAgIHZhciBuZXdCb2R5ID0gbmV3IEV2ZW50KCduZXctYm9keScpOwogICAgd2ZzLndhaXQoJ2JvZHkgPiBoZWFkZXInLCBmdW5jdGlvbihlKSB7ZmlyZUV2ZW50KG5ld0JvZHkpO30pOwoKICAgIC8vIEFkZCBhIGN1c3RvbSBldmVudCBmb3Igd2hlbiB5b3UgZ2V0IGEgbmV3IGl0ZW0gaW4gcmV2aWV3cwogICAgdmFyIG5ld1Jldmlld0l0ZW0gPSBuZXcgRXZlbnQoJ25ldy1yZXZpZXctaXRlbScpOwogICAgd2ZzLndhaXQoJy5sZXZlbF9sZXNzb25faW5mbyBhJywgZnVuY3Rpb24oZSkge2ZpcmVFdmVudChuZXdSZXZpZXdJdGVtKTt9KTsKCiAgICAvLyBBZGQgYSBjdXN0b20gZXZlbnQgd2hlbiB5b3UgZ28gdG8gc3R1ZHkgb3IgY3JhbSBwYWdlCiAgICB2YXIgcXVpelBhZ2UgPSBuZXcgRXZlbnQoJ3F1aXotcGFnZScpOwogICAgd2ZzLndhaXQoJyNzaG93LWdyYW1tYXInLCBmdW5jdGlvbihlKSB7ZmlyZUV2ZW50KHF1aXpQYWdlKTt9KTsKCiAgICAvLyBBZGQgYSBjdXN0b20gZXZlbnQgd2hlbiB5b3UgZ28gdG8gc3R1ZHkgcGFnZQogICAgdmFyIHN0dWR5UGFnZSA9IG5ldyBFdmVudCgnc3R1ZHktcGFnZScpOwogICAgd2ZzLndhaXQoJyNzdHVkeS1wYWdlICNzaG93LWdyYW1tYXInLCBmdW5jdGlvbihlKSB7ZmlyZUV2ZW50KHN0dWR5UGFnZSk7fSk7CgogICAgLy8gQWRkIGEgY3VzdG9tIGV2ZW50IHdoZW4geW91IGdvIHRvIGNyYW0gcGFnZQogICAgdmFyIGNyYW1QYWdlID0gbmV3IEV2ZW50KCdjcmFtLXBhZ2UnKTsKICAgIHdmcy53YWl0KCcjY3JhbS1wYWdlICNzaG93LWdyYW1tYXInLCBmdW5jdGlvbihlKSB7ZmlyZUV2ZW50KGNyYW1QYWdlKTt9KTsKCiAgICAvLyBGaXJlcyB0aGUgZ2l2ZW4gZXZlbnQgb24gdGhlIEhUTUwgZWxlbWVudAogICAgZnVuY3Rpb24gZmlyZUV2ZW50KGV2ZW50KSB7CiAgICAgICAgdmFyIHJldHJ5SW50ZXJ2YWwgPSBzZXRJbnRlcnZhbChmdW5jdGlvbigpewogICAgICAgICAgICBpZiAoZG9jdW1lbnQucmVhZHlTdGF0ZSA9PSAiY29tcGxldGUiKSB7CiAgICAgICAgICAgICAgICAkKCdIVE1MJylbMF0uZGlzcGF0Y2hFdmVudChldmVudCk7CiAgICAgICAgICAgICAgICBjbGVhckludGVydmFsKHJldHJ5SW50ZXJ2YWwpOwogICAgICAgICAgICB9CiAgICAgICAgfSwgMTAwKTsKICAgIH0KfSkod2luZG93Lndmcyk7Cg=="
                }
            ],
            "source": "Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICBCdW5wcm86IERpc2FibGUgQmFja3NwYWNlIFVuZG8KLy8gQG5hbWVzcGFjZSAgICBodHRwOi8vdGFtcGVybW9ua2V5Lm5ldC8KLy8gQHZlcnNpb24gICAgICAxLjAuNgovLyBAZGVzY3JpcHRpb24gIERpc2FibGVzIHRoZSBiYWNrc3BhY2UgZnVuY3Rpb25hbGl0eSBpbiByZXZpZXdzCi8vIEBhdXRob3IgICAgICAgS3VtaXJlaQovLyBAaW5jbHVkZSAgICAgICpidW5wcm8uanAvKgovLyBAZXhjbHVkZSAgICAgICpjb21tdW5pdHkuYnVucHJvLmpwKgovLyBAcmVxdWlyZSAgICAgIGh0dHBzOi8vZ3JlYXN5Zm9yay5vcmcvc2NyaXB0cy8zNzA2MjMtYnVucHJvLWhlbHBmdWwtZXZlbnRzL2NvZGUvQnVucHJvOiUyMEhlbHBmdWwlMjBFdmVudHMuanM/dmVyc2lvbj05NzQzNjkKLy8gQGdyYW50ICAgICAgICBub25lCi8vID09L1VzZXJTY3JpcHQ9PQoKKGZ1bmN0aW9uKCkgewogICAgdmFyICQgPSB3aW5kb3cuJDsKICAgICQoJ2h0bWwnKVswXS5hZGRFdmVudExpc3RlbmVyKCdxdWl6LXBhZ2UnLCAoKT0+ewogICAgICAgIHZhciBpbnB1dF9lbGVtID0gJCgnI3N0dWR5LWFuc3dlci1pbnB1dCcpOwogICAgICAgICQoJ2JvZHknKS5rZXlkb3duKChldmVudCk9PnsKICAgICAgICAgICAgdmFyIGNvbG9ycyA9IGlucHV0X2VsZW0uY3NzKCdiYWNrZ3JvdW5kLWNvbG9yJykubWF0Y2goL1xkKy9nKTsKICAgICAgICAgICAgdmFyIHN1bSA9IGNvbG9ycy5yZWR1Y2UoKGEsIGIpPT5OdW1iZXIoYSkrTnVtYmVyKGIpKTsKICAgICAgICAgICAgdmFyIHJlZG5lc3MgPSBjb2xvcnNbMF0vc3VtOwogICAgICAgICAgICBpZiAoZXZlbnQua2V5Q29kZSA9PSA4ICYmIHJlZG5lc3MgPiAwLjQpIHsKICAgICAgICAgICAgICAgIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpOwogICAgICAgICAgICAgICAgaW5wdXRfZWxlbS5ibHVyKCk7CiAgICAgICAgICAgIH0KICAgICAgICB9KTsKICAgIH0pOwp9KSgpOwo=",
            "storage": {
                "data": {},
                "ts": 1607436649636
            },
            "uuid": "a83ba4d2-a68b-45d6-b98f-e0c8a83de351"
        },
        {
            "enabled": true,
            "file_url": "https://greasyfork.org/scripts/35063-wanikani-double-check/code/Wanikani%20Double-Check.user.js",
            "name": "Wanikani Double-Check",
            "options": {
                "check_for_updates": false,
                "comment": null,
                "compat_foreach": false,
                "compat_metadata": false,
                "compat_powerful_this": null,
                "compat_prototypes": false,
                "compat_wrappedjsobject": false,
                "compatopts_for_requires": true,
                "noframes": null,
                "override": {
                    "merge_connects": true,
                    "merge_excludes": true,
                    "merge_includes": true,
                    "merge_matches": true,
                    "orig_connects": [],
                    "orig_excludes": [],
                    "orig_includes": [
                        "/^https://(www|preview).wanikani.com/review/session/"
                    ],
                    "orig_matches": [],
                    "orig_noframes": null,
                    "orig_run_at": "document-end",
                    "use_blockers": [],
                    "use_connects": [],
                    "use_excludes": [],
                    "use_includes": [],
                    "use_matches": []
                },
                "run_at": null,
                "tab_types": null
            },
            "position": 11,
            "source": "",
            "storage": {
                "data": {},
                "ts": 1606921521559
            },
            "uuid": "462d24eb-4e66-4f82-b8dd-79a94b1c8872"
        },
        {
            "enabled": true,
            "file_url": "https://greasyfork.org/scripts/371388-bunpro-mistake-delay/code/Bunpro:%20Mistake%20Delay.user.js",
            "name": "Bunpro: Mistake Delay",
            "options": {
                "check_for_updates": true,
                "comment": null,
                "compat_foreach": false,
                "compat_metadata": false,
                "compat_powerful_this": null,
                "compat_prototypes": false,
                "compat_wrappedjsobject": false,
                "compatopts_for_requires": true,
                "noframes": null,
                "override": {
                    "merge_connects": true,
                    "merge_excludes": true,
                    "merge_includes": true,
                    "merge_matches": true,
                    "orig_connects": [],
                    "orig_excludes": [
                        "*community.bunpro.jp*"
                    ],
                    "orig_includes": [
                        "*bunpro.jp/*"
                    ],
                    "orig_matches": [],
                    "orig_noframes": null,
                    "orig_run_at": "document-idle",
                    "use_blockers": [],
                    "use_connects": [],
                    "use_excludes": [],
                    "use_includes": [],
                    "use_matches": []
                },
                "run_at": null,
                "tab_types": null
            },
            "position": 12,
            "requires": [
                {
                    "meta": {
                        "mimetype": "text/javascript",
                        "name": "Bunpro:%20Helpful%20Events.js",
                        "ts": 1649271252239,
                        "url": "https://greasyfork.org/scripts/370623-bunpro-helpful-events/code/Bunpro:%20Helpful%20Events.js?version=974369"
                    },
                    "source": "Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICBCdW5wcm87IEhlbHBmdWwgRXZlbnRzCi8vIEBuYW1lc3BhY2UgICAgaHR0cDovL3RhbXBlcm1vbmtleS5uZXQvCi8vIEB2ZXJzaW9uICAgICAgMS4wLjIKLy8gQGF1dGhvciAgICAgICBLdW1pcmVpCi8vIEByZXF1aXJlICAgICAgaHR0cHM6Ly9ncmVhc3lmb3JrLm9yZy9zY3JpcHRzLzQzMjQxOC13YWl0LWZvci1zZWxlY3Rvci9jb2RlL1dhaXQlMjBGb3IlMjBTZWxlY3Rvci5qcz92ZXJzaW9uPTk3NDM2NgovLyA9PS9Vc2VyU2NyaXB0PT0KCihmdW5jdGlvbih3ZnMpIHsKICAgIC8vIEFkZCBhIGN1c3RvbSBldmVudCBmb3Igd2hlbiBCUCBjcmVhdGVzIGEgbmV3IGJvZHkKICAgIHZhciBuZXdCb2R5ID0gbmV3IEV2ZW50KCduZXctYm9keScpOwogICAgd2ZzLndhaXQoJ2JvZHkgPiBoZWFkZXInLCBmdW5jdGlvbihlKSB7ZmlyZUV2ZW50KG5ld0JvZHkpO30pOwoKICAgIC8vIEFkZCBhIGN1c3RvbSBldmVudCBmb3Igd2hlbiB5b3UgZ2V0IGEgbmV3IGl0ZW0gaW4gcmV2aWV3cwogICAgdmFyIG5ld1Jldmlld0l0ZW0gPSBuZXcgRXZlbnQoJ25ldy1yZXZpZXctaXRlbScpOwogICAgd2ZzLndhaXQoJy5sZXZlbF9sZXNzb25faW5mbyBhJywgZnVuY3Rpb24oZSkge2ZpcmVFdmVudChuZXdSZXZpZXdJdGVtKTt9KTsKCiAgICAvLyBBZGQgYSBjdXN0b20gZXZlbnQgd2hlbiB5b3UgZ28gdG8gc3R1ZHkgb3IgY3JhbSBwYWdlCiAgICB2YXIgcXVpelBhZ2UgPSBuZXcgRXZlbnQoJ3F1aXotcGFnZScpOwogICAgd2ZzLndhaXQoJyNzaG93LWdyYW1tYXInLCBmdW5jdGlvbihlKSB7ZmlyZUV2ZW50KHF1aXpQYWdlKTt9KTsKCiAgICAvLyBBZGQgYSBjdXN0b20gZXZlbnQgd2hlbiB5b3UgZ28gdG8gc3R1ZHkgcGFnZQogICAgdmFyIHN0dWR5UGFnZSA9IG5ldyBFdmVudCgnc3R1ZHktcGFnZScpOwogICAgd2ZzLndhaXQoJyNzdHVkeS1wYWdlICNzaG93LWdyYW1tYXInLCBmdW5jdGlvbihlKSB7ZmlyZUV2ZW50KHN0dWR5UGFnZSk7fSk7CgogICAgLy8gQWRkIGEgY3VzdG9tIGV2ZW50IHdoZW4geW91IGdvIHRvIGNyYW0gcGFnZQogICAgdmFyIGNyYW1QYWdlID0gbmV3IEV2ZW50KCdjcmFtLXBhZ2UnKTsKICAgIHdmcy53YWl0KCcjY3JhbS1wYWdlICNzaG93LWdyYW1tYXInLCBmdW5jdGlvbihlKSB7ZmlyZUV2ZW50KGNyYW1QYWdlKTt9KTsKCiAgICAvLyBGaXJlcyB0aGUgZ2l2ZW4gZXZlbnQgb24gdGhlIEhUTUwgZWxlbWVudAogICAgZnVuY3Rpb24gZmlyZUV2ZW50KGV2ZW50KSB7CiAgICAgICAgdmFyIHJldHJ5SW50ZXJ2YWwgPSBzZXRJbnRlcnZhbChmdW5jdGlvbigpewogICAgICAgICAgICBpZiAoZG9jdW1lbnQucmVhZHlTdGF0ZSA9PSAiY29tcGxldGUiKSB7CiAgICAgICAgICAgICAgICAkKCdIVE1MJylbMF0uZGlzcGF0Y2hFdmVudChldmVudCk7CiAgICAgICAgICAgICAgICBjbGVhckludGVydmFsKHJldHJ5SW50ZXJ2YWwpOwogICAgICAgICAgICB9CiAgICAgICAgfSwgMTAwKTsKICAgIH0KfSkod2luZG93Lndmcyk7Cg=="
                }
            ],
            "source": "Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICBCdW5wcm86IE1pc3Rha2UgRGVsYXkKLy8gQG5hbWVzcGFjZSAgICBodHRwOi8vdGFtcGVybW9ua2V5Lm5ldC8KLy8gQHZlcnNpb24gICAgICAwLjIuOAovLyBAZGVzY3JpcHRpb24gIFByZXZlbnRzIHByZW1hdHVyZSB3cm9uZyBhbnN3ZXIgc3VibWlzc2lvbi4KLy8gQGF1dGhvciAgICAgICBLdW1pcmVpCi8vIEBpbmNsdWRlICAgICAgKmJ1bnByby5qcC8qCi8vIEBleGNsdWRlICAgICAgKmNvbW11bml0eS5idW5wcm8uanAqCi8vIEByZXF1aXJlICAgICAgaHR0cHM6Ly9ncmVhc3lmb3JrLm9yZy9zY3JpcHRzLzM3MDYyMy1idW5wcm8taGVscGZ1bC1ldmVudHMvY29kZS9CdW5wcm86JTIwSGVscGZ1bCUyMEV2ZW50cy5qcz92ZXJzaW9uPTk3NDM2OQovLyBAZ3JhbnQgICAgICAgIG5vbmUKLy8gPT0vVXNlclNjcmlwdD09CgooZnVuY3Rpb24oKSB7CgkvLyBTZWNvbmRzIG9mIGRlbGF5Cgljb25zdCBkZWxheSA9IDI7CgoJLy8gV2FpdCB1bnRpbCB3ZSdyZSByZXZpZXdpbmcKCSQoJ0hUTUwnKVswXS5hZGRFdmVudExpc3RlbmVyKCdxdWl6LXBhZ2UnLCBmdW5jdGlvbigpIHsKCQkvLyBBZGQgdGhlIHN0YW5kYXJkIHN0eWxpbmcgdG8gdGhlIGRpc2FibGVkIGJ1dHRvbgoJCWFkZENTUygpOwoKCQkvLyBEbyBzdHVmZiB3aGVuIHdlIHByZXNzIGVudGVyIG9yIGJhY2tzcGFjZQoJCSQoJyNzdHVkeS1hbnN3ZXItaW5wdXQnKS5vbigna2V5ZG93bicsIGZ1bmN0aW9uKGV2ZW50KSB7CgkJCXZhciBlbGVtID0gJCgnI3N0dWR5LWFuc3dlci1pbnB1dCcpOwoJCQkvLyBJbml0aWF0ZSBkZWxhdGUgd2hlbiB3ZSBwcmVzcyBlbnRlciwgZ2V0IHRoZSBhbnN3ZXIgd3JvbmcsIGFuZCBubyBkZWxheSBpcyBhbHJlYWR5IGFjdGl2ZQoJCQl2YXIgYmtnID0gZWxlbVswXS5zdHlsZS5iYWNrZ3JvdW5kOwoJCQlpZiAoYmtnICE9ICIiKSB7CgkJCQl2YXIgYmtnX2xzdCA9IGJrZy5zbGljZSg1LCBia2cubGVuZ3RoLTEpLnNwbGl0KCcsICcpOwoJCQkJaWYgKGV2ZW50LndoaWNoID09IDEzICYmIE51bWJlcihia2dfbHN0WzBdKSA+IE51bWJlcihia2dfbHN0WzFdKSArIE51bWJlcihia2dfbHN0WzJdKSAmJiAhJCgnI3N1Ym1pdC1zdHVkeS1hbnN3ZXItZGlzYWJsZWQnKS5sZW5ndGgpIHsKCQkJCQllbmFibGVEZWxheSgpOwoJCQkJCXNldFRpbWVvdXQoZGlzYWJsZURlbGF5LCBkZWxheSoxMDAwKTsKCQkJCX0KCQkJfQoJCX0pOwoJCSQoJ2JvZHknKS5vbigna2V5ZG93bicsIGZ1bmN0aW9uKGV2ZW50KSB7CgkJCS8vIENhbmNlbCBkZWxheSBpZiB3ZSBwcmVzcyBiYWNrc3BhY2UgYWZ0ZXIgZ2V0dGluZyBhbiBhbnN3ZXIgd3JvbmcKCQkJaWYgKGV2ZW50LndoaWNoID09IDggJiYgJCgnI3N1Ym1pdC1zdHVkeS1hbnN3ZXItZGlzYWJsZWQnKS5sZW5ndGgpIGRpc2FibGVEZWxheSgpOwoJCX0pOwoJfSk7CgoJLy8gTWFrZXMgdXNlciB1bmFibGUgdG8gY29udGludWUgdG8gdGhlIG5leHQgaXRlbQoJZnVuY3Rpb24gZW5hYmxlRGVsYXkoKSB7CgkJJCgnI3N0dWR5LWFuc3dlci1pbnB1dCcpWzBdLmJsdXIoKTsKCQkkKCcjc3VibWl0LXN0dWR5LWFuc3dlcicpLmF0dHIoJ2lkJywgJ3N1Ym1pdC1zdHVkeS1hbnN3ZXItZGlzYWJsZWQnKTsKCX0KCgkvLyBNYWtlcyB1c2VyIGFibGUgdG8gY29udGludWUgdG8gdGhlIG5leHQgaXRlbSBhZ2FpbgoJZnVuY3Rpb24gZGlzYWJsZURlbGF5KCkgewoJCSQoJyNzdWJtaXQtc3R1ZHktYW5zd2VyLWRpc2FibGVkJykuYXR0cignaWQnLCAnc3VibWl0LXN0dWR5LWFuc3dlcicpOwoJfQoKCS8vIEFkZHMgdGhlIG5lZWRlZCBDU1MKCWZ1bmN0aW9uIGFkZENTUygpIHsKCQkkKCdoZWFkJykuYXBwZW5kKCc8c3R5bGU+I3N1Ym1pdC1zdHVkeS1hbnN3ZXItZGlzYWJsZWQgeycgKwoJCQkJCQkgJ3dpZHRoOiAxNSU7JyArCgkJCQkJCSAncmlnaHQ6IDA7JyArCgkJCQkJCSAndGV4dC1hbGlnbjogY2VudGVyOycgKwoJCQkJCQkgJ3Bvc2l0aW9uOiBhYnNvbHV0ZTsnICsKCQkJCQkJICdmb250LXdlaWdodDogNDAwOycgKwoJCQkJCQkgJ2ZvbnQtc2l6ZTogMjBweDsnICsKCQkJCQkJICd6LWluZGV4OiAxMDA7JyArCgkJCQkJCSAnYm9yZGVyLXJhZGl1czogMDsnICsKCQkJCQkJICdjb2xvcjogd2hpdGU7JyArCgkJCQkJCSAnYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7JyArCgkJCQkJCSAnfScgKwoJCQkJCQkgJ0BtZWRpYSAobWF4LXdpZHRoOiA0ODBweCkgI3N1Ym1pdC1zdHVkeS1hbnN3ZXItZGlzYWJsZWQge2ZvbnQtc2l6ZTogMTJweCAhaW1wb3J0YW50O308L3N0eWxlPicpCgl9Cn0pKCk7Cg==",
            "storage": {
                "data": {},
                "ts": 1607436649639
            },
            "uuid": "0550b6ba-fa53-4ccf-823b-54b3cacc7116"
        },
        {
            "enabled": true,
            "file_url": "https://greasyfork.org/scripts/370019-bunpro-auto-show-info/code/Bunpro:%20Auto-show%20Info.user.js",
            "name": "Bunpro: Auto-show Info",
            "options": {
                "check_for_updates": true,
                "comment": null,
                "compat_foreach": false,
                "compat_metadata": false,
                "compat_powerful_this": null,
                "compat_prototypes": false,
                "compat_wrappedjsobject": false,
                "compatopts_for_requires": true,
                "noframes": null,
                "override": {
                    "merge_connects": true,
                    "merge_excludes": true,
                    "merge_includes": true,
                    "merge_matches": true,
                    "orig_connects": [],
                    "orig_excludes": [
                        "*community.bunpro.jp*"
                    ],
                    "orig_includes": [
                        "*bunpro.jp/study*"
                    ],
                    "orig_matches": [],
                    "orig_noframes": null,
                    "orig_run_at": "document-idle",
                    "use_blockers": [],
                    "use_connects": [],
                    "use_excludes": [],
                    "use_includes": [],
                    "use_matches": []
                },
                "run_at": null,
                "tab_types": null
            },
            "position": 13,
            "requires": [
                {
                    "meta": {
                        "mimetype": "text/javascript",
                        "name": "Wait%20For%20Selector.js",
                        "ts": 1649272239684,
                        "url": "https://greasyfork.org/scripts/432418-wait-for-selector/code/Wait%20For%20Selector.js?version=990207"
                    },
                    "source": "Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICBXYWl0IEZvciBTZWxlY3RvcgovLyBAbmFtZXNwYWNlICAgIGh0dHA6Ly90YW1wZXJtb25rZXkubmV0LwovLyBAZGVzY3JpcHRpb24gIFdhaXRzIGZvciBlbGVtZW50cwovLyBAYXV0aG9yICAgICAgIEt1bWlyZWkKLy8gQGluY2x1ZGUgICAgICAqY29tbXVuaXR5LndhbmlrYW5pLmNvbSoKLy8gQGdyYW50ICAgICAgICBub25lCi8vID09L1VzZXJTY3JpcHQ9PQoKOyhmdW5jdGlvbiAod2ZzKSB7CiAgICBsZXQgdmVyc2lvbiA9ICcxLjAuMScKCiAgICAvLyBDcmVhdGUgbmV3IG9ic2VydmVyIG9uIGJvZHkgdG8gbW9uaXRvciBhbGwgRE9NIGNoYW5nZXMKICAgIGxldCBvYnNlcnZlciA9IG5ldyBNdXRhdGlvbk9ic2VydmVyKG11dGF0aW9uSGFuZGxlcikKICAgIG9ic2VydmVyLm9ic2VydmUoZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ2h0bWwnKVswXSwgeyBjaGlsZExpc3Q6IHRydWUsIHN1YnRyZWU6IHRydWUgfSkKCiAgICAvLyBJbnRlcmZhY2UgZm9yIGludGVyYWN0aW5nIHdpdGggdGhlIGxpYnJhcnkKICAgIGxldCBpbnRlcmZhY2UgPSB7CiAgICAgICAgdmVyc2lvbiwKICAgICAgICBvYnNlcnZlcjogb2JzZXJ2ZXIsCiAgICAgICAgd2FpdDogd2FpdEZvclNlbGVjdG9yLAogICAgICAgIHVud2FpdDogdW53YWl0SUQsCiAgICAgICAgd2FpdHM6IHt9LAogICAgICAgIHdhaXRzQnlJRDoge30sCiAgICAgICAgbmV4dElEOiAwLAogICAgfQoKICAgIC8vIFN0YXJ0CiAgICBpbnN0YWxsSW50ZXJmYWNlKCkKCiAgICAvLyBDcmVhdGVzIGEgbmV3IGVudHJ5IHRvIHNlYXJjaCBmb3Igd2hlbmV2ZXIgYSBuZXcgZWxlbWVudCBpcyBhZGRlZCB0byB0aGUgRE9NCiAgICBmdW5jdGlvbiB3YWl0Rm9yU2VsZWN0b3Ioc2VsZWN0b3IsIGNhbGxiYWNrKSB7CiAgICAgICAgaWYgKCFpbnRlcmZhY2Uud2FpdHNbc2VsZWN0b3JdKSBpbnRlcmZhY2Uud2FpdHNbc2VsZWN0b3JdID0ge30KICAgICAgICBpbnRlcmZhY2Uud2FpdHNbc2VsZWN0b3JdW2ludGVyZmFjZS5uZXh0SURdID0gY2FsbGJhY2sKICAgICAgICBpbnRlcmZhY2Uud2FpdHNCeUlEW2ludGVyZmFjZS5uZXh0SURdID0gc2VsZWN0b3IKICAgICAgICBzZWFyY2goc2VsZWN0b3IsIHRydWUpCiAgICAgICAgcmV0dXJuIGludGVyZmFjZS5uZXh0SUQrKwogICAgfQoKICAgIC8vIERlbGV0ZXMgYSBwcmV2aW91c2x5IHJlZ2lzdGVyZWQgc2VsZWN0b3IKICAgIGZ1bmN0aW9uIHVud2FpdElEKElEKSB7CiAgICAgICAgZGVsZXRlIGludGVyZmFjZS53YWl0c1tpbnRlcmZhY2Uud2FpdHNCeUlEW0lEXV1bSURdCiAgICAgICAgZGVsZXRlIGludGVyZmFjZS53YWl0c0J5SURbSURdCiAgICB9CgogICAgLy8gTWFrZXMgc3VyZSB0aGF0IHRoZSBwdWJsaWMgaW50ZXJmYWNlIGlzIHRoZSBuZXdlc3QgdmVyc2lvbiBhbmQgdGhlIHNhbWUgYXMgdGhlIGxvY2FsIG9uZQogICAgZnVuY3Rpb24gaW5zdGFsbEludGVyZmFjZSgpIHsKICAgICAgICBpZiAoIXdmcykgd2luZG93LndmcyA9IGludGVyZmFjZQogICAgICAgIGVsc2UgaWYgKHdmcy52ZXJzaW9uIDwgaW50ZXJmYWNlLnZlcnNpb24pIHsKICAgICAgICAgICAgd2ZzLnZlcnNpb24gPSBpbnRlcmZhY2UudmVyc2lvbgogICAgICAgICAgICB3ZnMub2JzZXJ2ZXIuZGlzY29ubmVjdCgpCiAgICAgICAgICAgIHdmcy5vYnNlcnZlciA9IGludGVyZmFjZS5vYnNlcnZlcgogICAgICAgICAgICB3ZnMud2FpdCA9IGludGVyZmFjZS53YWl0CiAgICAgICAgICAgIHdmcy51bndhaXQgPSBpbnRlcmZhY2UudW53YWl0CiAgICAgICAgfQogICAgICAgIGludGVyZmFjZSA9IHdmcyB8fCBpbnRlcmZhY2UKICAgIH0KCiAgICAvLyBXYWl0cyB1bnRpbCB0aGVyZSBoYXMgYmVlbiBtb3JlIHRoYW4gMzAwIG1zIGJldHdlZW4gbXV0YXRpb25zIGFuZCB0aGVuIGNoZWNrcyBmb3IgbmV3IGVsZW1lbnRzCiAgICBsZXQgbGFzdE11dGF0aW9uRGF0ZSA9IDAgLy8gRXBvY2ggb2YgbGFzdCBtdXRhdGlvbiBldmVudAogICAgbGV0IHRpbWVvdXRJRCA9IDAKICAgIGZ1bmN0aW9uIG11dGF0aW9uSGFuZGxlcihtdXRhdGlvbnMpIHsKICAgICAgICBsZXQgZHVyYXRpb24gPSBEYXRlLm5vdygpIC0gbGFzdE11dGF0aW9uRGF0ZQogICAgICAgIGxhc3RNdXRhdGlvbkRhdGUgPSBEYXRlLm5vdygpCiAgICAgICAgaWYgKGR1cmF0aW9uIDwgMzAwKSB7CiAgICAgICAgICAgIGNsZWFyVGltZW91dCh0aW1lb3V0SUQpCiAgICAgICAgICAgIHRpbWVvdXRJRCA9IHNldFRpbWVvdXQoKCkgPT4gewogICAgICAgICAgICAgICAgZm9yIChsZXQgc2VsZWN0b3IgaW4gaW50ZXJmYWNlLndhaXRzKSBzZWFyY2goc2VsZWN0b3IpCiAgICAgICAgICAgIH0sIDMwMCkKICAgICAgICB9CiAgICB9CgogICAgLy8gU2VhcmNoZXMgZm9yIHRoZSBzZWxlY3RvciBhbmQgY2FsbHMgdGhlIGNhbGxiYWNrIG9uIHRoZSBmb3VuZCBlbGVtZW50cwogICAgZnVuY3Rpb24gc2VhcmNoKHNlbGVjdG9yLCBhbGwgPSBmYWxzZSkgewogICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoc2VsZWN0b3IpLmZvckVhY2goKGUsIGkpID0+IHsKICAgICAgICAgICAgbGV0IGNhbGxiYWNrcyA9IE9iamVjdC52YWx1ZXMoaW50ZXJmYWNlLndhaXRzW3NlbGVjdG9yXSkKICAgICAgICAgICAgaWYgKGFsbCB8fCAhZS5XRlNGb3VuZCB8fCBlLldGU0ZvdW5kID09IGxhc3RNdXRhdGlvbkRhdGUpIHsKICAgICAgICAgICAgICAgIGZvciAobGV0IGNhbGxiYWNrIG9mIGNhbGxiYWNrcykgY2FsbGJhY2soZSkKICAgICAgICAgICAgICAgIGUuV0ZTRm91bmQgPSBsYXN0TXV0YXRpb25EYXRlCiAgICAgICAgICAgIH0KICAgICAgICB9KQogICAgfQp9KSh3aW5kb3cud2ZzKQo="
                },
                {
                    "meta": {
                        "mimetype": "text/javascript",
                        "name": "Bunpro:%20Helpful%20Events.js",
                        "ts": 1649272239682,
                        "url": "https://greasyfork.org/scripts/370623-bunpro-helpful-events/code/Bunpro:%20Helpful%20Events.js?version=990211"
                    },
                    "source": "Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICBCdW5wcm86IEhlbHBmdWwgRXZlbnRzCi8vIEBuYW1lc3BhY2UgICAgaHR0cDovL3RhbXBlcm1vbmtleS5uZXQvCi8vIEB2ZXJzaW9uICAgICAgMS4wLjIKLy8gQGF1dGhvciAgICAgICBLdW1pcmVpCi8vIEByZXF1aXJlICAgICAgaHR0cHM6Ly9ncmVhc3lmb3JrLm9yZy9zY3JpcHRzLzQzMjQxOC13YWl0LWZvci1zZWxlY3Rvci9jb2RlL1dhaXQlMjBGb3IlMjBTZWxlY3Rvci5qcz92ZXJzaW9uPTk5MDIwNwovLyBAaW5jbHVkZSAgICAgICpidW5wcm8uanAqCi8vIEBleGNsdWRlICAgICAgKmNvbW11bml0eS5idW5wcm8uanAqCi8vID09L1VzZXJTY3JpcHQ9PQoKOyhmdW5jdGlvbiAod2ZzKSB7CiAgICAvLyBBZGQgYSBjdXN0b20gZXZlbnQgZm9yIHdoZW4gQlAgY3JlYXRlcyBhIG5ldyBib2R5CiAgICB2YXIgbmV3Qm9keSA9IG5ldyBFdmVudCgnbmV3LWJvZHknKQogICAgd2ZzLndhaXQoJ2JvZHkgPiBoZWFkZXInLCBmdW5jdGlvbiAoZSkgewogICAgICAgIGZpcmVFdmVudChuZXdCb2R5KQogICAgfSkKCiAgICAvLyBBZGQgYSBjdXN0b20gZXZlbnQgZm9yIHdoZW4geW91IGdldCBhIG5ldyBpdGVtIGluIHJldmlld3MKICAgIHZhciBuZXdSZXZpZXdJdGVtID0gbmV3IEV2ZW50KCduZXctcmV2aWV3LWl0ZW0nKQogICAgd2ZzLndhaXQoJy5sZXZlbF9sZXNzb25faW5mbyBhJywgZnVuY3Rpb24gKGUpIHsKICAgICAgICBmaXJlRXZlbnQobmV3UmV2aWV3SXRlbSkKICAgIH0pCgogICAgLy8gQWRkIGEgY3VzdG9tIGV2ZW50IHdoZW4geW91IGdvIHRvIHN0dWR5IG9yIGNyYW0gcGFnZQogICAgdmFyIHF1aXpQYWdlID0gbmV3IEV2ZW50KCdxdWl6LXBhZ2UnKQogICAgd2ZzLndhaXQoJyNzaG93LWdyYW1tYXInLCBmdW5jdGlvbiAoZSkgewogICAgICAgIGZpcmVFdmVudChxdWl6UGFnZSkKICAgIH0pCgogICAgLy8gQWRkIGEgY3VzdG9tIGV2ZW50IHdoZW4geW91IGdvIHRvIHN0dWR5IHBhZ2UKICAgIHZhciBzdHVkeVBhZ2UgPSBuZXcgRXZlbnQoJ3N0dWR5LXBhZ2UnKQogICAgd2ZzLndhaXQoJyNzdHVkeS1wYWdlICNzaG93LWdyYW1tYXInLCBmdW5jdGlvbiAoZSkgewogICAgICAgIGZpcmVFdmVudChzdHVkeVBhZ2UpCiAgICB9KQoKICAgIC8vIEFkZCBhIGN1c3RvbSBldmVudCB3aGVuIHlvdSBnbyB0byBjcmFtIHBhZ2UKICAgIHZhciBjcmFtUGFnZSA9IG5ldyBFdmVudCgnY3JhbS1wYWdlJykKICAgIHdmcy53YWl0KCcjY3JhbS1wYWdlICNzaG93LWdyYW1tYXInLCBmdW5jdGlvbiAoZSkgewogICAgICAgIGZpcmVFdmVudChjcmFtUGFnZSkKICAgIH0pCgogICAgLy8gRmlyZXMgdGhlIGdpdmVuIGV2ZW50IG9uIHRoZSBIVE1MIGVsZW1lbnQKICAgIGZ1bmN0aW9uIGZpcmVFdmVudChldmVudCkgewogICAgICAgIHZhciByZXRyeUludGVydmFsID0gc2V0SW50ZXJ2YWwoZnVuY3Rpb24gKCkgewogICAgICAgICAgICBpZiAoZG9jdW1lbnQucmVhZHlTdGF0ZSA9PSAnY29tcGxldGUnKSB7CiAgICAgICAgICAgICAgICAkKCdIVE1MJylbMF0uZGlzcGF0Y2hFdmVudChldmVudCkKICAgICAgICAgICAgICAgIGNsZWFySW50ZXJ2YWwocmV0cnlJbnRlcnZhbCkKICAgICAgICAgICAgfQogICAgICAgIH0sIDEwMCkKICAgIH0KfSkod2luZG93LndmcykK"
                }
            ],
            "source": "Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICBCdW5wcm86IEF1dG8tc2hvdyBJbmZvCi8vIEBuYW1lc3BhY2UgICAgaHR0cDovL3RhbXBlcm1vbmtleS5uZXQvCi8vIEB2ZXJzaW9uICAgICAgMC4yLjEwCi8vIEBkZXNjcmlwdGlvbiAgQXV0b21hdGljYWxseSBleHBhbmRzIHRoZSBmdWxsIGdyYW1tYXIgaW5mbyB3aGVuIHlvdSBnZXQgYSByZXZpZXcgd3JvbmcuCi8vIEBhdXRob3IgICAgICAgS3VtaXJlaQovLyBAaW5jbHVkZSAgICAgICpidW5wcm8uanAvc3R1ZHkqCi8vIEBleGNsdWRlICAgICAgKmNvbW11bml0eS5idW5wcm8uanAqCi8vIEByZXF1aXJlICAgICAgaHR0cHM6Ly9ncmVhc3lmb3JrLm9yZy9zY3JpcHRzLzQzMjQxOC13YWl0LWZvci1zZWxlY3Rvci9jb2RlL1dhaXQlMjBGb3IlMjBTZWxlY3Rvci5qcz92ZXJzaW9uPTk5MDIwNwovLyBAcmVxdWlyZSAgICAgIGh0dHBzOi8vZ3JlYXN5Zm9yay5vcmcvc2NyaXB0cy8zNzA2MjMtYnVucHJvLWhlbHBmdWwtZXZlbnRzL2NvZGUvQnVucHJvOiUyMEhlbHBmdWwlMjBFdmVudHMuanM/dmVyc2lvbj05OTAyMTEKLy8gQGdyYW50ICAgICAgICBub25lCi8vID09L1VzZXJTY3JpcHQ9PQoKOyhmdW5jdGlvbiAoKSB7CiAgICAvL3dhaXQgdW50aWwgd2UncmUgcmV2aWV3aW5nCiAgICAkKCdIVE1MJylbMF0uYWRkRXZlbnRMaXN0ZW5lcigncXVpei1wYWdlJywgZnVuY3Rpb24gKCkgewogICAgICAgIC8vZG8gc3R1ZmYgd2hlbiB3ZSBwcmVzcyBlbnRlciBhbmQgZ2V0IHRoZSBhbnN3ZXIgd3JvbmcKICAgICAgICAkKCcjc3R1ZHktYW5zd2VyLWlucHV0Jykub24oJ2tleWRvd24nLCBmdW5jdGlvbiAoZXZlbnQpIHsKICAgICAgICAgICAgaWYgKGV2ZW50LndoaWNoID09IDEzKSB7CiAgICAgICAgICAgICAgICBvcGVuSWZXcm9uZygpCiAgICAgICAgICAgIH0KICAgICAgICB9KQogICAgICAgIC8vZG8gc3R1ZmYgd2hlbiB3ZSBjbGljayBzdWJtaXQgYW5kIGdldCB0aGUgYW5zd2VyIHdyb25nCiAgICAgICAgJCgnI3N1Ym1pdC1zdHVkeS1hbnN3ZXInKS5vbignY2xpY2snLCBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIG9wZW5JZldyb25nKCkKICAgICAgICB9KQogICAgfSkKCiAgICAvL29wZW5zIHRoZSBpbmZvIGlmIHlvdSBnZXQgdGhlIGl0ZW0gd3JvbmcKICAgIGZ1bmN0aW9uIG9wZW5JZldyb25nKCkgewogICAgICAgIGlmICgkKCcub29wcy1idXR0b24nKVswXS5zdHlsZS5kaXNwbGF5ID09ICdibG9jaycgfHwgJCgnI2xlYXJuLW5ldy1ncmFtbWFyLXBhZ2UnKS5sZW5ndGgpIHsKICAgICAgICAgICAgJCgnLnNob3ctZ3JhbW1hci10ZXh0JykuY2xpY2soKQogICAgICAgIH0KICAgIH0KfSkoKQo=",
            "storage": {
                "data": {},
                "ts": 1607436649642
            },
            "uuid": "ea2cd70b-7fb9-4481-9ec5-2e5761f5ad46"
        },
        {
            "enabled": true,
            "file_url": "https://raw.githubusercontent.com/Mottie/Github-userscripts/master/github-code-folding.user.js",
            "name": "GitHub Code Folding",
            "options": {
                "check_for_updates": true,
                "comment": null,
                "compat_foreach": false,
                "compat_metadata": false,
                "compat_powerful_this": null,
                "compat_prototypes": false,
                "compat_wrappedjsobject": false,
                "compatopts_for_requires": true,
                "noframes": null,
                "override": {
                    "merge_connects": true,
                    "merge_excludes": true,
                    "merge_includes": true,
                    "merge_matches": true,
                    "orig_connects": [],
                    "orig_excludes": [],
                    "orig_includes": [
                        "https://github.com/*",
                        "https://gist.github.com/*"
                    ],
                    "orig_matches": [],
                    "orig_noframes": null,
                    "orig_run_at": "document-idle",
                    "use_blockers": [],
                    "use_connects": [],
                    "use_excludes": [],
                    "use_includes": [],
                    "use_matches": []
                },
                "run_at": null,
                "tab_types": null
            },
            "position": 14,
            "requires": [
                {
                    "meta": {
                        "mimetype": "text/javascript",
                        "name": "gm4-polyfill.js",
                        "ts": 1649167236645,
                        "url": "https://greasemonkey.github.io/gm4-polyfill/gm4-polyfill.js?updated=20180103"
                    },
                    "source": "LyoKVGhpcyBoZWxwZXIgc2NyaXB0IGJyaWRnZXMgY29tcGF0aWJpbGl0eSBiZXR3ZWVuIHRoZSBHcmVhc2Vtb25rZXkgNCBBUElzIGFuZApleGlzdGluZy9sZWdhY3kgQVBJcy4gIFNheSBmb3IgZXhhbXBsZSB5b3VyIHVzZXIgc2NyaXB0IGluY2x1ZGVzCgogICAgLy8gQGdyYW50IEdNX2dldFZhbHVlCgpBbmQgeW91J2QgbGlrZSB0byBiZSBjb21wYXRpYmxlIHdpdGggYm90aCBHcmVhc2Vtb25rZXkgMyBhbmQgR3JlYXNlbW9ua2V5IDQKKGFuZCBmb3IgdGhhdCBtYXR0ZXIgYWxsIHZlcnNpb25zIG9mIFZpb2xlbnRtb25rZXksIFRhbXBlcm1vbmtleSwgYW5kIGFueSBvdGhlcgp1c2VyIHNjcmlwdCBlbmdpbmUpLiAgQWRkOgoKICAgIC8vIEBncmFudCBHTS5nZXRWYWx1ZQogICAgLy8gQHJlcXVpcmUgaHR0cHM6Ly9ncmVhc2Vtb25rZXkuZ2l0aHViLmlvL2dtNC1wb2x5ZmlsbC9nbTQtcG9seWZpbGwuanMKCkFuZCBzd2l0Y2ggdG8gdGhlIG5ldyAoR00tZG90KSBBUElzLCB3aGljaCByZXR1cm4gcHJvbWlzZXMuICBJZiB5b3VyIHNjcmlwdAppcyBydW5uaW5nIGluIGFuIGVuZ2luZSB0aGF0IGRvZXMgbm90IHByb3ZpZGUgdGhlIG5ldyBhc3luY2hyb25vdXMgQVBJcywgdGhpcwpoZWxwZXIgd2lsbCBhZGQgdGhlbSwgYmFzZWQgb24gdGhlIG9sZCBBUElzLgoKSWYgeW91IHVzZSBgYXdhaXRgIGF0IHRoZSB0b3AgbGV2ZWwsIHlvdSdsbCBuZWVkIHRvIHdyYXAgeW91ciBzY3JpcHQgaW4gYW4KYGFzeW5jYCBmdW5jdGlvbiB0byBiZSBjb21wYXRpYmxlIHdpdGggYW55IHVzZXIgc2NyaXB0IGVuZ2luZSBiZXNpZGVzCkdyZWFzZW1vbmtleSA0LgoKICAgIChhc3luYyAoKSA9PiB7CiAgICBsZXQgeCA9IGF3YWl0IEdNLmdldFZhbHVlKCd4Jyk7CiAgICB9KSgpOwoqLwoKaWYgKHR5cGVvZiBHTSA9PSAndW5kZWZpbmVkJykgewogIHRoaXMuR00gPSB7fTsKfQoKCmlmICh0eXBlb2YgR01fYWRkU3R5bGUgPT0gJ3VuZGVmaW5lZCcpIHsKICB0aGlzLkdNX2FkZFN0eWxlID0gKGFDc3MpID0+IHsKICAgICd1c2Ugc3RyaWN0JzsKICAgIGxldCBoZWFkID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ2hlYWQnKVswXTsKICAgIGlmIChoZWFkKSB7CiAgICAgIGxldCBzdHlsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3N0eWxlJyk7CiAgICAgIHN0eWxlLnNldEF0dHJpYnV0ZSgndHlwZScsICd0ZXh0L2NzcycpOwogICAgICBzdHlsZS50ZXh0Q29udGVudCA9IGFDc3M7CiAgICAgIGhlYWQuYXBwZW5kQ2hpbGQoc3R5bGUpOwogICAgICByZXR1cm4gc3R5bGU7CiAgICB9CiAgICByZXR1cm4gbnVsbDsKICB9Owp9CgoKaWYgKHR5cGVvZiBHTV9yZWdpc3Rlck1lbnVDb21tYW5kID09ICd1bmRlZmluZWQnKSB7CiAgdGhpcy5HTV9yZWdpc3Rlck1lbnVDb21tYW5kID0gKGNhcHRpb24sIGNvbW1hbmRGdW5jLCBhY2Nlc3NLZXkpID0+IHsKICAgIGlmICghZG9jdW1lbnQuYm9keSkgewogICAgICBpZiAoZG9jdW1lbnQucmVhZHlTdGF0ZSA9PT0gJ2xvYWRpbmcnCiAgICAgICAgJiYgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50ICYmIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5sb2NhbE5hbWUgPT09ICdodG1sJykgewogICAgICAgIG5ldyBNdXRhdGlvbk9ic2VydmVyKChtdXRhdGlvbnMsIG9ic2VydmVyKSA9PiB7CiAgICAgICAgICBpZiAoZG9jdW1lbnQuYm9keSkgewogICAgICAgICAgICBvYnNlcnZlci5kaXNjb25uZWN0KCk7CiAgICAgICAgICAgIEdNX3JlZ2lzdGVyTWVudUNvbW1hbmQoY2FwdGlvbiwgY29tbWFuZEZ1bmMsIGFjY2Vzc0tleSk7CiAgICAgICAgICB9CiAgICAgICAgfSkub2JzZXJ2ZShkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQsIHtjaGlsZExpc3Q6IHRydWV9KTsKICAgICAgfSBlbHNlIHsKICAgICAgICBjb25zb2xlLmVycm9yKCdHTV9yZWdpc3Rlck1lbnVDb21tYW5kIGdvdCBubyBib2R5LicpOwogICAgICB9CiAgICAgIHJldHVybjsKICAgIH0KICAgIGxldCBjb250ZXh0TWVudSA9IGRvY3VtZW50LmJvZHkuZ2V0QXR0cmlidXRlKCdjb250ZXh0bWVudScpOwogICAgbGV0IG1lbnUgPSAoY29udGV4dE1lbnUgPyBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdtZW51IycgKyBjb250ZXh0TWVudSkgOiBudWxsKTsKICAgIGlmICghbWVudSkgewogICAgICBtZW51ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbWVudScpOwogICAgICBtZW51LnNldEF0dHJpYnV0ZSgnaWQnLCAnZ20tcmVnaXN0ZXJlZC1tZW51Jyk7CiAgICAgIG1lbnUuc2V0QXR0cmlidXRlKCd0eXBlJywgJ2NvbnRleHQnKTsKICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChtZW51KTsKICAgICAgZG9jdW1lbnQuYm9keS5zZXRBdHRyaWJ1dGUoJ2NvbnRleHRtZW51JywgJ2dtLXJlZ2lzdGVyZWQtbWVudScpOwogICAgfQogICAgbGV0IG1lbnVJdGVtID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbWVudWl0ZW0nKTsKICAgIG1lbnVJdGVtLnRleHRDb250ZW50ID0gY2FwdGlvbjsKICAgIG1lbnVJdGVtLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgY29tbWFuZEZ1bmMsIHRydWUpOwogICAgbWVudS5hcHBlbmRDaGlsZChtZW51SXRlbSk7CiAgfTsKfQoKCmlmICh0eXBlb2YgR01fZ2V0UmVzb3VyY2VUZXh0ID09ICd1bmRlZmluZWQnKSB7CiAgdGhpcy5HTV9nZXRSZXNvdXJjZVRleHQgPSAoYVJlcykgPT4gewogICAgJ3VzZSBzdHJpY3QnOwogICAgcmV0dXJuIEdNLmdldFJlc291cmNlVXJsKGFSZXMpCiAgICAgIC50aGVuKHVybCA9PiBmZXRjaCh1cmwpKQogICAgICAudGhlbihyZXNwID0+IHJlc3AudGV4dCgpKQogICAgICAuY2F0Y2goZnVuY3Rpb24oZXJyb3IpIHsKICAgICAgICBHTS5sb2coJ1JlcXVlc3QgZmFpbGVkJywgZXJyb3IpOwogICAgICAgIHJldHVybiBudWxsOwogICAgICB9KTsKICB9Owp9CgoKT2JqZWN0LmVudHJpZXMoewogICdsb2cnOiBjb25zb2xlLmxvZy5iaW5kKGNvbnNvbGUpLCAgLy8gUGFsZSBNb29uIGNvbXBhdGliaWxpdHkuICBTZWUgIzEzLgogICdpbmZvJzogR01faW5mbywKfSkuZm9yRWFjaCgoW25ld0tleSwgb2xkXSkgPT4gewogIGlmIChvbGQgJiYgKHR5cGVvZiBHTVtuZXdLZXldID09ICd1bmRlZmluZWQnKSkgewogICAgR01bbmV3S2V5XSA9IG9sZDsKICB9Cn0pOwoKCk9iamVjdC5lbnRyaWVzKHsKICAnR01fYWRkU3R5bGUnOiAnYWRkU3R5bGUnLAogICdHTV9kZWxldGVWYWx1ZSc6ICdkZWxldGVWYWx1ZScsCiAgJ0dNX2dldFJlc291cmNlVVJMJzogJ2dldFJlc291cmNlVXJsJywKICAnR01fZ2V0VmFsdWUnOiAnZ2V0VmFsdWUnLAogICdHTV9saXN0VmFsdWVzJzogJ2xpc3RWYWx1ZXMnLAogICdHTV9ub3RpZmljYXRpb24nOiAnbm90aWZpY2F0aW9uJywKICAnR01fb3BlbkluVGFiJzogJ29wZW5JblRhYicsCiAgJ0dNX3JlZ2lzdGVyTWVudUNvbW1hbmQnOiAncmVnaXN0ZXJNZW51Q29tbWFuZCcsCiAgJ0dNX3NldENsaXBib2FyZCc6ICdzZXRDbGlwYm9hcmQnLAogICdHTV9zZXRWYWx1ZSc6ICdzZXRWYWx1ZScsCiAgJ0dNX3htbGh0dHBSZXF1ZXN0JzogJ3htbEh0dHBSZXF1ZXN0JywKICAnR01fZ2V0UmVzb3VyY2VUZXh0JzogJ2dldFJlc291cmNlVGV4dCcsCn0pLmZvckVhY2goKFtvbGRLZXksIG5ld0tleV0pID0+IHsKICBsZXQgb2xkID0gdGhpc1tvbGRLZXldOwogIGlmIChvbGQgJiYgKHR5cGVvZiBHTVtuZXdLZXldID09ICd1bmRlZmluZWQnKSkgewogICAgR01bbmV3S2V5XSA9IGZ1bmN0aW9uKC4uLmFyZ3MpIHsKICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHsKICAgICAgICB0cnkgewogICAgICAgICAgcmVzb2x2ZShvbGQuYXBwbHkodGhpcywgYXJncykpOwogICAgICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgICAgIHJlamVjdChlKTsKICAgICAgICB9CiAgICAgIH0pOwogICAgfTsKICB9Cn0pOwo="
                },
                {
                    "meta": {
                        "mimetype": "text/javascript",
                        "name": "mutations.js",
                        "ts": 1649167236560,
                        "url": "https://greasyfork.org/scripts/28721-mutations/code/mutations.js?version=952601"
                    },
                    "source": "LyogR2l0SHViIG11dGF0aW9ucyBvYnNlcnZlciBsaWJyYXJ5IHNjcmlwdCB2MC40LjQKICogRGV0ZWN0IGNoYW5nZXMgdG8gdmFyaW91cyBlbGVtZW50cyBhbmQgdHJpZ2dlciBhbiBldmVudAogKiBUaGlzIHNjcmlwdCBpcyBtZWFudCB0byBiZSB1c2VkIGFzIGEgbGlicmFyeSBmb3IgR2l0SHViLWJhc2VkIHVzZXJzY3JpcHRzCiAqIENvcHlyaWdodCDCqSAyMDIxIFJvYiBHYXJyaXNvbgogKiBMaWNlbnNlOiBNSVQKICovCigoKSA9PiB7CgkidXNlIHN0cmljdCI7CgoJLy8gcHJlZml4IGZvciBldmVudCAmIGRvY3VtZW50IGJvZHkgY2xhc3MgbmFtZSwgZS5nLiAiZ2htbzpjb250YWluZXIiCgljb25zdCBwcmVmaXggPSAiZ2htbyIsCgkJZGlzYWJsZUF0dHIgPSBgZGF0YS0ke3ByZWZpeH0tZGlzYWJsZWAsCgkJZGVib3VuY2VJbnRlcnZhbCA9IDIwMCwKCQl0YXJnZXRzID0gewoJCQkvLyBwamF4IGNvbnRhaW5lciAoY292ZXJzIGdlbmVyYWwsIHJlcG8gJiBnaXN0cykKCQkJLy8gLm5ld3MgPSBuZXdzZmVlZCBsYXlvdXQKCQkJLy8gLnJlcG9zaXRvcnktY29udGVudCA9IGZpbGUgY29kZSAoY29kZSBmb2xkaW5nKQoJCQkiW2RhdGEtcGpheC1jb250YWluZXJdLCAubmV3cywgLnJlcG9zaXRvcnktY29udGVudCI6IHsKCQkJCWNvdW50OiAwLAoJCQkJbmFtZTogImNvbnRhaW5lciIKCQkJfSwKCQkJLy8gY29tbWVudCBwcmV2aWV3IGFjdGl2ZQoJCQkiLmpzLXByZXZpZXctYm9keSI6IHsKCQkJCWNvdW50OiAwLAoJCQkJbmFtZTogInByZXZpZXciCgkJCX0sCgkJCS8vIC5qcy1kaXNjdXNzaW9uID0gd3JhcHBlciBmb3IgcHJvZ3Jlc3NpdmVseSBsb2FkZWQgY29tbWVudHM7CgkJCS8vICIjIGl0ZW1zIG5vdCBzaG93biIgZXhhbXBsZTogaHR0cHM6Ly9naXRodWIuY29tL2lzYWFjcy9naXRodWIvaXNzdWVzLzE4CgkJCS8vIC5kaXNjdXNzaW9uLWl0ZW0gPSBpc3N1ZSBzdGF0dXMgY2hhbmdlZCAoZ2l0aHViLWlzc3VlLXNob3ctc3RhdHVzKQoJCQkvLyAjcHJvZ3Jlc3NpdmUtdGltZWxpbmUtaXRlbS1jb250YWluZXIgPSBsb2FkIGhpZGRlbiBpdGVtcyAob2xkPykKCQkJLy8gI2pzLXByb2dyZXNzaXZlLXRpbWVsaW5lLWl0ZW0tY29udGFpbmVyID0gbG9hZCBoaWRkZW4gaXRlbXMKCQkJIi5qcy1kaXNjdXNzaW9uLCAuZGlzY3Vzc2lvbi1pdGVtLCAudG9vbGJhci1pdGVtLCAjcHJvZ3Jlc3NpdmUtdGltZWxpbmUtaXRlbS1jb250YWluZXIsICNqcy1wcm9ncmVzc2l2ZS10aW1lbGluZS1pdGVtLWNvbnRhaW5lciI6IHsKCQkJCWNvdW50OiAwLAoJCQkJbmFtZTogImNvbW1lbnRzIgoJCQl9LAoJCQkvLyBwcm9ncmVzc2l2ZWx5IGxvYWRlZCBjb250ZW50IChkaWZmIGZpbGVzKQoJCQkiLmpzLWRpZmYtcHJvZ3Jlc3NpdmUtY29udGFpbmVyLCAuZGF0YS5ibG9iLXdyYXBwZXIsIC5qcy1kaWZmLWxvYWQtY29udGFpbmVyLCAuZGlmZi10YWJsZSB0Ym9keSI6IHsKCQkJCWNvdW50OiAwLAoJCQkJbmFtZTogImRpZmYiCgkJCX0sCgkJCS8vIGlzc3Vlcy9wciBzaWRlYmFyICYgdGltZWxpbmUgc2VjdGlvbnM6IGUuZy4gZm9ybSBhY3Rpb25zLCBjb21taXQKCQkJLy8gcmVmZXJlbmNlcywgZGVwbG95bWVudCBzdGF0ZSAmIFBSIGNoZWNrcyBjb250YWluZXIKCQkJIi5qcy11cGRhdGFibGUtY29udGVudCwgLmpzLXVwZGF0YWJsZS1jb250ZW50LXByZXNlcnZlLXNjcm9sbC1wb3NpdGlvbiI6IHsKCQkJCWNvdW50OiAwLAoJCQkJbmFtZTogInVwZGF0YWJsZSIKCQkJfSwKCQkJLy8gdXNlciBwcm9maWxlIG1lbnUgKGxvYWRzIG9uIGhvdmVyKQoJCQkiZGV0YWlscy1tZW51IjogewoJCQkJY291bnQ6IDAsCgkJCQluYW1lOiAibWVudSIKCQkJfQoJCX0sCgkJbGlzdCA9IE9iamVjdC5rZXlzKHRhcmdldHMpOwoKCWZ1bmN0aW9uIGZpcmVFdmVudHMoKSB7CgkJbGlzdC5mb3JFYWNoKHNlbGVjdG9yID0+IHsKCQkJaWYgKHRhcmdldHNbc2VsZWN0b3JdLmNvdW50ID4gMCkgewoJCQkJLy8gZXZlbnQgPT4gImdobW86Y29udGFpbmVyIiwgImdobW86Y29tbWVudHMiCgkJCQljb25zdCBldmVudCA9IG5ldyBFdmVudChwcmVmaXggKyAiOiIgKyB0YXJnZXRzW3NlbGVjdG9yXS5uYW1lKTsKCQkJCWRvY3VtZW50LmRpc3BhdGNoRXZlbnQoZXZlbnQpOwoJCQl9CgkJCXRhcmdldHNbc2VsZWN0b3JdLmNvdW50ID0gMDsKCQl9KTsKCX0KCglmdW5jdGlvbiBpbml0KCkgewoJCS8vIHByZXZlbnQgZXJyb3Igd2hlbiBsaWJyYXJ5IGlzIGxvYWRlZCBhdCBkb2N1bWVudC1zdGFydCAmIG5vIGJvZHkgZXhpc3RzCgkJY29uc3QgY29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcigiYm9keSIpOwoJCWxldCB0aW1lcjsKCQkvLyBwcmV2ZW50IHNjcmlwdCBmcm9tIGluc3RhbGxpbmcgbW9yZSB0aGFuIG9uY2UKCQlpZiAoY29udGFpbmVyICYmICFjb250YWluZXIuY2xhc3NMaXN0LmNvbnRhaW5zKHByZWZpeCArICItZW5hYmxlZCIpKSB7CgkJCWNvbnRhaW5lci5jbGFzc0xpc3QuYWRkKHByZWZpeCArICItZW5hYmxlZCIpOwoJCQkvLyBib3VuZCB0byBkb2N1bWVudC5ib2R5Li4uIHRoaXMgbWF5IGJlIGJhZCBmb3IgcGVyZm9ybWFuY2UKCQkJLy8gaHR0cDovL3N0YWNrb3ZlcmZsb3cuY29tL2EvMzkzMzIzNDAvMTQ1MzQ2CgkJCW5ldyBNdXRhdGlvbk9ic2VydmVyKG11dGF0aW9ucyA9PiB7CgkJCQljbGVhclRpbWVvdXQodGltZXIpOwoJCQkJLyogZG9jdW1lbnQuYm9keSBhdHRyaWJ1dGUgdXNlZCB0byBkaXNhYmxlIHVwZGF0ZXM7IGl0ICpzaG91bGQgbm90KgoJCQkJICogYmUgdXNlZCByZWd1bGFybHkgYXMgbXVsdGlwbGUgc2NyaXB0cyBtYXkgZW5hYmxlIG9yIGRpc2FibGUgdGhlCgkJCQkgKiBvYnNlcnZlcnMgYXQgaW5hcHByb3ByaWF0ZSB0aW1lcy4gSXQgaXMgYmVzdCB0aGF0IGVhY2ggc2NyaXB0IGhhbmRsZXMKCQkJCSAqIHRoZSBtdXRhdGlvbiBldmVudHMgdHJpZ2dlcmVkIGJ5IHRoaXMgbGlicmFyeSBvbiBpdHMgb3duCgkJCQkgKi8KCQkJCWlmIChjb250YWluZXIuZ2V0QXR0cmlidXRlKGRpc2FibGVBdHRyKSkgewoJCQkJCXJldHVybjsKCQkJCX0KCQkJCWxldCBtaW5keCwgdGFyZ2V0LCBsaW5keCwKCQkJCQlsbGVuID0gbGlzdC5sZW5ndGgsCgkJCQkJbWxlbiA9IG11dGF0aW9ucy5sZW5ndGg7CgkJCQkvLyBhdm9pZGluZyB1c2Ugb2YgZm9yRWFjaCBsb29wcyBmb3IgcGVyZm9ybWFuY2UgcmVhc29ucwoJCQkJZm9yIChtaW5keCA9IDA7IG1pbmR4IDwgbWxlbjsgbWluZHgrKykgewoJCQkJCXRhcmdldCA9IG11dGF0aW9uc1ttaW5keF0udGFyZ2V0OwoJCQkJCWlmICh0YXJnZXQpIHsKCQkJCQkJZm9yIChsaW5keCA9IDA7IGxpbmR4IDwgbGxlbjsgbGluZHgrKykgewoJCQkJCQkJaWYgKHRhcmdldC5tYXRjaGVzKGxpc3RbbGluZHhdKSkgewoJCQkJCQkJCXRhcmdldHNbbGlzdFtsaW5keF1dLmNvdW50Kys7CgkJCQkJCQl9CgkJCQkJCX0KCQkJCQl9CgkJCQkJdGltZXIgPSBzZXRUaW1lb3V0KCgpID0+IHsKCQkJCQkJZmlyZUV2ZW50cygpOwoJCQkJCX0sIGRlYm91bmNlSW50ZXJ2YWwpOwoJCQkJfQoJCQl9KS5vYnNlcnZlKGNvbnRhaW5lciwgewoJCQkJY2hpbGRMaXN0OiB0cnVlLAoJCQkJc3VidHJlZTogdHJ1ZQoJCQl9KTsKCQl9Cgl9CgoJaWYgKGRvY3VtZW50LnJlYWR5U3RhdGUgPT09ICJsb2FkaW5nIikgewoJCWRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoIkRPTUNvbnRlbnRMb2FkZWQiLCAoKSA9PiBpbml0KTsKCX0gZWxzZSB7CgkJaW5pdCgpOwoJfQoKfSkoKTsK"
                },
                {
                    "meta": {
                        "mimetype": "text/javascript",
                        "name": "utilsjs.js",
                        "ts": 1649167236928,
                        "url": "https://greasyfork.org/scripts/398877-utils-js/code/utilsjs.js?version=952600"
                    },
                    "source": ""
                }
            ],
            "source": "",
            "storage": {
                "data": {},
                "ts": 1636664956605
            },
            "uuid": "03039f55-1392-4e34-89d8-7a324da08087"
        },
        {
            "enabled": true,
            "file_url": "https://raw.githubusercontent.com/Mottie/GitHub-userscripts/master/github-sort-reactions.user.js",
            "name": "GitHub Sort Reactions",
            "options": {
                "check_for_updates": true,
                "comment": null,
                "compat_foreach": false,
                "compat_metadata": false,
                "compat_powerful_this": null,
                "compat_prototypes": false,
                "compat_wrappedjsobject": false,
                "compatopts_for_requires": true,
                "noframes": null,
                "override": {
                    "merge_connects": true,
                    "merge_excludes": true,
                    "merge_includes": true,
                    "merge_matches": true,
                    "orig_connects": [],
                    "orig_excludes": [],
                    "orig_includes": [
                        "https://github.com/*"
                    ],
                    "orig_matches": [],
                    "orig_noframes": null,
                    "orig_run_at": "document-idle",
                    "use_blockers": [],
                    "use_connects": [],
                    "use_excludes": [],
                    "use_includes": [],
                    "use_matches": []
                },
                "run_at": null,
                "tab_types": null
            },
            "position": 15,
            "requires": [
                {
                    "meta": {
                        "mimetype": "text/javascript",
                        "name": "mutations.js",
                        "ts": 1649167236845,
                        "url": "https://greasyfork.org/scripts/28721-mutations/code/mutations.js?version=952601"
                    },
                    "source": "LyogR2l0SHViIG11dGF0aW9ucyBvYnNlcnZlciBsaWJyYXJ5IHNjcmlwdCB2MC40LjQKICogRGV0ZWN0IGNoYW5nZXMgdG8gdmFyaW91cyBlbGVtZW50cyBhbmQgdHJpZ2dlciBhbiBldmVudAogKiBUaGlzIHNjcmlwdCBpcyBtZWFudCB0byBiZSB1c2VkIGFzIGEgbGlicmFyeSBmb3IgR2l0SHViLWJhc2VkIHVzZXJzY3JpcHRzCiAqIENvcHlyaWdodCDCqSAyMDIxIFJvYiBHYXJyaXNvbgogKiBMaWNlbnNlOiBNSVQKICovCigoKSA9PiB7CgkidXNlIHN0cmljdCI7CgoJLy8gcHJlZml4IGZvciBldmVudCAmIGRvY3VtZW50IGJvZHkgY2xhc3MgbmFtZSwgZS5nLiAiZ2htbzpjb250YWluZXIiCgljb25zdCBwcmVmaXggPSAiZ2htbyIsCgkJZGlzYWJsZUF0dHIgPSBgZGF0YS0ke3ByZWZpeH0tZGlzYWJsZWAsCgkJZGVib3VuY2VJbnRlcnZhbCA9IDIwMCwKCQl0YXJnZXRzID0gewoJCQkvLyBwamF4IGNvbnRhaW5lciAoY292ZXJzIGdlbmVyYWwsIHJlcG8gJiBnaXN0cykKCQkJLy8gLm5ld3MgPSBuZXdzZmVlZCBsYXlvdXQKCQkJLy8gLnJlcG9zaXRvcnktY29udGVudCA9IGZpbGUgY29kZSAoY29kZSBmb2xkaW5nKQoJCQkiW2RhdGEtcGpheC1jb250YWluZXJdLCAubmV3cywgLnJlcG9zaXRvcnktY29udGVudCI6IHsKCQkJCWNvdW50OiAwLAoJCQkJbmFtZTogImNvbnRhaW5lciIKCQkJfSwKCQkJLy8gY29tbWVudCBwcmV2aWV3IGFjdGl2ZQoJCQkiLmpzLXByZXZpZXctYm9keSI6IHsKCQkJCWNvdW50OiAwLAoJCQkJbmFtZTogInByZXZpZXciCgkJCX0sCgkJCS8vIC5qcy1kaXNjdXNzaW9uID0gd3JhcHBlciBmb3IgcHJvZ3Jlc3NpdmVseSBsb2FkZWQgY29tbWVudHM7CgkJCS8vICIjIGl0ZW1zIG5vdCBzaG93biIgZXhhbXBsZTogaHR0cHM6Ly9naXRodWIuY29tL2lzYWFjcy9naXRodWIvaXNzdWVzLzE4CgkJCS8vIC5kaXNjdXNzaW9uLWl0ZW0gPSBpc3N1ZSBzdGF0dXMgY2hhbmdlZCAoZ2l0aHViLWlzc3VlLXNob3ctc3RhdHVzKQoJCQkvLyAjcHJvZ3Jlc3NpdmUtdGltZWxpbmUtaXRlbS1jb250YWluZXIgPSBsb2FkIGhpZGRlbiBpdGVtcyAob2xkPykKCQkJLy8gI2pzLXByb2dyZXNzaXZlLXRpbWVsaW5lLWl0ZW0tY29udGFpbmVyID0gbG9hZCBoaWRkZW4gaXRlbXMKCQkJIi5qcy1kaXNjdXNzaW9uLCAuZGlzY3Vzc2lvbi1pdGVtLCAudG9vbGJhci1pdGVtLCAjcHJvZ3Jlc3NpdmUtdGltZWxpbmUtaXRlbS1jb250YWluZXIsICNqcy1wcm9ncmVzc2l2ZS10aW1lbGluZS1pdGVtLWNvbnRhaW5lciI6IHsKCQkJCWNvdW50OiAwLAoJCQkJbmFtZTogImNvbW1lbnRzIgoJCQl9LAoJCQkvLyBwcm9ncmVzc2l2ZWx5IGxvYWRlZCBjb250ZW50IChkaWZmIGZpbGVzKQoJCQkiLmpzLWRpZmYtcHJvZ3Jlc3NpdmUtY29udGFpbmVyLCAuZGF0YS5ibG9iLXdyYXBwZXIsIC5qcy1kaWZmLWxvYWQtY29udGFpbmVyLCAuZGlmZi10YWJsZSB0Ym9keSI6IHsKCQkJCWNvdW50OiAwLAoJCQkJbmFtZTogImRpZmYiCgkJCX0sCgkJCS8vIGlzc3Vlcy9wciBzaWRlYmFyICYgdGltZWxpbmUgc2VjdGlvbnM6IGUuZy4gZm9ybSBhY3Rpb25zLCBjb21taXQKCQkJLy8gcmVmZXJlbmNlcywgZGVwbG95bWVudCBzdGF0ZSAmIFBSIGNoZWNrcyBjb250YWluZXIKCQkJIi5qcy11cGRhdGFibGUtY29udGVudCwgLmpzLXVwZGF0YWJsZS1jb250ZW50LXByZXNlcnZlLXNjcm9sbC1wb3NpdGlvbiI6IHsKCQkJCWNvdW50OiAwLAoJCQkJbmFtZTogInVwZGF0YWJsZSIKCQkJfSwKCQkJLy8gdXNlciBwcm9maWxlIG1lbnUgKGxvYWRzIG9uIGhvdmVyKQoJCQkiZGV0YWlscy1tZW51IjogewoJCQkJY291bnQ6IDAsCgkJCQluYW1lOiAibWVudSIKCQkJfQoJCX0sCgkJbGlzdCA9IE9iamVjdC5rZXlzKHRhcmdldHMpOwoKCWZ1bmN0aW9uIGZpcmVFdmVudHMoKSB7CgkJbGlzdC5mb3JFYWNoKHNlbGVjdG9yID0+IHsKCQkJaWYgKHRhcmdldHNbc2VsZWN0b3JdLmNvdW50ID4gMCkgewoJCQkJLy8gZXZlbnQgPT4gImdobW86Y29udGFpbmVyIiwgImdobW86Y29tbWVudHMiCgkJCQljb25zdCBldmVudCA9IG5ldyBFdmVudChwcmVmaXggKyAiOiIgKyB0YXJnZXRzW3NlbGVjdG9yXS5uYW1lKTsKCQkJCWRvY3VtZW50LmRpc3BhdGNoRXZlbnQoZXZlbnQpOwoJCQl9CgkJCXRhcmdldHNbc2VsZWN0b3JdLmNvdW50ID0gMDsKCQl9KTsKCX0KCglmdW5jdGlvbiBpbml0KCkgewoJCS8vIHByZXZlbnQgZXJyb3Igd2hlbiBsaWJyYXJ5IGlzIGxvYWRlZCBhdCBkb2N1bWVudC1zdGFydCAmIG5vIGJvZHkgZXhpc3RzCgkJY29uc3QgY29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcigiYm9keSIpOwoJCWxldCB0aW1lcjsKCQkvLyBwcmV2ZW50IHNjcmlwdCBmcm9tIGluc3RhbGxpbmcgbW9yZSB0aGFuIG9uY2UKCQlpZiAoY29udGFpbmVyICYmICFjb250YWluZXIuY2xhc3NMaXN0LmNvbnRhaW5zKHByZWZpeCArICItZW5hYmxlZCIpKSB7CgkJCWNvbnRhaW5lci5jbGFzc0xpc3QuYWRkKHByZWZpeCArICItZW5hYmxlZCIpOwoJCQkvLyBib3VuZCB0byBkb2N1bWVudC5ib2R5Li4uIHRoaXMgbWF5IGJlIGJhZCBmb3IgcGVyZm9ybWFuY2UKCQkJLy8gaHR0cDovL3N0YWNrb3ZlcmZsb3cuY29tL2EvMzkzMzIzNDAvMTQ1MzQ2CgkJCW5ldyBNdXRhdGlvbk9ic2VydmVyKG11dGF0aW9ucyA9PiB7CgkJCQljbGVhclRpbWVvdXQodGltZXIpOwoJCQkJLyogZG9jdW1lbnQuYm9keSBhdHRyaWJ1dGUgdXNlZCB0byBkaXNhYmxlIHVwZGF0ZXM7IGl0ICpzaG91bGQgbm90KgoJCQkJICogYmUgdXNlZCByZWd1bGFybHkgYXMgbXVsdGlwbGUgc2NyaXB0cyBtYXkgZW5hYmxlIG9yIGRpc2FibGUgdGhlCgkJCQkgKiBvYnNlcnZlcnMgYXQgaW5hcHByb3ByaWF0ZSB0aW1lcy4gSXQgaXMgYmVzdCB0aGF0IGVhY2ggc2NyaXB0IGhhbmRsZXMKCQkJCSAqIHRoZSBtdXRhdGlvbiBldmVudHMgdHJpZ2dlcmVkIGJ5IHRoaXMgbGlicmFyeSBvbiBpdHMgb3duCgkJCQkgKi8KCQkJCWlmIChjb250YWluZXIuZ2V0QXR0cmlidXRlKGRpc2FibGVBdHRyKSkgewoJCQkJCXJldHVybjsKCQkJCX0KCQkJCWxldCBtaW5keCwgdGFyZ2V0LCBsaW5keCwKCQkJCQlsbGVuID0gbGlzdC5sZW5ndGgsCgkJCQkJbWxlbiA9IG11dGF0aW9ucy5sZW5ndGg7CgkJCQkvLyBhdm9pZGluZyB1c2Ugb2YgZm9yRWFjaCBsb29wcyBmb3IgcGVyZm9ybWFuY2UgcmVhc29ucwoJCQkJZm9yIChtaW5keCA9IDA7IG1pbmR4IDwgbWxlbjsgbWluZHgrKykgewoJCQkJCXRhcmdldCA9IG11dGF0aW9uc1ttaW5keF0udGFyZ2V0OwoJCQkJCWlmICh0YXJnZXQpIHsKCQkJCQkJZm9yIChsaW5keCA9IDA7IGxpbmR4IDwgbGxlbjsgbGluZHgrKykgewoJCQkJCQkJaWYgKHRhcmdldC5tYXRjaGVzKGxpc3RbbGluZHhdKSkgewoJCQkJCQkJCXRhcmdldHNbbGlzdFtsaW5keF1dLmNvdW50Kys7CgkJCQkJCQl9CgkJCQkJCX0KCQkJCQl9CgkJCQkJdGltZXIgPSBzZXRUaW1lb3V0KCgpID0+IHsKCQkJCQkJZmlyZUV2ZW50cygpOwoJCQkJCX0sIGRlYm91bmNlSW50ZXJ2YWwpOwoJCQkJfQoJCQl9KS5vYnNlcnZlKGNvbnRhaW5lciwgewoJCQkJY2hpbGRMaXN0OiB0cnVlLAoJCQkJc3VidHJlZTogdHJ1ZQoJCQl9KTsKCQl9Cgl9CgoJaWYgKGRvY3VtZW50LnJlYWR5U3RhdGUgPT09ICJsb2FkaW5nIikgewoJCWRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoIkRPTUNvbnRlbnRMb2FkZWQiLCAoKSA9PiBpbml0KTsKCX0gZWxzZSB7CgkJaW5pdCgpOwoJfQoKfSkoKTsK"
                }
            ],
            "source": "",
            "storage": {
                "data": {},
                "ts": 1636665066915
            },
            "uuid": "31410fbe-5cc6-4a14-a3f3-339c85f4d804"
        },
        {
            "enabled": true,
            "file_url": "https://raw.githubusercontent.com/Mottie/GitHub-userscripts/master/github-update-fork.user.js",
            "name": "GitHub Update Fork",
            "options": {
                "check_for_updates": true,
                "comment": null,
                "compat_foreach": false,
                "compat_metadata": false,
                "compat_powerful_this": null,
                "compat_prototypes": false,
                "compat_wrappedjsobject": false,
                "compatopts_for_requires": true,
                "noframes": null,
                "override": {
                    "merge_connects": true,
                    "merge_excludes": true,
                    "merge_includes": true,
                    "merge_matches": true,
                    "orig_connects": [],
                    "orig_excludes": [],
                    "orig_includes": [
                        "https://github.com/*"
                    ],
                    "orig_matches": [],
                    "orig_noframes": null,
                    "orig_run_at": "document-idle",
                    "use_blockers": [],
                    "use_connects": [],
                    "use_excludes": [],
                    "use_includes": [],
                    "use_matches": []
                },
                "run_at": null,
                "tab_types": null
            },
            "position": 16,
            "source": "Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgIEdpdEh1YiBVcGRhdGUgRm9yawovLyBAdmVyc2lvbiAgICAgMC4yLjAKLy8gQGRlc2NyaXB0aW9uIEEgdXNlcnNjcmlwdCB0aGF0IGFkZHMgYSBsaW5rIHRvIHVwZGF0ZSB5b3VyIGZvcmsKLy8gQGxpY2Vuc2UgICAgIE1JVAovLyBAYXV0aG9yICAgICAgUm9iIEdhcnJpc29uCi8vIEBuYW1lc3BhY2UgICBodHRwczovL2dpdGh1Yi5jb20vTW90dGllCi8vIEBpbmNsdWRlICAgICBodHRwczovL2dpdGh1Yi5jb20vKgovLyBAcnVuLWF0ICAgICAgZG9jdW1lbnQtaWRsZQovLyBAZ3JhbnQgICAgICAgbm9uZQovLyBAaWNvbiAgICAgICAgaHR0cHM6Ly9naXRodWIuZ2l0aHViYXNzZXRzLmNvbS9waW5uZWQtb2N0b2NhdC5zdmcKLy8gQHVwZGF0ZVVSTCAgIGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9Nb3R0aWUvR2l0SHViLXVzZXJzY3JpcHRzL21hc3Rlci9naXRodWItdXBkYXRlLWZvcmsudXNlci5qcwovLyBAZG93bmxvYWRVUkwgaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01vdHRpZS9HaXRIdWItdXNlcnNjcmlwdHMvbWFzdGVyL2dpdGh1Yi11cGRhdGUtZm9yay51c2VyLmpzCi8vIEBzdXBwb3J0VVJMICBodHRwczovL2dpdGh1Yi5jb20vTW90dGllL0dpdEh1Yi11c2Vyc2NyaXB0cy9pc3N1ZXMKLy8gPT0vVXNlclNjcmlwdD09CigoKSA9PiB7CgkidXNlIHN0cmljdCI7CgoJZnVuY3Rpb24gZ2V0VXBzdHJlYW1CcmFuY2goY29tcGFyZUxpbmssIGluZm8pIHsKCQkvLyBMb29rIGZvciAiY29tbWl0IGJlaGluZCIgb3IgImNvbW1pdHMgYmVoaW5kIgoJCWlmIChjb21wYXJlTGluayAmJiBpbmZvICYmIC9jb21taXRzP1xzYmVoaW5kLy50ZXN0KGluZm8udGV4dENvbnRlbnQpKSB7CgkJCS8vIGZvcmtlZCBmcm9tIGxpbmsgdGV4dCAiOnVzZXIvOnJlcG8iCgkJCWNvbnN0IHJlZ2V4cCA9IC9iZWhpbmRccyooLis6Wy1cdy5dKykvOwoJCQkvLyBUaGUgbWF0Y2ggd2lsbCBpbmNsdWRlIHRoZSBzZW50ZW5jZSBwZXJpb2QgYmVjYXVzZSBicmFuY2ggbmFtZXMgbWF5CgkJCS8vIGluY2x1ZGUgYSB2ZXJzaW9uIG51bWJlciwgZS5nLiAidXNlcjpteS1icmFuY2gtdjEuMCIKCQkJY29uc3QgYnJhbmNoID0gKGluZm8udGV4dENvbnRlbnQubWF0Y2gocmVnZXhwKSB8fCBbXSlbMV07CgkJCXJldHVybiBicmFuY2gKCQkJCT8gYnJhbmNoLnN1YnN0cmluZygwLCBicmFuY2gubGVuZ3RoIC0gMSkKCQkJCTogbnVsbDsKCQl9CgkJcmV0dXJuIG51bGw7Cgl9CgoJZnVuY3Rpb24gZ2V0VXNlckJyYW5jaCgpIHsKCQkvLyBUaGUgYnJhbmNoIHNlbGVjdG9yIG1heSBjb250YWluIGEgdHJ1bmNhdGVkIGJyYW5jaCBuYW1lLCBzbyB1c2UgdGhlIHVybAoJCWNvbnN0IHBhdGggPSB3aW5kb3cubG9jYXRpb24ucGF0aG5hbWU7CgkJY29uc3QgaW5kZXggPSBwYXRoLmluZGV4T2YoIi90cmVlLyIpOwoJCXJldHVybiBpbmRleCA+IC0xCgkJCT8gcGF0aC5zdWJzdHJpbmcoaW5kZXggKyA2LCBwYXRoLmxlbmd0aCkKCQkJOiAibWFzdGVyIjsKCX0KCglmdW5jdGlvbiBhZGRMaW5rKGNvbXBhcmVMaW5rLCBpbmZvKSB7CgkJY29uc3QgYnJhbmNoID0gZ2V0VXBzdHJlYW1CcmFuY2goY29tcGFyZUxpbmssIGluZm8pOwoJCWlmIChicmFuY2gpIHsKCQkJY29uc3QgdXNlckJyYW5jaCA9IGdldFVzZXJCcmFuY2goKTsKCQkJY29uc3QgcHJMaW5rID0gY29tcGFyZUxpbmsucHJldmlvdXNFbGVtZW50U2libGluZzsKCQkJY29uc3QgbGluayA9IHByTGluay5jbG9uZU5vZGUoKTsKCQkJLy8gaHR0cHM6Ly9naXRodWIuY29tLzxGT1JLPi88UkVQTz4vY29tcGFyZS88QlJBTkNIPi4uLjxTT1VSQ0U+OjxCUkFOQ0g+CgkJCWxpbmsuaHJlZiA9IGAke2NvbXBhcmVMaW5rLmhyZWZ9LyR7dXNlckJyYW5jaH0uLi4ke2JyYW5jaH1gOwoJCQlsaW5rLmNsYXNzTGlzdC5hZGQoImdodWYtdXBkYXRlLWxpbmsiKTsKCQkJbGluay5hcHBlbmRDaGlsZCgkKCJzdmciLCBwckxpbmspLmNsb25lTm9kZSh0cnVlKSk7CgkJCWxpbmsuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoIiBVcGRhdGUgZm9yayIpKTsKCQkJcHJMaW5rLmluc2VydEFkamFjZW50RWxlbWVudCgiYmVmb3JlYmVnaW4iLCBsaW5rKTsKCQl9Cgl9CgoJZnVuY3Rpb24gaW5pdCgpIHsKCQljb25zdCBjb21wYXJlTGluayA9ICQoImFbaHJlZio9J3B1bGwvbmV3J10gKyBhW2hyZWYkPScvY29tcGFyZSddIik7CgkJY29uc3QgaW5mbyA9IGNvbXBhcmVMaW5rPy5jbG9zZXN0KCIuQm94Iik/LmZpcnN0RWxlbWVudENoaWxkOwoJCWlmIChjb21wYXJlTGluayAmJiBpbmZvKSB7CgkJCWFkZExpbmsoY29tcGFyZUxpbmssIGluZm8pOwoJCX0KCX0KCglmdW5jdGlvbiAkKHN0ciwgZWwgPSBkb2N1bWVudCkgewoJCXJldHVybiBlbC5xdWVyeVNlbGVjdG9yKHN0cik7Cgl9CgoJZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigicGpheDplbmQiLCBpbml0KTsKCWluaXQoKTsKCn0pKCk7Cg==",
            "storage": {
                "data": {},
                "ts": 1636665106109
            },
            "uuid": "20aad555-b97e-4d4a-bfe5-7853897de54d"
        },
        {
            "enabled": false,
            "file_url": "https://raw.githubusercontent.com/Mottie/Github-userscripts/master/github-title-notification.user.js",
            "name": "GitHub - Pin Repos to Sidebar",
            "options": {
                "check_for_updates": false,
                "comment": null,
                "compat_foreach": false,
                "compat_metadata": false,
                "compat_powerful_this": null,
                "compat_prototypes": false,
                "compat_wrappedjsobject": false,
                "compatopts_for_requires": true,
                "noframes": null,
                "override": {
                    "merge_connects": true,
                    "merge_excludes": true,
                    "merge_includes": true,
                    "merge_matches": true,
                    "orig_connects": [],
                    "orig_excludes": [],
                    "orig_includes": [],
                    "orig_matches": [
                        "http*://github.com/*dashboard",
                        "http*://github.com/"
                    ],
                    "orig_noframes": null,
                    "orig_run_at": "document-idle",
                    "use_blockers": [],
                    "use_connects": [],
                    "use_excludes": [],
                    "use_includes": [],
                    "use_matches": []
                },
                "run_at": null,
                "tab_types": null
            },
            "position": 17,
            "source": "",
            "storage": {
                "data": {
                    "pinnedRepos": "s[\"/mistsys/mist_go_utils\",\"/mistsys/mist-ap\",\"/corewa-rs/corewars\",\"/mistsys/mist-agent-go\",\"/128technology/rules_128tech\",\"/mistsys/demoapi\",\"/ian-h-chamberlain/dotfiles\",\"/Meziu/ctru-rs\",\"/Meziu/rust-linker-fix-3ds\",\"/Meziu/rust-horizon\",\"/Meziu/cargo-3ds\",\"/corewa-rs/vscode-redcode\",\"/Juniper-SSN/ssr\",\"/ian-h-chamberlain/docker-rust-devkitarm\"]"
                },
                "ts": 1650393027096
            },
            "uuid": "c8c37d2c-a4d8-4ddd-accd-51cc5f2ea6a4"
        },
        {
            "enabled": true,
            "name": "Openstack Firefox Console Fixer",
            "options": {
                "check_for_updates": false,
                "comment": null,
                "compat_foreach": false,
                "compat_metadata": false,
                "compat_powerful_this": null,
                "compat_prototypes": false,
                "compat_wrappedjsobject": false,
                "compatopts_for_requires": true,
                "noframes": null,
                "override": {
                    "merge_connects": true,
                    "merge_excludes": true,
                    "merge_includes": true,
                    "merge_matches": true,
                    "orig_connects": [],
                    "orig_excludes": [],
                    "orig_includes": [],
                    "orig_matches": [
                        "https://spaceport.lab.128technology.com:6082/spice_auto.html*"
                    ],
                    "orig_noframes": null,
                    "orig_run_at": "document-idle",
                    "use_blockers": [],
                    "use_connects": [],
                    "use_excludes": [],
                    "use_includes": [],
                    "use_matches": []
                },
                "run_at": null,
                "tab_types": null,
                "unwrap": null
            },
            "position": 18,
            "source": "Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICBPcGVuc3RhY2sgRmlyZWZveCBDb25zb2xlIEZpeGVyCi8vIEBuYW1lc3BhY2UgICAgaHR0cHM6Ly9naXRodWIuY29tL2lhbi1oLWNoYW1iZXJsYWluCi8vIEB2ZXJzaW9uICAgICAgMC4xCi8vIEBkZXNjcmlwdGlvbiAgRml4IGEgaG9ycmlibGUgb3BlbnN0YWNrIGJ1ZyBieSBpbmplY3Rpbmcgc29tZSBrZXljb2RlcyBmb3IgRmlyZWZveAovLyBAYXV0aG9yICAgICAgIElhbiBDaGFtYmVybGFpbiAoR2l0SHViIEBpYW4taC1jaGFtYmVybGFpbikKLy8gQG1hdGNoICAgICAgICBodHRwczovL3NwYWNlcG9ydC5sYWIuMTI4dGVjaG5vbG9neS5jb206NjA4Mi9zcGljZV9hdXRvLmh0bWwqCi8vIEBpY29uICAgICAgICAgaHR0cHM6Ly9zcGFjZXBvcnQubGFiLjEyOHRlY2hub2xvZ3kuY29tL3N0YXRpYy9kYXNoYm9hcmQvaW1nL2Zhdmljb24uaWNvCi8vIEBncmFudCAgICAgICAgbm9uZQovLyA9PS9Vc2VyU2NyaXB0PT0KCihmdW5jdGlvbigpIHsKICAgICd1c2Ugc3RyaWN0JzsKCiAgICBpZiAodHlwZW9mIGZpcmVmb3hfc2Nhbm1hcCAhPT0gJ3VuZGVmaW5lZCcpIHsKICAgICAgICAvLyBGaXJlZm94IHNlZW1zIHRvIHNlbmQgMjI0IHdoZXRoZXIgdGhlIGxlZnQgb3IgcmlnaHQg4oyYIGtleSBpcyBwcmVzc2VkCiAgICAgICAgLy8gVmFsdWUgZnJvbSBodHRwczovL2dpdGxhYi5mcmVlZGVza3RvcC5vcmcvc3BpY2Uvc3BpY2UtaHRtbDUvLS9ibG9iL3NwaWNlLWh0bWw1LTAuMS43L3V0aWxzLmpzI0wyMTAKICAgICAgICBmaXJlZm94X3NjYW5tYXBbMjI0XSA9IDB4RTA1QjsgLy8gS0VZX0xNZXRhCgogICAgICAgIC8vIEVuYWJsZSBudW1sb2NrLCBmb3Igc29tZSByZWFzb24gdGhpcyBkb2Vzbid0IHdvcmsgYnkgZGVmYXVsdC4gTWF5YmUgYmVjYXVzZSBpdCBzZW5kcyBhIEtleV9DTEVBUiBpbnN0ZWFkPwogICAgICAgIGZpcmVmb3hfc2Nhbm1hcFsxMl0gPSBLRVlfTnVtTG9jazsKICAgIH0KfSkoKTs=",
            "storage": {
                "data": {},
                "ts": 1656605726968
            },
            "uuid": "ed158b6e-8995-48a5-8a2a-2e63f4546680"
        }
    ],
    "version": "1"
}
