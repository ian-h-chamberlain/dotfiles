{
    "[c]": {
        "editor.defaultFormatter": "xaver.clang-format"
    },
    "[cpp]": {
        "editor.formatOnSave": true,
        "editor.defaultFormatter": "xaver.clang-format",
        "editor.detectIndentation": false
    },
    "[diff]": {
        "editor.trimAutoWhitespace": false,
        "files.trimFinalNewlines": false,
        "files.trimTrailingWhitespace": false,
    },
    "[dockerfile]": {
        "editor.quickSuggestions": {
            "strings": true,
        },
        "editor.semanticHighlighting.enabled": true,
    },
    "[fish]": {
        "editor.formatOnSave": true
    },
    "[graphql]": {
        "editor.tabSize": 2,
    },
    "[groovy]": {
        "editor.formatOnSave": true
    },
    "[glsl]": {
        "editor.defaultFormatter": "xaver.clang-format",
        "editor.formatOnSave": true,
        "editor.colorDecorators": true
    },
    "[javascript]": {
        "editor.formatOnSave": false,
        "editor.tabSize": 2,
        "editor.defaultFormatter": "vscode.typescript-language-features",
    },
    "[json]": {
        "editor.formatOnSave": false,
        "editor.wordWrap": "on",
        "editor.tabSize": 2,
    },
    "[jsonc]": {
        "editor.formatOnSave": false,
        "editor.wordWrap": "on",
        "editor.tabSize": 2,
    },
    "[markdown]": {
        "editor.wordWrap": "on",
        "editor.quickSuggestions": false,
        "editor.tabSize": 2,
        "editor.snippetSuggestions": "none",
        "editor.tabCompletion": "off"
    },
    "[org]": {
        "editor.autoIndent": "advanced",
        "editor.tabSize": 1,
    },
    "[python]": {
        "editor.codeActionsOnSave": {
            "source.organizeImports": true,
            "source.fixAll": true,
        },
        "editor.formatOnSave": true,
        "editor.parameterHints.enabled": false,
        "editor.semanticHighlighting.enabled": true
    },
    "[rust]": {
        "editor.formatOnSave": true,
    },
    "[robotframework]": {
        "editor.semanticHighlighting.enabled": true
    },
    "[redcode]": {
        // Commonly used for aligning instructions
        "editor.tabSize": 4,
        "editor.wordWrap": "on"
    },
    "[starlark]": {
        "editor.formatOnSave": true,
    },
    "[typescript]": {
        "editor.formatOnSave": false,
        "editor.codeActionsOnSave": {
            "source.fixAll.tslint": true,
        },
        "editor.tabSize": 2,
        "editor.defaultFormatter": "vscode.typescript-language-features",
    },
    "[xml]": {
        "editor.defaultFormatter": "DotJoshJohnson.xml",
    },

    // TODO: reorganize the remaining sections into extension-specific vs VSCode
    "arduino.defaultBaudRate": 9600,
    "arduino.logLevel": "info",
    "arduino.path": "/Users/ianchamberlain/Applications/Arduino.app",
    "arduino.enableUSBDetection": true,
    "arduino.skipHeaderProvider": false,

    "atlascode.bitbucket.enabled": true,
    "atlascode.bitbucket.explorer.nestFilesEnabled": false,
    "atlascode.bitbucket.explorer.notifications.pullRequestCreated": false,
    "atlascode.bitbucket.explorer.refreshInterval": 30,
    "atlascode.bitbucket.explorer.showReviewedPullRequests": false,
    "atlascode.bitbucket.explorer.relatedBitbucketIssues.enabled": false,
    "atlascode.bitbucket.explorer.defaultPullRequestFilter": "toReview",
    "atlascode.bitbucket.issues.refreshInterval": 30,
    "atlascode.bitbucket.pipelines.explorerEnabled": false,
    "atlascode.bitbucket.statusbar.enabled": false,
    "atlascode.helpExplorerEnabled": false,
    "atlascode.jira.hover.enabled": true,
    "atlascode.jira.explorer.refreshInterval": 60,
    "atlascode.jira.statusbar.enabled": false,
    "atlascode.jira.todoIssues.triggers": [
        "TODO",
        "BUG",
        "FIXME",
        "ISSUE",
        "HACK",
        "XXX",
    ],
    "atlascode.jira.todoIssues.enabled": true,
    "atlascode.outputLevel": "debug",

    "bazel.buildifierExecutable": "/usr/local/bin/buildifier",
    "bazel.buildifierFixOnFormat": false,
    "bazel.executable": "/usr/local/bin/bazelisk",
    "bazel.enableCodeLens": true,

    "breadcrumbs.enabled": true,

    "C_Cpp.autocomplete": "Disabled",
    "C_Cpp.formatting": "Disabled",
    "C_Cpp.enhancedColorization": "Disabled",
    "C_Cpp.intelliSenseEngine": "Disabled",
    "C_Cpp.intelliSenseEngineFallback": "Disabled",
    "C_Cpp.workspaceParsingPriority": "low",
    "C_Cpp.workspaceSymbols": "Just My Code",
    "C_Cpp.loggingLevel": "Information",

    "c-cpp-flylint.flawfinder.enable": false,
    "c-cpp-flylint.ignoreParseErrors": false,
    "c-cpp-flylint.lizard.enable": false,
    "c-cpp-flylint.run": "onSave",

    "clangd.arguments": [
        "--compile-commands-dir=${workspaceFolder}/build",
        "--header-insertion=never",
        "--log=verbose",
        "-j=2",
        "--pch-storage=disk",
        "--background-index"
    ],
    "clangd.checkUpdates": true,
    "clangd.path": "/Users/ichamberlain/Library/Application Support/Code/User/globalStorage/llvm-vs-code-extensions.vscode-clangd/install/12.0.0/clangd_12.0.0/bin/clangd",
    "clangd.onConfigChanged": "restart",

    "cmake.cmakePath": "/usr/local/bin/cmake",
    "cmake.configureOnOpen": false,
    "cmake.configureOnEdit": false,
    "cmake.skipConfigureIfCachePresent": true,

    "coverage-gutters.highlightdark": "rgba(73, 102, 22, 0.50)", // "#4b661680"
    "coverage-gutters.noHighlightDark": "rgba(143, 38, 72, 0.44)", // "#90274a70",
    "coverage-gutters.showLineCoverage": true,

    "cSpell.allowCompoundWords": true,
    "cSpell.enableFiletypes": [
        "c",
        "cmake",
        "dockerfile",
        "fish",
        "gitignore",
        "graphql",
        "groovy",
        "ini",
        "jinja",
        "json5",
        "lua",
        "makefile",
        "mib",
        "objective-c",
        "objective-cpp",
        "org",
        "perl",
        "perl6",
        "plist",
        "properties",
        "proto3",
        "robot",
        "rpm-spec",
        "ruby",
        "rust",
        "shellscript",
        "sls",
        "ssh_config",
        "starlark",
        "toml",
        "xml",
        "yang"
    ],
    "cSpell.ignorePaths": [
        "**/package-lock.json",
        "**/node_modules/**",
        "**/vscode-extension/**",
        "**/.git/objects/**",
        "**/.vscode/**",
        "*.code-workspace",
        "**/Cargo.lock",
        "**/Cargo.toml",
        "**/mkiso.sh"
    ],
    "cSpell.flagWords": [
        "successfull"
    ],
    "cSpell.userWords": [
        "Bazel",
        "CCache",
        "CMake",
        "CentOS",
        "DUT",
        "DUTs",
        "DistCC",
        "FQDN",
        "ISOs",
        "JUnit",
        "Jira",
        "KeePassXC",
        "LDAP",
        "LLVM",
        "NPM",
        "NixOS",
        "Nixpkgs",
        "NordVPN",
        "Popen",
        "Pytest",
        "RHEL",
        "RPM",
        "RPMs",
        "UEFI",
        "XQuartz",
        "argn",
        "asyncio",
        "bazelbuild",
        "bazelisk",
        "buildifier",
        "capsys",
        "coreutils",
        "corewa",
        "ctags",
        "ctypes",
        "dcrpm",
        "deps",
        "deque",
        "enum",
        "enum's",
        "eval",
        "executables",
        "fnmatch",
        "fstring",
        "globbing",
        "hacky",
        "hmac",
        "htop",
        "ianchamberlain",
        "ichamberlain",
        "initramfs",
        "inotify",
        "iostreams",
        "ipaddress",
        "isatty",
        "isort",
        "iter",
        "iterm",
        "itertools",
        "journald",
        "kwargs",
        "lerp",
        "lnav",
        "lxml",
        "macOS",
        "makecache",
        "mgmt",
        "mkdir",
        "monokai",
        "nargs",
        "ncurses",
        "noarch",
        "npmrc",
        "nvim",
        "onlyif",
        "ourobouros",
        "paramiko",
        "paren",
        "pass",
        "pcre",
        "pformat",
        "pgrep",
        "pkg",
        "pkgrepo",
        "pkgrepos",
        "pkgs",
        "plist",
        "popd",
        "praju",
        "pref",
        "prefs",
        "printf",
        "println",
        "prismo",
        "proto",
        "protobuf",
        "pushd",
        "pycache",
        "pyenv",
        "pyfakefs",
        "pylint",
        "pyproject",
        "pyright",
        "referencer",
        "reimplementation",
        "reinitializing",
        "repo",
        "repoquery",
        "repos",
        "resolv",
        "rsync",
        "ruamel",
        "rustfmt",
        "slite",
        "splitn",
        "spotify",
        "srcs",
        "sssd",
        "streq",
        "stringization",
        "stringize",
        "stringized",
        "struct",
        "syslog",
        "systemctl",
        "systemd",
        "timedatectl",
        "tmux",
        "trunc",
        "uncommented",
        "unconfigure",
        "ungrouped",
        "unstaged",
        "unsubscriptable",
        "untracked",
        "virtualenv",
        "vmlinuz",
        "xargs",
        "yadm"
    ],

    "debug.internalConsoleOptions": "openOnSessionStart",
    "debug.console.historySuggestions": false,

    "diffEditor.ignoreTrimWhitespace": false,

    "editor.accessibilitySupport": "off",
    "editor.find.cursorMoveOnType": true,
    "editor.fontFamily": "Input Mono, Monaco, 'Courier New', monospace",
    "editor.fontSize": 11,
    "editor.fontWeight": "100",
    "editor.minimap.showSlider": "always",
    "editor.multiCursorModifier": "alt",
    "editor.renderControlCharacters": true,
    "editor.renderWhitespace": "selection",
    "editor.rulers": [
        80,
    ],
    "editor.scrollBeyondLastLine": false,
    "editor.semanticHighlighting.enabled": true,
    "editor.semanticTokenColorCustomizations": {
        "[Monokai]": {
            "rules": {
                "variable:dockerfile": "#FD971F",
                "parameter:dockerfile": {
                    "fontStyle": "",
                    "foreground": "#F8F8F2",
                },

                "variable.readonly:python": "#AE81FF",
                "property.declaration:python": "#A6E22E",

                "variable.constant:rust": "#AE81FF",
                "selfKeyword:rust": "#FD971F",

                "keywordNameCall:robotframework": "#A6E22E",
            }
        }
    },
    "editor.showFoldingControls": "always",
    "editor.snippetSuggestions": "inline",
    "editor.wordSeparators": "/\\()\"':,.;<>~!@#$%^&*|+=[]{}`?-_",

    "explorer.autoReveal": false,
    "explorer.confirmDelete": false,

    "extensions.autoUpdate": true,
    "extensions.ignoreRecommendations": false,

    "files.associations": {
        "**/.cargo/config": "toml",
        "**/.ssh/*config*": "ssh_config",
        "**/bpython/config": "ini",
        "*.aliases": "shellscript",
        "*.bazel": "starlark",
        "*.bazelrc": "gitignore",
        "*.h": "c",
        "*.pb.h": "cpp",
        "*.j2": "jinja",
        "*.log-*": "log",
        "*.log.*": "log",
        "*.org": "org",
        "*.path": "ini",
        "*.plist": "xml",
        "*.repo": "ini",
        "*.rs": "rust",
        "*.service": "ini",
        "*.sls": "sls",
        "*.unity": "yaml",
        "*Brewfile": "ruby",
        "*dockerfile*": "dockerfile",
        "*gitconfig*": "ini",
        ".bazelignore": "gitignore",
        ".clang-format": "yaml",
        ".coveragerc": "ini",
        ".gitmodules": "properties",
        "BUILD": "starlark",
        "Cargo.lock": "toml",
        "gdbinit": "shellscript",
        "vimrc": "viml",
        "yarn.lock": "yarnlock",
        ".clangd": "yaml",
        ".yarnrc": "yarnlock",
        "*dialogrc": "python",
        "*.timer": "ini",
        "*.hpp*": "cpp",
        "*.cpp*": "cpp",
        "*.conf": "ini",
        "*.bttpreset": "json",
        "*.spec": "rpm-spec",
    },
    "files.exclude": {
        "**/.DS_Store": true,
        "**/.git": true,
        "**/.hg": true,
        "**/.svn": true,
        "**/CVS": true,
        "__pycache__": true,
    },
    "files.insertFinalNewline": true,
    "files.trimTrailingWhitespace": true,
    "files.watcherExclude": {
        "**/.bazel_out/**": true,
        "**/.git/objects/**": true,
        "**/.git/subtree-cache/**": true,
        "**/.hg/store/**": true,
        "**/.mypy_cache/**": true,
        "**/.cache/**": true,
        "**/node_modules/**": true,
        "**/*bazel_out/**": true,
        "**/bazel-*/**": true,
    },

    "git.autoRepositoryDetection": "openEditors",
    "git.detectSubmodules": true,
    "git.ignoreSubmodules": false,
    "git.enableSmartCommit": true,
    "git.openDiffOnClick": false,

    "githubIssues.useBranchForIssues": "prompt",
    "githubIssues.issueBranchTitle": "ian/issue${issueNumber}",
    "githubIssues.queries": [
        {
            "label": "My Issues",
            "query": "default"
        },
        {
            "label": "Created Issues",
            "query": "author:${user} state:open repo:${owner}/${repository} sort:created-desc"
        },
        {
            "label": "All Open Issues",
            "query": "state:open repo:${owner}/${repository} sort:created-desc"
        }
    ],
    "githubPullRequests.telemetry.enabled": false,
    "githubPullRequests.queries": [
        {
            "label": "Waiting For My Review",
            "query": "is:open review-requested:${user}"
        },
        {
            "label": "Assigned To Me",
            "query": "is:open assignee:${user}"
        },
        {
            "label": "Created By Me",
            "query": "is:open author:${user}"
        }
    ],
    "githubPullRequests.fileListLayout": "flat",

    "gitlens.advanced.fileHistoryFollowsRenames": false,
    "gitlens.advanced.messages": {
        "suppressCommitHasNoPreviousCommitWarning": false,
        "suppressCommitNotFoundWarning": false,
        "suppressFileNotUnderSourceControlWarning": false,
        "suppressGitVersionWarning": false,
        "suppressLineUncommittedWarning": false,
        "suppressNoRepositoryWarning": false,
    },
    "gitlens.blame.avatars": false,
    "gitlens.blame.highlight.locations": [
        "gutter",
        "line",
        "overview"
    ],
    "gitlens.codeLens.enabled": false,
    "gitlens.currentLine.enabled": true,
    "gitlens.hovers.currentLine.enabled": true,
    "gitlens.hovers.currentLine.over": "annotation",
    "gitlens.keymap": "alternate",
    "gitlens.menus": {
        "editor": {
            "blame": true,
            "clipboard": true,
            "compare": true,
            "details": true,
            "history": true,
            "remote": true,
        },
        "editorGroup": {
            "blame": true,
            "compare": true,
        },
        "editorTab": {
            "clipboard": true,
            "compare": true,
            "history": true,
            "remote": true,
        },
        "explorer": {
            "clipboard": true,
            "compare": true,
            "history": true,
            "remote": true,
        },
        "scmGroup": {
            "compare": true,
            "openClose": true,
            "stash": true,
            "stashInline": true,
        },
        "scmItem": {
            "clipboard": true,
            "compare": true,
            "history": true,
            "remote": true,
            "stash": true,
        }
    },
    "gitlens.mode.statusBar.enabled": false,
    "gitlens.remotes": [
        {
            "name": "128 Technology Bitbucket",
            "type": "BitbucketServer",
            "domain": "bitbucket.128technology.com",
            "protocol": "https",
        }
    ],
    "gitlens.statusBar.enabled": false,
    "gitlens.views.repositories.autoRefresh": false,

    "go.buildOnSave": "off",
    "go.formatTool": "goimports",
    "go.lintOnSave": "file",
    "go.toolsManagement.autoUpdate": true,
    "go.useLanguageServer": false,
    "go.vetOnSave": "off",

    "groovyLint.format.enable": true,
    "groovyLint.format.useDocumentIndentSize": true,

    "grunt.autoDetect": "off",

    "gulp.autoDetect": "off",

    "jake.autoDetect": "off",

    "jupyter.enabled": false,

    "lldb.adapterEnv": {
        "PYENV_VERSION": "system"
    },

    "macros": {
        "pullRequest.selectNextFile": [
            "list.focusDown",
            "list.select",
            "workbench.action.focusSideBar",
            "workbench.action.focusActiveEditorGroup",
        ],
        "pullRequest.selectPreviousFile": [
            "list.focusUp",
            "list.select",
            "workbench.action.focusSideBar",
            "workbench.action.focusActiveEditorGroup",
        ],
        "atlascode.bb.pullRequest.nextFile": [
            "workbench.action.closeActiveEditor",
            "atlascode.views.bb.pullrequestsTreeView.focus",
            "macros.pullRequest.selectNextFile",
        ],
        "atlascode.bb.pullRequest.previousFile": [
            "workbench.action.closeActiveEditor",
            "atlascode.views.bb.pullrequestsTreeView.focus",
            "macros.pullRequest.selectPreviousFile",
        ],
        "githubPullRequest.nextFile": [
            "workbench.action.closeActiveEditor",
            "pr:github.focus",
            "macros.pullRequest.selectNextFile",
        ],
        "githubPullRequest.previousFile": [
            "workbench.action.closeActiveEditor",
            "pr:github.focus",
            "macros.pullRequest.selectPreviousFile",
        ],
    },

    "nginx-conf-hint.syntax": "sublime",

    "notebook.cellToolbarLocation": {
        "default": "right",
        "jupyter-notebook": "left"
    },

    "org.todoKeywords": [
        "TODO",
        "PROG",
        "DONE",
    ],

    "python.analysis.autoImportCompletions": false,
    "python.analysis.typeCheckingMode": "basic",
    "python.analysis.useLibraryCodeForTypes": true,
    "python.experiments.optOutFrom": [
        "All"
    ],
    "python.defaultInterpreterPath": "python",
    "python.formatting.provider": "black",
    "python.formatting.blackArgs": ["--fast"],
    "python.languageServer": "Pylance",
    "python.linting.lintOnSave": true,
    "python.showStartPage": false,
    "python.terminal.activateEnvironment": false,
    "python.venvFolders": [],

    "remote.SSH.configFile": "~/.ssh/vscode_config",

    "rfLanguageServer.logLevel": "info",

    "robot.completions.keywords.format": "Title Case",
    "robot.completions.section_headers.form": "plural",

    "redhat.telemetry.enabled": false,

    "rpmspec.lint": true,
    "rpmspec.rpmlintPath": "/usr/local/bin/rpmlint",

    "rust-analyzer.assist.importMergeBehaviour": "last",
    "rust-analyzer.cargo.allFeatures": true,
    "rust-analyzer.cargo.loadOutDirsFromCheck": true,
    "rust-analyzer.cargo.noDefaultFeatures": false,
    "rust-analyzer.checkOnSave.allFeatures": true,
    "rust-analyzer.checkOnSave.enable": true,
    "rust-analyzer.checkOnSave.command": "clippy",
    "rust-analyzer.checkOnSave.allTargets": true,
    "rust-analyzer.checkOnSave.extraArgs": [
        "--",
        "--warn=clippy::pedantic",
    ],
    "rust-analyzer.debug.engine": "vadimcn.vscode-lldb",
    "rust-analyzer.debug.engineSettings": {
        "lldb": {
            "terminal": "console",
            "args": [
                "--nocapture",
                "--test-threads=1",
            ],
        }
    },
    "rust-analyzer.inlayHints.maxLength": 15,
    "rust-analyzer.inlayHints.parameterHints": true,
    "rust-analyzer.inlayHints.typeHints": true,
    "rust-analyzer.procMacro.enable": true,
    "rust-analyzer.runnableEnv": {
        // Makes debugging test output much more readable
        "RUST_TEST_THREADS": "1"
    },
    "rust-analyzer.updates.askBeforeDownload": true,
    "rust-analyzer.updates.channel": "stable",
    "rust-analyzer.runnables.cargoExtraArgs": [],

    "rust-client.engine": "rust-analyzer",

    "salt-lint.enable": true,
    "salt-lint.executablePath": "salt-lint",

    "search.exclude": {
        "**/node_modules": true,
        "**/bower_components": true,
        "**/*.code-search": true,
        "Cargo.lock": true,
        "compile_commands.json": true,
        "bazel-event-log.json": true,
    },
    "search.useIgnoreFiles": true,

    "shader-toy.reloadOnEditTextDelay": 2,
    "shader-toy.reloadOnEditText": true,

    "shellcheck.executablePath": "/usr/local/bin/shellcheck",
    "shellcheck.run": "onSave",
    "shellcheck.useWorkspaceRootAsCwd": true,
    "shellcheck.customArgs": ["--external-sources"],
    "shellcheck.enableQuickFix": true,
    "shellcheck.ignorePatterns": {
        "**/*.zsh": true,
        "**/*.fish": true,
        "**/BUILD": true,
    },

    "telemetry.enableCrashReporter": false,
    "telemetry.enableTelemetry": false,

    // NOTE: slow terminal on big sur was fixable via
    // codesign --remove-signature "~/Applications/Visual Studio Code.app/Contents/Frameworks/Code Helper (Renderer).app"
    "terminal.integrated.copyOnSelection": true,
    "terminal.integrated.enableBell": true,
    "terminal.integrated.fontFamily": "Input Mono, Monaco, 'Courier New', monospace",
    "terminal.integrated.fontSize": 11,
    "terminal.integrated.fontWeight": "100",
    "terminal.integrated.macOptionClickForcesSelection": false,
    "terminal.integrated.rendererType": "auto",
    "terminal.integrated.rightClickBehavior": "default",
    "terminal.integrated.scrollback": 10000,
    "terminal.integrated.experimentalUseTitleEvent": true,
    "terminal.integrated.gpuAcceleration": "auto",

    "todo-tree.tree.showScanModeButton": false,
    "todo-tree.filtering.includeHiddenFiles": true,
    "todo-tree.general.enableFileWatcher": false,
    "todo-tree.general.tags": [
        "FIXME",
        "HACK",
        "TODO",
        "XXX",
        "NOTE"
    ],
    "todo-tree.regex.regex": "((//|#|<!--|;|/\\*|^|\"\"\"|\"\\$comment\"\\s*:\\s*\")\\s*($TAGS)|^\\s*- \\[ \\])",
    "todo-tree.highlights.defaultHighlight": {
        "gutterIcon": true,
        "opacity": 50,
    },
    "todo-tree.highlights.customHighlight": {
        "BUG": {
            "icon": "bug",
        },
        "HACK": {
            "icon": "terminal",
            "foreground": "orangered",
        },
        "FIXME": {
            "icon": "alert",
            "foreground": "yellow"
        },
        "NOTE": {
            "icon": "info",
            "foreground": "cyan",
            "gutterIcon": true,
            "hideFromTree": true,
        }
    },
    "todo-tree.general.schemes": [
        "file",
        "untitled",
        "vscode-userdata"
    ],

    "typescript.check.npmIsInstalled": false,

    // Mouse selection seems to cause more problems than it's worth...
    "vscode-neovim.mouseSelectionStartVisualMode": false,
    "vscode-neovim.neovimExecutablePaths.darwin": "/usr/local/bin/nvim",
    "vscode-neovim.neovimInitVimPaths.darwin": "~/.vimrc",
    "vscode-neovim.neovimInitVimPaths.linux": "~/.vimrc",

    "window.restoreWindows": "folders",
    "window.title": "${folderName}${separator}${activeEditorMedium} ${dirty}",

    "workbench.editorAssociations": {
        "*.ipynb": "jupyter.notebook.ipynb"
    },
    "workbench.colorCustomizations": {
        "editor.selectionBackground": "#9d550f",
        "editorCursor.foreground": "#9d550f",
        "terminal.foreground": "#32F93B",
        "terminal.ansiGreen": "#00B11C",
    },
    "workbench.colorTheme": "Monokai",
    "workbench.editor.enablePreview": false,
    "workbench.editor.highlightModifiedTabs": true,
    "workbench.editor.untitled.labelFormat": "name",
    "workbench.editor.untitled.hint": "hidden",
    "workbench.fontAliasing": "auto",
    "workbench.settings.editor": "json",
    "workbench.startupEditor": "newUntitledFile",

    "xmlTools.enforcePrettySelfClosingTagOnFormat": true,
    "xmlTools.splitAttributesOnFormat": true,
    "xmlTools.splitXmlnsOnFormat": true,

    "yaml.schemas": {
        "file:///Users/ichamberlain/.vscode/extensions/atlassian.atlascode-2.9.1-custom/resources/schemas/pipelines-schema.json": "bitbucket-pipelines.yml"
    },
    "atlascode.jira.lastCreateSiteAndProject": {
        "siteId": "",
        "projectKey": "AS"
    },
}
