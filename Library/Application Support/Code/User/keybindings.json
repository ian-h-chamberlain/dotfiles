// Place your key bindings in this file to overwrite the defaults
[
    {
        "command": "cursorWordPartStartLeft",
        "key": "alt+left",
        "when": "textInputFocus"
    },
    {
        "command": "cursorWordPartRight",
        "key": "alt+right",
        "when": "textInputFocus"
    },
    {
        "command": "cursorWordPartStartLeftSelect",
        "key": "alt+shift+left",
        "when": "textInputFocus"
    },
    {
        "command": "cursorWordPartRightSelect",
        "key": "alt+shift+right",
        "when": "textInputFocus"
    },
    {
        "command": "deleteWordPartLeft",
        "key": "alt+backspace",
        "when": "textInputFocus"
    },
    {
        "command": "deleteWordPartRight",
        "key": "alt+delete",
        "when": "textInputFocus"
    },
    {
        "command": "workbench.action.nextEditorInGroup",
        "key": "ctrl+tab",
    },
    {
        "command": "-workbench.action.openNextRecentlyUsedEditorInGroup",
        "key": "ctrl+tab",
    },
    {
        "command": "-workbench.action.openPreviousRecentlyUsedEditorInGroup",
        "key": "ctrl+shift+tab",
    },
    {
        "command": "workbench.action.previousEditorInGroup",
        "key": "ctrl+shift+tab",
    },
    {
        "command": "-workbench.action.focusNextGroup",
        "key": "cmd+k cmd+right",
    },
    {
        "command": "-workbench.action.focusPreviousGroup",
        "key": "cmd+k cmd+left",
    },
    {
        "command": "-workbench.action.previousEditor",
        "key": "shift+cmd+[",
    },
    {
        "command": "-workbench.action.nextEditor",
        "key": "shift+cmd+]",
    },
    {
        "command": "editor.action.triggerSuggest",
        "key": "alt+space",
        "when": "editorHasCompletionItemProvider && editorTextFocus && !editorReadonly"
    },
    {
        "command": "-editor.action.triggerSuggest",
        "key": "ctrl+space",
        "when": "editorHasCompletionItemProvider && editorTextFocus && !editorReadonly"
    },
    {
        "command": "-editor.action.outdentLines",
        "key": "cmd+[",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "command": "editor.fold",
        "key": "cmd+[",
        "when": "editorTextFocus"
    },
    {
        "command": "-editor.fold",
        "key": "alt+cmd+[",
        "when": "editorTextFocus"
    },
    {
        "command": "-editor.action.indentLines",
        "key": "cmd+]",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "command": "editor.unfold",
        "key": "cmd+]",
        "when": "editorTextFocus"
    },
    {
        "command": "-editor.unfold",
        "key": "alt+cmd+]",
        "when": "editorTextFocus"
    },
    {
        "command": "workbench.action.splitEditor",
        "key": "cmd+k cmd+\\",
    },
    {
        "command": "workbench.action.splitEditor",
        "key": "cmd+k \\",
    },
    {
        "command": "-workbench.action.splitEditor",
        "key": "cmd+\\",
    },
    {
        "command": "workbench.action.moveEditorToNextGroup",
        "key": "cmd+\\",
        "when": "!terminalFocus",
    },
    {
        "command": "-workbench.action.closeOtherEditors",
        "key": "alt+cmd+t",
    },
    {
        "command": "workbench.action.tasks.test",
        "key": "alt+cmd+t",
    },
    {
        "command": "workbench.action.terminal.focusNext",
        "key": "ctrl+tab",
        "when": "terminalFocus"
    },
    {
        "command": "workbench.action.terminal.kill",
        "key": "cmd+w",
        "when": "terminalFocus"
    },
    {
        "command": "workbench.action.terminal.focus",
        "key": "ctrl+`",
        "when": "!terminalFocus"
    },
    {
        "command": "workbench.action.terminal.scrollToBottom",
        "key": "end",
        "when": "terminalFocus"
    },
    {
        "command": "-workbench.action.terminal.scrollToBottom",
        "key": "cmd+end",
        "when": "terminalFocus"
    },
    {
        "command": "workbench.action.terminal.scrollToTop",
        "key": "home",
        "when": "terminalFocus"
    },
    {
        "command": "-workbench.action.terminal.scrollToTop",
        "key": "cmd+home",
        "when": "terminalFocus"
    },
    {
        "command": "workbench.action.terminal.focusPrevious",
        "key": "ctrl+shift+tab",
        "when": "terminalFocus"
    },
    {
        "command": "workbench.action.showAllSymbols",
        "key": "shift+cmd+o",
    },
    {
        "command": "-workbench.action.showAllSymbols",
        "key": "cmd+t",
    },
    {
        "command": "workbench.action.quickOpenNavigateNextInFilePicker",
        "key": "cmd+p",
        "when": "inFilesPicker && inQuickOpen"
    },
    {
        "command": "-workbench.action.quickOpenNavigateNextInFilePicker",
        "key": "cmd+p",
        "when": "inFilesPicker && inQuickOpen"
    },
    {
        "command": "workbench.action.quickOpen",
        "key": "cmd+t",
    },
    {
        "command": "-workbench.action.quickOpen",
        "key": "cmd+p",
    },
    {
        "command": "editor.action.startFindReplaceAction",
        "key": "cmd+r"
    },
    {
        "command": "workbench.action.tasks.restartTask",
        "key": "alt+cmd+b",
    },
    {
        "command": "workbench.action.editor.changeLanguageMode",
        "key": "cmd+l",
    },
    {
        "command": "-workbench.action.editor.changeLanguageMode",
        "key": "cmd+k m",
    },
    {
        "command": "-python.execSelectionInTerminal",
        "key": "shift+enter",
        "when": "editorFocus && editorLangId == 'python'"
    },
    {
        "command": "-cursorWordPartRight",
        "key": "ctrl+alt+right",
        "when": "textInputFocus"
    },
    {
        "command": "-cursorWordPartRightSelect",
        "key": "ctrl+shift+alt+right",
        "when": "textInputFocus"
    },
    {
        "command": "-cursorWordPartStartLeft",
        "key": "ctrl+alt+left",
        "when": "textInputFocus"
    },
    {
        "command": "-cursorWordPartStartLeftSelect",
        "key": "ctrl+shift+alt+left",
        "when": "textInputFocus"
    },
    {
        "command": "-deleteWordPartLeft",
        "key": "ctrl+alt+backspace",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "command": "-deleteWordPartRight",
        "key": "ctrl+alt+delete",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "command": "-workbench.action.toggleFullScreen",
        "key": "ctrl+cmd+f",
    },
    {
        "command": "-editor.action.startFindReplaceAction",
        "key": "alt+cmd+f",
    },
    {
        "command": "workbench.action.toggleFullScreen",
        "key": "ctrl+cmd+f",
    },
    {
        "command": "-extension.downloadSettings",
        "key": "shift+alt+d",
    },
    {
        "command": "-extension.updateSettings",
        "key": "shift+alt+u",
    },
    {
        "command": "-python.execSelectionInTerminal",
        "key": "shift+enter",
        "when": "editorFocus && !findInputFocussed && !replaceInputFocussed && editorLangId == 'python'"
    },
    {
        "command": "-python.datascience.runcurrentcelladvance",
        "key": "shift+enter",
        "when": "editorFocus && python.datascience.featureenabled && python.datascience.hascodecells"
    },
    {
        "command": "-python.execSelectionInTerminal",
        "key": "shift+enter",
        "when": "editorFocus && !findInputFocussed && !python.datascience.hascodecells && !replaceInputFocussed && editorLangId == 'python'"
    },
    {
        "key": "cmd+p",
        "command": "workbench.action.gotoSymbol"
    },
    {
        "key": "shift+cmd+o",
        "command": "-workbench.action.gotoSymbol"
    },
    {
        "key": "shift+cmd+enter",
        "command": "-editor.action.insertLineBefore",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "shift+cmd+enter",
        "command": "workbench.action.maximizeEditor",
        "when": "editorFocus"
    },
    {
        // note the additional `ctrl` here since we don't have a context to know if the editor is maximized
        "key": "ctrl+shift+cmd+enter",
        "command": "workbench.action.evenEditorWidths",
        "when": "editorFocus"
    },
    {
        "key": "shift+cmd+enter",
        "command": "workbench.action.toggleMaximizedPanel",
        "when": "panelFocus"
    },
    {
        "key": "cmd+k cmd+z",
        "command": "workbench.action.toggleZenMode",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+enter",
        "command": "-python.execSelectionInTerminal",
        "when": "editorFocus && !findInputFocussed && !python.datascience.ownsSelection && !replaceInputFocussed && editorLangId == 'python'"
    },
    {
        "key": "shift+enter",
        "command": "-python.datascience.execSelectionInteractive",
        "when": "editorFocus && editorHasSelection && python.datascience.featureenabled && python.datascience.ownsSelection && !findInputFocussed && !replaceInputFocussed && editorLangId == 'python'"
    },
    {
        "key": "shift+enter",
        "command": "-python.datascience.runcurrentcelladvance",
        "when": "editorFocus && python.datascience.featureenabled && python.datascience.hascodecells && !editorHasSelection"
    },
    {
        "key": "shift+cmd+l",
        "command": "-editor.action.selectHighlights",
        "when": "editorFocus"
    },
    {
        "key": "shift+cmd+l",
        "command": "editor.action.indentUsingSpaces"
    },
    {
        "key": "cmd+0",
        "command": "-workbench.action.focusSideBar"
    },
    {
        "key": "cmd+0",
        "command": "workbench.action.zoomReset"
    },
    {
        "key": "alt+cmd+right",
        "command": "-workbench.action.nextEditor"
    },
    {
        "key": "alt+cmd+left",
        "command": "-workbench.action.previousEditor"
    },
    {
        "key": "shift+cmd+\\",
        "command": "workbench.action.splitEditorOrthogonal"
    },
    {
        "key": "cmd+k cmd+\\",
        "command": "-workbench.action.splitEditorOrthogonal"
    },
    {
        "key": "shift+cmd+\\",
        "command": "-editor.action.jumpToBracket",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+cmd+right",
        "command": "workbench.action.focusRightGroup",
        "when": "!terminalFocus"
    },
    {
        "key": "cmd+k cmd+right",
        "command": "-workbench.action.focusRightGroup"
    },
    {
        "key": "alt+cmd+left",
        "command": "workbench.action.focusLeftGroup",
        "when": "!terminalFocus"
    },
    {
        "key": "cmd+k cmd+left",
        "command": "-workbench.action.focusLeftGroup"
    },
    {
        "key": "alt+cmd+up",
        "command": "workbench.action.focusAboveGroup"
    },
    {
        "key": "cmd+k cmd+up",
        "command": "-workbench.action.focusAboveGroup"
    },
    {
        "key": "alt+cmd+down",
        "command": "workbench.action.focusBelowGroup"
    },
    {
        "key": "cmd+k cmd+down",
        "command": "-workbench.action.focusBelowGroup"
    },
    {
        "key": "alt+cmd+up",
        "command": "-editor.action.insertCursorAbove",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+cmd+down",
        "command": "-editor.action.insertCursorBelow",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+cmd+r",
        "command": "-revealFileInOS",
        "when": "!editorFocus"
    },
    {
        "key": "cmd+k shift+cmd+s",
        "command": "workbench.files.action.showActiveFileInExplorer"
    },
    {
        "key": "ctrl+enter",
        "command": "-python.datascience.runcurrentcell",
        "when": "editorTextFocus && python.datascience.featureenabled && python.datascience.hascodecells && !editorHasSelection"
    },
    {
        "key": "shift+enter",
        "command": "-python.datascience.runcurrentcelladvance",
        "when": "editorTextFocus && python.datascience.featureenabled && python.datascience.hascodecells && !editorHasSelection"
    },
    {
        "key": "shift+enter",
        "command": "-python.datascience.execSelectionInteractive",
        "when": "editorTextFocus && python.datascience.featureenabled && python.datascience.ownsSelection && !findInputFocussed && !replaceInputFocussed && editorLangId == 'python'"
    },
    {
        "key": "shift+enter",
        "command": "-python.execSelectionInTerminal",
        "when": "editorTextFocus && !findInputFocussed && !python.datascience.ownsSelection && !replaceInputFocussed && editorLangId == 'python'"
    },
    {
        "key": "cmd+enter",
        "command": "-search.action.openInEditor",
        "when": "hasSearchResult && searchViewletFocus"
    },
    {
        "key": "cmd+enter",
        "command": "search.action.replaceAll",
        "when": "replaceActive && searchViewletFocus && !findWidgetVisible"
    }
]
